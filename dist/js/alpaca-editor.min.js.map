{"version":3,"sources":["angular-drag-and-drop-lists.js","ng-flow-standalone.js","angular-resizable.js","ng-tags-input.js","rzslider.js","dirPagination.js","alpaca-editor.js","alpaca-field.js","collections-controller.js","demo-controller.js","device-preview.js"],"names":["dndLists","filterEffects","effects","effectAllowed","filter","effect","toLowerCase","indexOf","MIME_TYPE","EDGE_MIME_TYPE","MSIE_MIME_TYPE","ALL_EFFECTS","directive","$parse","$timeout","scope","element","attr","dndDisableIf","$watch","disabled","on","event","originalEvent","dndState","isDragging","itemType","dndType","$eval","dropEffect","dndEffectAllowed","dataTransfer","item","dndDraggable","mimeType","setData","angular","toJson","e","data","type","effectsAllowed","addClass","_dndHandle","setDragImage","dndDragstart","dndCallback","callback","params","stopPropagation","$apply","cb","copy","link","move","none","dndDragend","undefined","removeClass","dndSelected","this","dragDrop","getMimeType","types","i","length","substr","getItemType","isDropAllowed","listSettings","externalSources","allowedTypes","getDropEffect","ignoreDataTransfer","ctrlKey","altKey","stopDragover","placeholder","remove","invokeCallback","expression","index","external","getPlaceholderIndex","Array","prototype","call","listNode","children","placeholderNode","getPlaceholderElement","forEach","childNode","child","hasClass","dndAllowedTypes","isArray","join","split","dndExternalSources","horizontal","dndHorizontalList","preventDefault","parentNode","append","target","listItemNode","rect","getBoundingClientRect","isFirstHalf","clientX","left","width","clientY","top","height","insertBefore","nextSibling","dndDragover","JSON","parse","getData","dndDrop","dndList","splice","dndInserted","newTarget","document","elementFromPoint","contains","_dndPhShown","module","window","Flow","opts","support","File","Blob","FileList","slice","webkitSlice","mozSlice","supportDirectory","test","navigator","userAgent","files","defaults","chunkSize","forceChunkSize","simultaneousUploads","singleFile","fileParameterName","progressCallbacksInterval","speedSmoothingFactor","query","headers","withCredentials","preprocess","method","testMethod","uploadMethod","prioritizeFirstAndLastChunk","allowDuplicateUploads","testChunks","generateUniqueIdentifier","maxChunkRetries","chunkRetryInterval","permanentErrors","successStatuses","onDropStopPropagation","initFileFn","readFileFn","webAPIFileRead","events","$","onDrop","items","webkitGetAsEntry","webkitReadDataTransfer","addFiles","preventEvent","extend","FlowFile","flowObj","file","bytes","name","fileName","size","relativePath","webkitRelativePath","uniqueIdentifier","chunks","paused","error","averageSpeed","currentSpeed","_lastProgressCallback","Date","now","_prevUploadedSize","_prevProgress","bootstrap","fileObj","startByte","endByte","fileType","chunk","function_name","readFinished","FlowChunk","offset","tested","retries","pendingRetry","preprocessState","readState","loaded","total","computeEndByte","Math","min","xhr","args","arguments","unshift","chunkEvent","apply","progressHandler","lengthComputable","testHandler","status","message","uploadNextChunk","send","doneHandler","abort","retryInterval","setTimeout","arrayRemove","array","value","evalOpts","async","fn","context","bind","dst","src","each","obj","key","hasOwnProperty","ie10plus","msPointerEnabled","push","off","fire","readDirectory","reader","readEntries","entries","queue","entry","isFile","fullPath","fileReadSuccess","readError","isDirectory","createReader","decrement","substring","fileError","getAsFile","custom","replace","preventEvents","found","outstanding","isComplete","assignBrowse","domNodes","attributes","Element","domNode","input","tagName","createElement","setAttribute","style","visibility","position","appendChild","addEventListener","click","assignDrop","unAssignDrop","removeEventListener","isUploading","uploading","_shouldUploadNext","num","should","upload","ret","started","resume","pause","cancel","progress","totalDone","totalSize","addFile","fileList","getFromUniqueIdentifier","f","removeFile","getSize","sizeUploaded","timeRemaining","sizeDelta","Number","POSITIVE_INFINITY","floor","measureSpeed","timeSpan","smoothingFactor","uploaded","max","reset","c","retry","round","ceil","bytesLoaded","percent","delta","getType","getExtension","lastIndexOf","getParams","flowChunkNumber","flowChunkSize","flowCurrentChunkSize","flowTotalSize","flowIdentifier","flowFilename","flowRelativePath","flowTotalChunks","getTarget","XMLHttpRequest","prepareXhrRequest","preprocessFinished","read","isTest","readyState","responseText","s","paramsMethod","blob","v","k","encodeURIComponent","FormData","open","setRequestHeader","version","exports","define","amd","provider","factory","options","$get","create","flow","controller","$scope","$attrs","flowFactory","flowInit","flowObject","catchAllHandler","eventName","shift","$broadcast","concat","filesSubmitted","fileSuccess","complete","defaultPrevented","$on","$flow","flowName","assign","restrict","require","attrs","isSingleFile","inputAttrs","flowAttrs","isFileDrag","dragEvent","fileDrag","val","promise","enter","flowDragEnter","flowDragLeave","flowDropEnabled","capitaliseFirstLetter","string","charAt","toUpperCase","fileProgress","fileAdded","filesAdded","fileRetry","uploadStart","eventArgs","funcArgs","flowImg","fileReader","FileReader","readAsDataURL","onload","$set","result","transfers","throttle","fun","toCall","rDirections","rCenteredX","rCenteredY","rWidth","rHeight","rFlex","rGrabber","rDisabled","rNoThrottle","flexBasis","documentElement","w","h","start","dragDir","axis","getComputedStyle","dir","vx","vy","inner","info","updateInfo","parseInt","id","evt","getClientX","touches","getClientY","dragging","resizingEmit","$emit","prop","dragEnd","dragStart","direction","getPropertyValue","cancelBubble","returnValue","grabber","innerHTML","ondragstart","down","which","KEYS","backspace","tab","escape","space","up","right","delete","comma","MAX_SAFE_INTEGER","SUPPORTED_INPUT_TYPES","tagsInput","$document","$window","$q","tagsInputConfig","tiUtil","TagList","onTagAdding","onTagRemoving","getTagText","setTagText","canAddTag","canRemoveTag","self","tag","safeToString","displayProperty","text","tagText","valid","minLength","maxLength","allowedTagsPattern","findInObjectArray","keyProperty","when","$tag","then","promisifyValue","addText","add","replaceSpacesWithDashes","trigger","catch","clearSelection","select","selected","selectPrior","selectNext","removeSelected","validateType","tags","templateScope","tagClass","onTagAdded","onInvalidTag","onTagRemoved","onTagClicked","transclude","templateUrl","$element","simplePubSub","load","template","String","tabindex","removeTagSymbol","fromCharCode","Boolean","addOnEnter","addOnSpace","addOnComma","addOnBlur","addOnPaste","pasteSplitPattern","RegExp","enableEditingLastTag","minTags","maxTags","allowLeftoverText","addFromAutocompleteOnly","spellcheck","tagList","handleUndefinedResult","registerAutocomplete","find","addTag","getTags","getCurrentTagText","newTag","getOptions","getTemplateScope","handler","registerTagItem","removeTag","ngModelCtrl","setElementValidity","focusInput","hotkeys","validationOptions","$setValidity","hasFocus","focus","$isEmpty","isDefined","invalid","track","getTagClass","$index","$selected","makeObjectArray","$validate","$observe","eventHandlers","keydown","$event","blur","activeElement","lostFocusToBrowserWindow","lostFocusToChildElement","paste","getTextData","clipboardData","host","$setDirty","triggerHandler","shouldAdd","shouldRemove","shouldSelect","shouldEditLastTag","keyCode","addKeys","isModifierOn","tagsInputCtrl","$$template","$$removeTagSymbol","$getDisplayText","$removeTag","$sce","SuggestionList","loadFn","getDifference","lastPromise","getTagId","array1","array2","a","b","defaultComparer","visible","show","selectFirstMatch","debounce","$query","maxResultsToShow","debounceDelay","scrollToElement","root","eq","parent","elementTop","elementHeight","parentHeight","parentScrollTop","source","matchClass","highlightMatchedText","loadOnDownArrow","loadOnEmpty","loadOnFocus","suggestionList","registerAutocompleteMatch","getQuery","shouldLoadSuggestions","addSuggestionByIndex","addSuggestion","added","getSuggestionClass","$match","handled","stopImmediatePropagation","autoCompleteCtrl","autoComplete","$parent","$highlight","safeHighlight","trustAsHtml","ctrl","transcludeFn","clone","span","resize","getTextAutosizeThreshold","css","originalValue","isString","$parsers","$formatters","$modelValue","tiBindAttrs","globalDefaults","interpolationStatus","autosizeThreshold","setDefaults","setActiveInterpolation","setTextAutosizeThreshold","threshold","$interpolate","converters","defaultValidator","localDefault","validator","converter","getDefault","updateValue","globalValue","newValue","delay","timeoutId","isObject","newArray","comparer","some","str","escapeRegexChars","encodeHTML","match","isUndefined","toString","trim","valueIfUndefined","shiftKey","metaKey","names","first","handlers","every","run","$templateCache","put","angularObj","defaultOptions","step","precision","minRange","maxRange","pushRange","minLimit","maxLimit","translate","getLegend","stepsArray","bindIndexForStepsArray","draggableRange","draggableRangeOnly","showSelectionBar","showSelectionBarEnd","showSelectionBarFromValue","hidePointerLabels","hideLimitLabels","autoHideLimitLabels","readOnly","interval","showTicks","showTicksValues","ticksArray","ticksTooltip","ticksValuesTooltip","vertical","getSelectionBarColor","getTickColor","getPointerColor","keyboardSupport","scale","enforceStep","enforceRange","noSwitching","onlyBindHandles","onStart","onChange","onEnd","rightToLeft","boundPointerLabels","mergeRangeLabelsIfSame","customTemplateScope","logScale","customValueToPosition","customPositionToValue","selectionBarGradient","globalOptions","func","wait","getTime","timeout","previous","later","remaining","trailing","$compile","RzSliderOptions","rzThrottle","Slider","sliderElem","lowValue","highValue","range","rzSliderModel","rzSliderHigh","active","difference","lowLimit","highLimit","positionProperty","dimensionProperty","handleHalfDim","maxPos","tracking","minValue","maxValue","valueRange","intermediateTicks","initHasRun","firstKeyDown","internalChange","cmbLabelShown","currentFocusElement","fullBar","selBar","minH","maxH","flrLab","ceilLab","minLab","maxLab","cmbLab","ticks","init","thrLow","thrHigh","calcDimFn","calcViewDimensions","applyOptions","syncLowValue","syncHighValue","initElemHandles","manageElementsStyle","setDisabledState","setMinAndMax","addAccessibility","updateCeilLab","updateFloorLab","initHandles","manageEventsBindings","onLowHandleChange","onHighHandleChange","resetLabelsValue","resetSlider","oldValue","unbindEvents","findStepIndex","modelValue","isDate","getStepValue","sliderValue","applyLowValue","applyHighValue","updateLowHandle","valueToPosition","updateSelectionBar","updateTicksScale","updateAriaAttributes","updateCmbLabel","updateHighHandle","sliderOptions","rzSliderOptions","isNumber","parseStepsArray","customTrFn","legend","refocusPointerIfNeeded","onPointerFocus","pointer","ref","focusElement","elem","jElem","rzsp","alwaysHide","hideLabelsForTicks","el","hide","rzAlwaysHide","hideEl","showEl","bindEvents","rzsv","translateFn","label","useCustomTr","valStr","getDimension","noLabelInjection","rzsd","html","Error","roundStep","sanitizeValue","aria-valuenow","aria-valuetext","aria-valuemin","aria-valuemax","handleWidth","barDimension","getTicksArray","reverse","map","tick","isTickSelected","transform","tooltip","tooltipPlacement","getDisplayValue","valueTooltip","valueTooltipPlacement","center","setPosition","updateHandles","newPos","getHandleLabelPos","labelName","labelRzsd","nearHandlePos","endOfBarPos","pointercolor","minPointerStyle","backgroundColor","shFloorCeil","maxPointerStyle","flHidden","clHidden","isMinLabAtFloor","isLabelBelowFloorLab","isMinLabAtCeil","isLabelAboveCeilLab","isMaxLabAtCeil","isCmbLabAtFloor","isCmbLabAtCeil","hideCeil","hideFloor","isRTL","pos","dim","floorPos","floorDim","ceilPos","ceilDim","dimension","isSelectionBarFromRight","positionForRange","abs","centerPosition","isModelGreaterThanCenter","setDimension","color","barStyle","reversed","backgroundImage","from","to","backgroundPosition","backgroundSize","pointerType","isLabelOverlap","lowTr","highTr","labelVal","customStep","steppedDifference","parseFloat","toPrecision","toFixed","bottom","linearValueToPosition","logValueToPosition","minVal","maxVal","log","positionToValue","linearPositionToValue","logPositionToValue","exp","getEventXY","clientXY","getEventPosition","sliderPos","eventPos","getEventNames","eventNames","moveEvent","endEvent","getNearestHandle","distanceMin","distanceMax","DOM_ELEMENT","barTracking","barStart","barMove","onDragStart","onDragMove","onMove","onTickClick","ehMove","ehEnd","one","callOnStart","fromTick","ceilValue","flrValue","positionTrackingHandle","moveEventName","callOnEnd","onPointerBlur","onKeyboardEvent","onKeyUp","getKeyActions","currentValue","increaseStep","decreaseStep","increasePage","decreasePage","actions","UP","DOWN","LEFT","RIGHT","PAGEUP","PAGEDOWN","HOME","END","keys","38","40","37","39","33","34","36","35","action","newMinValue","newMaxValue","positionTrackingBar","getValue","outOfBounds","isAbove","ceilLimit","flrLimit","isUnderFlrLimit","isOverCeilLimit","flrH","ceilH","applyModel","valueChanged","applyMinMaxLimit","applyPushRange","applyMinMaxRange","oppositeValue","callOnChange","$evalAsync","RzSlider","rzSliderTplUrl","slider","dirPaginateDirective","paginationService","dirPaginationCompileFn","tElement","tAttrs","dirPaginate","filterPattern","itemsPerPageFilterRemoved","collectionGetter","addNoCompileAttributes","rawId","paginationId","DEFAULT_ID","registerInstance","deregisterInstance","repeatExpression","getRepeatExpression","addNgRepeatToElement","removeTemporaryAttributes","compiled","currentPageGetter","makeCurrentPageGetterFn","setCurrentPageParser","totalItems","setAsyncModeTrue","setCollectionLength","setAsyncModeFalse","$watchCollection","collection","collectionLength","Object","idDefinedInFilter","hasAttribute","nodeType","removeAttr","currentPage","defaultCurrentPage","terminal","multiElement","priority","compile","noCompileDirective","dirPaginationControlsTemplateInstaller","dirPaginationControlsDirective","paginationTemplate","dirPaginationControlsLinkFn","goToPage","isRegistered","isValidPageNumber","oldPageNumber","pagination","current","pages","generatePagesArray","getCollectionLength","getItemsPerPage","paginationRange","updateRangeValues","onPageChange","newPageNumber","generatePagination","page","getCurrentPage","last","setCurrent","itemsPerPage","lower","upper","numberRegex","idMessage","console","warn","maxSize","autoHide","directionLinks","boundaryLinks","previousPage","setCurrentPage","tracker","rowsPerPage","totalPages","halfWay","ellipsesNeeded","pageNumber","calculatePageNumber","openingEllipsesNeeded","closingEllipsesNeeded","DDO","templateString","getString","getPath","itemsPerPageFilter","end","isAsyncMode","setItemsPerPage","slicedObject","objKeys","lastRegisteredInstance","instances","instanceId","asyncMode","getLastInstanceId","currentPageParser","parser","paginationTemplateProvider","templatePath","setPath","path","setString","moduleName","service","addKey","defineProperty","enumerable","$key","$value","$templateRequest","tpl","after","model","field","slide","templates","searchValue","surveys","title","author","summary","img_url","date","$templateList","$schemas","$firebaseObject","config","firebase","database","$bindTo","defaultTags","tabs","icon","setTab","survey","slides","kind","content","weight","suggestions","nodes","contents","readonly","correct","schemas","maximized","maximizePreview","toggleClass","devices","iphone","material_icon","desktop","tablet","setDevice","device","setSlide","loading","search","searching","includes","background","display","align-items","justify-content","frame_size","fit","use","x","y","iframe","$directiveElement","$controller","$transclude","$children","otherScope","linked","iframeBody","contentWindow","body","appendTo"],"mappings":"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","file":"alpaca-editor.min.js","sourcesContent":["/**\r\n * angular-drag-and-drop-lists v2.1.0\r\n *\r\n * Copyright (c) 2014 Marcel Juenemann marcel@juenemann.cc\r\n * Copyright (c) 2014-2017 Google Inc.\r\n * https://github.com/marceljuenemann/angular-drag-and-drop-lists\r\n *\r\n * License: MIT\r\n */\r\n(function(dndLists) {\r\n\r\n  // In standard-compliant browsers we use a custom mime type and also encode the dnd-type in it.\r\n  // However, IE and Edge only support a limited number of mime types. The workarounds are described\r\n  // in https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\r\n  var MIME_TYPE = 'application/x-dnd';\r\n  var EDGE_MIME_TYPE = 'application/json';\r\n  var MSIE_MIME_TYPE = 'Text';\r\n\r\n  // All valid HTML5 drop effects, in the order in which we prefer to use them.\r\n  var ALL_EFFECTS = ['move', 'copy', 'link'];\r\n\r\n  /**\r\n   * Use the dnd-draggable attribute to make your element draggable\r\n   *\r\n   * Attributes:\r\n   * - dnd-draggable      Required attribute. The value has to be an object that represents the data\r\n   *                      of the element. In case of a drag and drop operation the object will be\r\n   *                      serialized and unserialized on the receiving end.\r\n   * - dnd-effect-allowed Use this attribute to limit the operations that can be performed. Valid\r\n   *                      options are \"move\", \"copy\" and \"link\", as well as \"all\", \"copyMove\",\r\n   *                      \"copyLink\" and \"linkMove\". The semantics of these operations are up to you\r\n   *                      and have to be implemented using the callbacks described below. If you\r\n   *                      allow multiple options, the user can choose between them by using the\r\n   *                      modifier keys (OS specific). The cursor will be changed accordingly,\r\n   *                      expect for IE and Edge, where this is not supported.\r\n   * - dnd-type           Use this attribute if you have different kinds of items in your\r\n   *                      application and you want to limit which items can be dropped into which\r\n   *                      lists. Combine with dnd-allowed-types on the dnd-list(s). This attribute\r\n   *                      must be a lower case string. Upper case characters can be used, but will\r\n   *                      be converted to lower case automatically.\r\n   * - dnd-disable-if     You can use this attribute to dynamically disable the draggability of the\r\n   *                      element. This is useful if you have certain list items that you don't want\r\n   *                      to be draggable, or if you want to disable drag & drop completely without\r\n   *                      having two different code branches (e.g. only allow for admins).\r\n   *\r\n   * Callbacks:\r\n   * - dnd-dragstart      Callback that is invoked when the element was dragged. The original\r\n   *                      dragstart event will be provided in the local event variable.\r\n   * - dnd-moved          Callback that is invoked when the element was moved. Usually you will\r\n   *                      remove your element from the original list in this callback, since the\r\n   *                      directive is not doing that for you automatically. The original dragend\r\n   *                      event will be provided in the local event variable.\r\n   * - dnd-copied         Same as dnd-moved, just that it is called when the element was copied\r\n   *                      instead of moved, so you probably want to implement a different logic.\r\n   * - dnd-linked         Same as dnd-moved, just that it is called when the element was linked\r\n   *                      instead of moved, so you probably want to implement a different logic.\r\n   * - dnd-canceled       Callback that is invoked if the element was dragged, but the operation was\r\n   *                      canceled and the element was not dropped. The original dragend event will\r\n   *                      be provided in the local event variable.\r\n   * - dnd-dragend        Callback that is invoked when the drag operation ended. Available local\r\n   *                      variables are event and dropEffect.\r\n   * - dnd-selected       Callback that is invoked when the element was clicked but not dragged.\r\n   *                      The original click event will be provided in the local event variable.\r\n   * - dnd-callback       Custom callback that is passed to dropzone callbacks and can be used to\r\n   *                      communicate between source and target scopes. The dropzone can pass user\r\n   *                      defined variables to this callback.\r\n   *\r\n   * CSS classes:\r\n   * - dndDragging        This class will be added to the element while the element is being\r\n   *                      dragged. It will affect both the element you see while dragging and the\r\n   *                      source element that stays at it's position. Do not try to hide the source\r\n   *                      element with this class, because that will abort the drag operation.\r\n   * - dndDraggingSource  This class will be added to the element after the drag operation was\r\n   *                      started, meaning it only affects the original element that is still at\r\n   *                      it's source position, and not the \"element\" that the user is dragging with\r\n   *                      his mouse pointer.\r\n   */\r\n  dndLists.directive('dndDraggable', ['$parse', '$timeout', function($parse, $timeout) {\r\n    return function(scope, element, attr) {\r\n      // Set the HTML5 draggable attribute on the element.\r\n      element.attr(\"draggable\", \"true\");\r\n\r\n      // If the dnd-disable-if attribute is set, we have to watch that.\r\n      if (attr.dndDisableIf) {\r\n        scope.$watch(attr.dndDisableIf, function(disabled) {\r\n          element.attr(\"draggable\", !disabled);\r\n        });\r\n      }\r\n\r\n      /**\r\n       * When the drag operation is started we have to prepare the dataTransfer object,\r\n       * which is the primary way we communicate with the target element\r\n       */\r\n      element.on('dragstart', function(event) {\r\n        event = event.originalEvent || event;\r\n\r\n        // Check whether the element is draggable, since dragstart might be triggered on a child.\r\n        if (element.attr('draggable') == 'false') return true;\r\n\r\n        // Initialize global state.\r\n        dndState.isDragging = true;\r\n        dndState.itemType = attr.dndType && scope.$eval(attr.dndType).toLowerCase();\r\n\r\n        // Set the allowed drop effects. See below for special IE handling.\r\n        dndState.dropEffect = \"none\";\r\n        dndState.effectAllowed = attr.dndEffectAllowed || ALL_EFFECTS[0];\r\n        event.dataTransfer.effectAllowed = dndState.effectAllowed;\r\n\r\n        // Internet Explorer and Microsoft Edge don't support custom mime types, see design doc:\r\n        // https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\r\n        var item = scope.$eval(attr.dndDraggable);\r\n        var mimeType = MIME_TYPE + (dndState.itemType ? ('-' + dndState.itemType) : '');\r\n        try {\r\n          event.dataTransfer.setData(mimeType, angular.toJson(item));\r\n        } catch (e) {\r\n          // Setting a custom MIME type did not work, we are probably in IE or Edge.\r\n          var data = angular.toJson({item: item, type: dndState.itemType});\r\n          try {\r\n            event.dataTransfer.setData(EDGE_MIME_TYPE, data);\r\n          } catch (e) {\r\n            // We are in Internet Explorer and can only use the Text MIME type. Also note that IE\r\n            // does not allow changing the cursor in the dragover event, therefore we have to choose\r\n            // the one we want to display now by setting effectAllowed.\r\n            var effectsAllowed = filterEffects(ALL_EFFECTS, dndState.effectAllowed);\r\n            event.dataTransfer.effectAllowed = effectsAllowed[0];\r\n            event.dataTransfer.setData(MSIE_MIME_TYPE, data);\r\n          }\r\n        }\r\n\r\n        // Add CSS classes. See documentation above.\r\n        element.addClass(\"dndDragging\");\r\n        $timeout(function() { element.addClass(\"dndDraggingSource\"); }, 0);\r\n\r\n        // Try setting a proper drag image if triggered on a dnd-handle (won't work in IE).\r\n        if (event._dndHandle && event.dataTransfer.setDragImage) {\r\n          event.dataTransfer.setDragImage(element[0], 0, 0);\r\n        }\r\n\r\n        // Invoke dragstart callback and prepare extra callback for dropzone.\r\n        $parse(attr.dndDragstart)(scope, {event: event});\r\n        if (attr.dndCallback) {\r\n          var callback = $parse(attr.dndCallback);\r\n          dndState.callback = function(params) { return callback(scope, params || {}); };\r\n        }\r\n\r\n        event.stopPropagation();\r\n      });\r\n\r\n      /**\r\n       * The dragend event is triggered when the element was dropped or when the drag\r\n       * operation was aborted (e.g. hit escape button). Depending on the executed action\r\n       * we will invoke the callbacks specified with the dnd-moved or dnd-copied attribute.\r\n       */\r\n      element.on('dragend', function(event) {\r\n        event = event.originalEvent || event;\r\n\r\n        // Invoke callbacks. Usually we would use event.dataTransfer.dropEffect to determine\r\n        // the used effect, but Chrome has not implemented that field correctly. On Windows\r\n        // it always sets it to 'none', while Chrome on Linux sometimes sets it to something\r\n        // else when it's supposed to send 'none' (drag operation aborted).\r\n        scope.$apply(function() {\r\n          var dropEffect = dndState.dropEffect;\r\n          var cb = {copy: 'dndCopied', link: 'dndLinked', move: 'dndMoved', none: 'dndCanceled'};\r\n          $parse(attr[cb[dropEffect]])(scope, {event: event});\r\n          $parse(attr.dndDragend)(scope, {event: event, dropEffect: dropEffect});\r\n        });\r\n\r\n        // Clean up\r\n        dndState.isDragging = false;\r\n        dndState.callback = undefined;\r\n        element.removeClass(\"dndDragging\");\r\n        element.removeClass(\"dndDraggingSource\");\r\n        event.stopPropagation();\r\n\r\n        // In IE9 it is possible that the timeout from dragstart triggers after the dragend handler.\r\n        $timeout(function() { element.removeClass(\"dndDraggingSource\"); }, 0);\r\n      });\r\n\r\n      /**\r\n       * When the element is clicked we invoke the callback function\r\n       * specified with the dnd-selected attribute.\r\n       */\r\n      element.on('click', function(event) {\r\n        if (!attr.dndSelected) return;\r\n\r\n        event = event.originalEvent || event;\r\n        scope.$apply(function() {\r\n          $parse(attr.dndSelected)(scope, {event: event});\r\n        });\r\n\r\n        // Prevent triggering dndSelected in parent elements.\r\n        event.stopPropagation();\r\n      });\r\n\r\n      /**\r\n       * Workaround to make element draggable in IE9\r\n       */\r\n      element.on('selectstart', function() {\r\n        if (this.dragDrop) this.dragDrop();\r\n      });\r\n    };\r\n  }]);\r\n\r\n  /**\r\n   * Use the dnd-list attribute to make your list element a dropzone. Usually you will add a single\r\n   * li element as child with the ng-repeat directive. If you don't do that, we will not be able to\r\n   * position the dropped element correctly. If you want your list to be sortable, also add the\r\n   * dnd-draggable directive to your li element(s).\r\n   *\r\n   * Attributes:\r\n   * - dnd-list             Required attribute. The value has to be the array in which the data of\r\n   *                        the dropped element should be inserted. The value can be blank if used\r\n   *                        with a custom dnd-drop handler that always returns true.\r\n   * - dnd-allowed-types    Optional array of allowed item types. When used, only items that had a\r\n   *                        matching dnd-type attribute will be dropable. Upper case characters will\r\n   *                        automatically be converted to lower case.\r\n   * - dnd-effect-allowed   Optional string expression that limits the drop effects that can be\r\n   *                        performed in the list. See dnd-effect-allowed on dnd-draggable for more\r\n   *                        details on allowed options. The default value is all.\r\n   * - dnd-disable-if       Optional boolean expresssion. When it evaluates to true, no dropping\r\n   *                        into the list is possible. Note that this also disables rearranging\r\n   *                        items inside the list.\r\n   * - dnd-horizontal-list  Optional boolean expresssion. When it evaluates to true, the positioning\r\n   *                        algorithm will use the left and right halfs of the list items instead of\r\n   *                        the upper and lower halfs.\r\n   * - dnd-external-sources Optional boolean expression. When it evaluates to true, the list accepts\r\n   *                        drops from sources outside of the current browser tab. This allows to\r\n   *                        drag and drop accross different browser tabs. The only major browser\r\n   *                        that does not support this is currently Microsoft Edge.\r\n   *\r\n   * Callbacks:\r\n   * - dnd-dragover         Optional expression that is invoked when an element is dragged over the\r\n   *                        list. If the expression is set, but does not return true, the element is\r\n   *                        not allowed to be dropped. The following variables will be available:\r\n   *                        - event: The original dragover event sent by the browser.\r\n   *                        - index: The position in the list at which the element would be dropped.\r\n   *                        - type: The dnd-type set on the dnd-draggable, or undefined if non was\r\n   *                          set. Will be null for drops from external sources in IE and Edge,\r\n   *                          since we don't know the type in those cases.\r\n   *                        - dropEffect: One of move, copy or link, see dnd-effect-allowed.\r\n   *                        - external: Whether the element was dragged from an external source.\r\n   *                        - callback: If dnd-callback was set on the source element, this is a\r\n   *                          function reference to the callback. The callback can be invoked with\r\n   *                          custom variables like this: callback({var1: value1, var2: value2}).\r\n   *                          The callback will be executed on the scope of the source element. If\r\n   *                          dnd-external-sources was set and external is true, this callback will\r\n   *                          not be available.\r\n   * - dnd-drop             Optional expression that is invoked when an element is dropped on the\r\n   *                        list. The same variables as for dnd-dragover will be available, with the\r\n   *                        exception that type is always known and therefore never null. There\r\n   *                        will also be an item variable, which is the transferred object. The\r\n   *                        return value determines the further handling of the drop:\r\n   *                        - falsy: The drop will be canceled and the element won't be inserted.\r\n   *                        - true: Signalises that the drop is allowed, but the dnd-drop\r\n   *                          callback already took care of inserting the element.\r\n   *                        - otherwise: All other return values will be treated as the object to\r\n   *                          insert into the array. In most cases you want to simply return the\r\n   *                          item parameter, but there are no restrictions on what you can return.\r\n   * - dnd-inserted         Optional expression that is invoked after a drop if the element was\r\n   *                        actually inserted into the list. The same local variables as for\r\n   *                        dnd-drop will be available. Note that for reorderings inside the same\r\n   *                        list the old element will still be in the list due to the fact that\r\n   *                        dnd-moved was not called yet.\r\n   *\r\n   * CSS classes:\r\n   * - dndPlaceholder       When an element is dragged over the list, a new placeholder child\r\n   *                        element will be added. This element is of type li and has the class\r\n   *                        dndPlaceholder set. Alternatively, you can define your own placeholder\r\n   *                        by creating a child element with dndPlaceholder class.\r\n   * - dndDragover          Will be added to the list while an element is dragged over the list.\r\n   */\r\n  dndLists.directive('dndList', ['$parse', function($parse) {\r\n    return function(scope, element, attr) {\r\n      // While an element is dragged over the list, this placeholder element is inserted\r\n      // at the location where the element would be inserted after dropping.\r\n      var placeholder = getPlaceholderElement();\r\n      placeholder.remove();\r\n\r\n      var placeholderNode = placeholder[0];\r\n      var listNode = element[0];\r\n      var listSettings = {};\r\n\r\n      /**\r\n       * The dragenter event is fired when a dragged element or text selection enters a valid drop\r\n       * target. According to the spec, we either need to have a dropzone attribute or listen on\r\n       * dragenter events and call preventDefault(). It should be noted though that no browser seems\r\n       * to enforce this behaviour.\r\n       */\r\n      element.on('dragenter', function (event) {\r\n        event = event.originalEvent || event;\r\n\r\n        // Calculate list properties, so that we don't have to repeat this on every dragover event.\r\n        var types = attr.dndAllowedTypes && scope.$eval(attr.dndAllowedTypes);\r\n        listSettings = {\r\n          allowedTypes: angular.isArray(types) && types.join('|').toLowerCase().split('|'),\r\n          disabled: attr.dndDisableIf && scope.$eval(attr.dndDisableIf),\r\n          externalSources: attr.dndExternalSources && scope.$eval(attr.dndExternalSources),\r\n          horizontal: attr.dndHorizontalList && scope.$eval(attr.dndHorizontalList)\r\n        };\r\n\r\n        var mimeType = getMimeType(event.dataTransfer.types);\r\n        if (!mimeType || !isDropAllowed(getItemType(mimeType))) return true;\r\n        event.preventDefault();\r\n      });\r\n\r\n      /**\r\n       * The dragover event is triggered \"every few hundred milliseconds\" while an element\r\n       * is being dragged over our list, or over an child element.\r\n       */\r\n      element.on('dragover', function(event) {\r\n        event = event.originalEvent || event;\r\n\r\n        // Check whether the drop is allowed and determine mime type.\r\n        var mimeType = getMimeType(event.dataTransfer.types);\r\n        var itemType = getItemType(mimeType);\r\n        if (!mimeType || !isDropAllowed(itemType)) return true;\r\n\r\n        // Make sure the placeholder is shown, which is especially important if the list is empty.\r\n        if (placeholderNode.parentNode != listNode) {\r\n          element.append(placeholder);\r\n        }\r\n\r\n        if (event.target != listNode) {\r\n          // Try to find the node direct directly below the list node.\r\n          var listItemNode = event.target;\r\n          while (listItemNode.parentNode != listNode && listItemNode.parentNode) {\r\n            listItemNode = listItemNode.parentNode;\r\n          }\r\n\r\n          if (listItemNode.parentNode == listNode && listItemNode != placeholderNode) {\r\n            // If the mouse pointer is in the upper half of the list item element,\r\n            // we position the placeholder before the list item, otherwise after it.\r\n            var rect = listItemNode.getBoundingClientRect();\r\n            if (listSettings.horizontal) {\r\n              var isFirstHalf = event.clientX < rect.left + rect.width / 2;\r\n            } else {\r\n              var isFirstHalf = event.clientY < rect.top + rect.height / 2;\r\n            }\r\n            listNode.insertBefore(placeholderNode,\r\n                isFirstHalf ? listItemNode : listItemNode.nextSibling);\r\n          }\r\n        }\r\n\r\n        // In IE we set a fake effectAllowed in dragstart to get the correct cursor, we therefore\r\n        // ignore the effectAllowed passed in dataTransfer. We must also not access dataTransfer for\r\n        // drops from external sources, as that throws an exception.\r\n        var ignoreDataTransfer = mimeType == MSIE_MIME_TYPE;\r\n        var dropEffect = getDropEffect(event, ignoreDataTransfer);\r\n        if (dropEffect == 'none') return stopDragover();\r\n\r\n        // At this point we invoke the callback, which still can disallow the drop.\r\n        // We can't do this earlier because we want to pass the index of the placeholder.\r\n        if (attr.dndDragover && !invokeCallback(attr.dndDragover, event, dropEffect, itemType)) {\r\n          return stopDragover();\r\n        }\r\n\r\n        // Set dropEffect to modify the cursor shown by the browser, unless we're in IE, where this\r\n        // is not supported. This must be done after preventDefault in Firefox.\r\n        event.preventDefault();\r\n        if (!ignoreDataTransfer) {\r\n          event.dataTransfer.dropEffect = dropEffect;\r\n        }\r\n\r\n        element.addClass(\"dndDragover\");\r\n        event.stopPropagation();\r\n        return false;\r\n      });\r\n\r\n      /**\r\n       * When the element is dropped, we use the position of the placeholder element as the\r\n       * position where we insert the transferred data. This assumes that the list has exactly\r\n       * one child element per array element.\r\n       */\r\n      element.on('drop', function(event) {\r\n        event = event.originalEvent || event;\r\n\r\n        // Check whether the drop is allowed and determine mime type.\r\n        var mimeType = getMimeType(event.dataTransfer.types);\r\n        var itemType = getItemType(mimeType);\r\n        if (!mimeType || !isDropAllowed(itemType)) return true;\r\n\r\n        // The default behavior in Firefox is to interpret the dropped element as URL and\r\n        // forward to it. We want to prevent that even if our drop is aborted.\r\n        event.preventDefault();\r\n\r\n        // Unserialize the data that was serialized in dragstart.\r\n        try {\r\n          var data = JSON.parse(event.dataTransfer.getData(mimeType));\r\n        } catch(e) {\r\n          return stopDragover();\r\n        }\r\n\r\n        // Drops with invalid types from external sources might not have been filtered out yet.\r\n        if (mimeType == MSIE_MIME_TYPE || mimeType == EDGE_MIME_TYPE) {\r\n          itemType = data.type || undefined;\r\n          data = data.item;\r\n          if (!isDropAllowed(itemType)) return stopDragover();\r\n        }\r\n\r\n        // Special handling for internal IE drops, see dragover handler.\r\n        var ignoreDataTransfer = mimeType == MSIE_MIME_TYPE;\r\n        var dropEffect = getDropEffect(event, ignoreDataTransfer);\r\n        if (dropEffect == 'none') return stopDragover();\r\n\r\n        // Invoke the callback, which can transform the transferredObject and even abort the drop.\r\n        var index = getPlaceholderIndex();\r\n        if (attr.dndDrop) {\r\n          data = invokeCallback(attr.dndDrop, event, dropEffect, itemType, index, data);\r\n          if (!data) return stopDragover();\r\n        }\r\n\r\n        // The drop is definitely going to happen now, store the dropEffect.\r\n        dndState.dropEffect = dropEffect;\r\n        if (!ignoreDataTransfer) {\r\n          event.dataTransfer.dropEffect = dropEffect;\r\n        }\r\n\r\n        // Insert the object into the array, unless dnd-drop took care of that (returned true).\r\n        if (data !== true) {\r\n          scope.$apply(function() {\r\n            scope.$eval(attr.dndList).splice(index, 0, data);\r\n          });\r\n        }\r\n        invokeCallback(attr.dndInserted, event, dropEffect, itemType, index, data);\r\n\r\n        // Clean up\r\n        stopDragover();\r\n        event.stopPropagation();\r\n        return false;\r\n      });\r\n\r\n      /**\r\n       * We have to remove the placeholder when the element is no longer dragged over our list. The\r\n       * problem is that the dragleave event is not only fired when the element leaves our list,\r\n       * but also when it leaves a child element. Therefore, we determine whether the mouse cursor\r\n       * is still pointing to an element inside the list or not.\r\n       */\r\n      element.on('dragleave', function(event) {\r\n        event = event.originalEvent || event;\r\n\r\n        var newTarget = document.elementFromPoint(event.clientX, event.clientY);\r\n        if (listNode.contains(newTarget) && !event._dndPhShown) {\r\n          // Signalize to potential parent lists that a placeholder is already shown.\r\n          event._dndPhShown = true;\r\n        } else {\r\n          stopDragover();\r\n        }\r\n      });\r\n\r\n      /**\r\n       * Given the types array from the DataTransfer object, returns the first valid mime type.\r\n       * A type is valid if it starts with MIME_TYPE, or it equals MSIE_MIME_TYPE or EDGE_MIME_TYPE.\r\n       */\r\n      function getMimeType(types) {\r\n        if (!types) return MSIE_MIME_TYPE; // IE 9 workaround.\r\n        for (var i = 0; i < types.length; i++) {\r\n          if (types[i] == MSIE_MIME_TYPE || types[i] == EDGE_MIME_TYPE ||\r\n              types[i].substr(0, MIME_TYPE.length) == MIME_TYPE) {\r\n            return types[i];\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n\r\n      /**\r\n       * Determines the type of the item from the dndState, or from the mime type for items from\r\n       * external sources. Returns undefined if no item type was set and null if the item type could\r\n       * not be determined.\r\n       */\r\n      function getItemType(mimeType) {\r\n        if (dndState.isDragging) return dndState.itemType || undefined;\r\n        if (mimeType == MSIE_MIME_TYPE || mimeType == EDGE_MIME_TYPE) return null;\r\n        return (mimeType && mimeType.substr(MIME_TYPE.length + 1)) || undefined;\r\n      }\r\n\r\n      /**\r\n       * Checks various conditions that must be fulfilled for a drop to be allowed, including the\r\n       * dnd-allowed-types attribute. If the item Type is unknown (null), the drop will be allowed.\r\n       */\r\n      function isDropAllowed(itemType) {\r\n        if (listSettings.disabled) return false;\r\n        if (!listSettings.externalSources && !dndState.isDragging) return false;\r\n        if (!listSettings.allowedTypes || itemType === null) return true;\r\n        return itemType && listSettings.allowedTypes.indexOf(itemType) != -1;\r\n      }\r\n\r\n      /**\r\n       * Determines which drop effect to use for the given event. In Internet Explorer we have to\r\n       * ignore the effectAllowed field on dataTransfer, since we set a fake value in dragstart.\r\n       * In those cases we rely on dndState to filter effects. Read the design doc for more details:\r\n       * https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\r\n       */\r\n      function getDropEffect(event, ignoreDataTransfer) {\r\n        var effects = ALL_EFFECTS;\r\n        if (!ignoreDataTransfer) {\r\n          effects = filterEffects(effects, event.dataTransfer.effectAllowed);\r\n        }\r\n        if (dndState.isDragging) {\r\n          effects = filterEffects(effects, dndState.effectAllowed);\r\n        }\r\n        if (attr.dndEffectAllowed) {\r\n          effects = filterEffects(effects, attr.dndEffectAllowed);\r\n        }\r\n        // MacOS automatically filters dataTransfer.effectAllowed depending on the modifier keys,\r\n        // therefore the following modifier keys will only affect other operating systems.\r\n        if (!effects.length) {\r\n          return 'none';\r\n        } else if (event.ctrlKey && effects.indexOf('copy') != -1) {\r\n          return 'copy';\r\n        } else if (event.altKey && effects.indexOf('link') != -1) {\r\n          return 'link';\r\n        } else {\r\n          return effects[0];\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Small helper function that cleans up if we aborted a drop.\r\n       */\r\n      function stopDragover() {\r\n        placeholder.remove();\r\n        element.removeClass(\"dndDragover\");\r\n        return true;\r\n      }\r\n\r\n      /**\r\n       * Invokes a callback with some interesting parameters and returns the callbacks return value.\r\n       */\r\n      function invokeCallback(expression, event, dropEffect, itemType, index, item) {\r\n        return $parse(expression)(scope, {\r\n          callback: dndState.callback,\r\n          dropEffect: dropEffect,\r\n          event: event,\r\n          external: !dndState.isDragging,\r\n          index: index !== undefined ? index : getPlaceholderIndex(),\r\n          item: item || undefined,\r\n          type: itemType\r\n        });\r\n      }\r\n\r\n      /**\r\n       * We use the position of the placeholder node to determine at which position of the array the\r\n       * object needs to be inserted\r\n       */\r\n      function getPlaceholderIndex() {\r\n        return Array.prototype.indexOf.call(listNode.children, placeholderNode);\r\n      }\r\n\r\n      /**\r\n       * Tries to find a child element that has the dndPlaceholder class set. If none was found, a\r\n       * new li element is created.\r\n       */\r\n      function getPlaceholderElement() {\r\n        var placeholder;\r\n        angular.forEach(element.children(), function(childNode) {\r\n          var child = angular.element(childNode);\r\n          if (child.hasClass('dndPlaceholder')) {\r\n            placeholder = child;\r\n          }\r\n        });\r\n        return placeholder || angular.element(\"<li class='dndPlaceholder'></li>\");\r\n      }\r\n    };\r\n  }]);\r\n\r\n  /**\r\n   * Use the dnd-nodrag attribute inside of dnd-draggable elements to prevent them from starting\r\n   * drag operations. This is especially useful if you want to use input elements inside of\r\n   * dnd-draggable elements or create specific handle elements. Note: This directive does not work\r\n   * in Internet Explorer 9.\r\n   */\r\n  dndLists.directive('dndNodrag', function() {\r\n    return function(scope, element, attr) {\r\n      // Set as draggable so that we can cancel the events explicitly\r\n      element.attr(\"draggable\", \"true\");\r\n\r\n      /**\r\n       * Since the element is draggable, the browser's default operation is to drag it on dragstart.\r\n       * We will prevent that and also stop the event from bubbling up.\r\n       */\r\n      element.on('dragstart', function(event) {\r\n        event = event.originalEvent || event;\r\n\r\n        if (!event._dndHandle) {\r\n          // If a child element already reacted to dragstart and set a dataTransfer object, we will\r\n          // allow that. For example, this is the case for user selections inside of input elements.\r\n          if (!(event.dataTransfer.types && event.dataTransfer.types.length)) {\r\n            event.preventDefault();\r\n          }\r\n          event.stopPropagation();\r\n        }\r\n      });\r\n\r\n      /**\r\n       * Stop propagation of dragend events, otherwise dnd-moved might be triggered and the element\r\n       * would be removed.\r\n       */\r\n      element.on('dragend', function(event) {\r\n        event = event.originalEvent || event;\r\n        if (!event._dndHandle) {\r\n          event.stopPropagation();\r\n        }\r\n      });\r\n    };\r\n  });\r\n\r\n  /**\r\n   * Use the dnd-handle directive within a dnd-nodrag element in order to allow dragging with that\r\n   * element after all. Therefore, by combining dnd-nodrag and dnd-handle you can allow\r\n   * dnd-draggable elements to only be dragged via specific \"handle\" elements. Note that Internet\r\n   * Explorer will show the handle element as drag image instead of the dnd-draggable element. You\r\n   * can work around this by styling the handle element differently when it is being dragged. Use\r\n   * the CSS selector .dndDragging:not(.dndDraggingSource) [dnd-handle] for that.\r\n   */\r\n  dndLists.directive('dndHandle', function() {\r\n    return function(scope, element, attr) {\r\n      element.attr(\"draggable\", \"true\");\r\n\r\n      element.on('dragstart dragend', function(event) {\r\n        event = event.originalEvent || event;\r\n        event._dndHandle = true;\r\n      });\r\n    };\r\n  });\r\n\r\n  /**\r\n   * Filters an array of drop effects using a HTML5 effectAllowed string.\r\n   */\r\n  function filterEffects(effects, effectAllowed) {\r\n    if (effectAllowed == 'all') return effects;\r\n    return effects.filter(function(effect) {\r\n      return effectAllowed.toLowerCase().indexOf(effect) != -1;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * For some features we need to maintain global state. This is done here, with these fields:\r\n   * - callback: A callback function set at dragstart that is passed to internal dropzone handlers.\r\n   * - dropEffect: Set in dragstart to \"none\" and to the actual value in the drop handler. We don't\r\n   *   rely on the dropEffect passed by the browser, since there are various bugs in Chrome and\r\n   *   Safari, and Internet Explorer defaults to copy if effectAllowed is copyMove.\r\n   * - effectAllowed: Set in dragstart based on dnd-effect-allowed. This is needed for IE because\r\n   *   setting effectAllowed on dataTransfer might result in an undesired cursor.\r\n   * - isDragging: True between dragstart and dragend. Falsy for drops from external sources.\r\n   * - itemType: The item type of the dragged element set via dnd-type. This is needed because IE\r\n   *   and Edge don't support custom mime types that we can use to transfer this information.\r\n   */\r\n  var dndState = {};\r\n\r\n})(angular.module('dndLists', []));","/**\r\n * @license MIT\r\n */\r\n(function(window, document, undefined) {'use strict';\r\n  // ie10+\r\n  var ie10plus = window.navigator.msPointerEnabled;\r\n  /**\r\n   * Flow.js is a library providing multiple simultaneous, stable and\r\n   * resumable uploads via the HTML5 File API.\r\n   * @param [opts]\r\n   * @param {number} [opts.chunkSize]\r\n   * @param {bool} [opts.forceChunkSize]\r\n   * @param {number} [opts.simultaneousUploads]\r\n   * @param {bool} [opts.singleFile]\r\n   * @param {string} [opts.fileParameterName]\r\n   * @param {number} [opts.progressCallbacksInterval]\r\n   * @param {number} [opts.speedSmoothingFactor]\r\n   * @param {Object|Function} [opts.query]\r\n   * @param {Object|Function} [opts.headers]\r\n   * @param {bool} [opts.withCredentials]\r\n   * @param {Function} [opts.preprocess]\r\n   * @param {string} [opts.method]\r\n   * @param {string|Function} [opts.testMethod]\r\n   * @param {string|Function} [opts.uploadMethod]\r\n   * @param {bool} [opts.prioritizeFirstAndLastChunk]\r\n   * @param {bool} [opts.allowDuplicateUploads]\r\n   * @param {string|Function} [opts.target]\r\n   * @param {number} [opts.maxChunkRetries]\r\n   * @param {number} [opts.chunkRetryInterval]\r\n   * @param {Array.<number>} [opts.permanentErrors]\r\n   * @param {Array.<number>} [opts.successStatuses]\r\n   * @param {Function} [opts.initFileFn]\r\n   * @param {Function} [opts.readFileFn]\r\n   * @param {Function} [opts.generateUniqueIdentifier]\r\n   * @constructor\r\n   */\r\n  function Flow(opts) {\r\n    /**\r\n     * Supported by browser?\r\n     * @type {boolean}\r\n     */\r\n    this.support = (\r\n        typeof File !== 'undefined' &&\r\n        typeof Blob !== 'undefined' &&\r\n        typeof FileList !== 'undefined' &&\r\n        (\r\n          !!Blob.prototype.slice || !!Blob.prototype.webkitSlice || !!Blob.prototype.mozSlice ||\r\n          false\r\n        ) // slicing files support\r\n    );\r\n\r\n    if (!this.support) {\r\n      return ;\r\n    }\r\n\r\n    /**\r\n     * Check if directory upload is supported\r\n     * @type {boolean}\r\n     */\r\n    this.supportDirectory = /Chrome/.test(window.navigator.userAgent);\r\n\r\n    /**\r\n     * List of FlowFile objects\r\n     * @type {Array.<FlowFile>}\r\n     */\r\n    this.files = [];\r\n\r\n    /**\r\n     * Default options for flow.js\r\n     * @type {Object}\r\n     */\r\n    this.defaults = {\r\n      chunkSize: 1024 * 1024,\r\n      forceChunkSize: false,\r\n      simultaneousUploads: 3,\r\n      singleFile: false,\r\n      fileParameterName: 'file',\r\n      progressCallbacksInterval: 500,\r\n      speedSmoothingFactor: 0.1,\r\n      query: {},\r\n      headers: {},\r\n      withCredentials: false,\r\n      preprocess: null,\r\n      method: 'multipart',\r\n      testMethod: 'GET',\r\n      uploadMethod: 'POST',\r\n      prioritizeFirstAndLastChunk: false,\r\n      allowDuplicateUploads: false,\r\n      target: '/',\r\n      testChunks: true,\r\n      generateUniqueIdentifier: null,\r\n      maxChunkRetries: 0,\r\n      chunkRetryInterval: null,\r\n      permanentErrors: [404, 413, 415, 500, 501],\r\n      successStatuses: [200, 201, 202],\r\n      onDropStopPropagation: false,\r\n      initFileFn: null,\r\n      readFileFn: webAPIFileRead\r\n    };\r\n    \r\n    /**\r\n     * Current options\r\n     * @type {Object}\r\n     */\r\n    this.opts = {};\r\n\r\n    /**\r\n     * List of events:\r\n     *  key stands for event name\r\n     *  value array list of callbacks\r\n     * @type {}\r\n     */\r\n    this.events = {};\r\n\r\n    var $ = this;\r\n\r\n    /**\r\n     * On drop event\r\n     * @function\r\n     * @param {MouseEvent} event\r\n     */\r\n    this.onDrop = function (event) {\r\n      if ($.opts.onDropStopPropagation) {\r\n        event.stopPropagation();\r\n      }\r\n      event.preventDefault();\r\n      var dataTransfer = event.dataTransfer;\r\n      if (dataTransfer.items && dataTransfer.items[0] &&\r\n        dataTransfer.items[0].webkitGetAsEntry) {\r\n        $.webkitReadDataTransfer(event);\r\n      } else {\r\n        $.addFiles(dataTransfer.files, event);\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Prevent default\r\n     * @function\r\n     * @param {MouseEvent} event\r\n     */\r\n    this.preventEvent = function (event) {\r\n      event.preventDefault();\r\n    };\r\n\r\n\r\n    /**\r\n     * Current options\r\n     * @type {Object}\r\n     */\r\n    this.opts = Flow.extend({}, this.defaults, opts || {});\r\n\r\n  }\r\n\r\n  Flow.prototype = {\r\n    /**\r\n     * Set a callback for an event, possible events:\r\n     * fileSuccess(file), fileProgress(file), fileAdded(file, event),\r\n     * fileRemoved(file), fileRetry(file), fileError(file, message), \r\n     * complete(), progress(), error(message, file), pause()\r\n     * @function\r\n     * @param {string} event\r\n     * @param {Function} callback\r\n     */\r\n    on: function (event, callback) {\r\n      event = event.toLowerCase();\r\n      if (!this.events.hasOwnProperty(event)) {\r\n        this.events[event] = [];\r\n      }\r\n      this.events[event].push(callback);\r\n    },\r\n\r\n    /**\r\n     * Remove event callback\r\n     * @function\r\n     * @param {string} [event] removes all events if not specified\r\n     * @param {Function} [fn] removes all callbacks of event if not specified\r\n     */\r\n    off: function (event, fn) {\r\n      if (event !== undefined) {\r\n        event = event.toLowerCase();\r\n        if (fn !== undefined) {\r\n          if (this.events.hasOwnProperty(event)) {\r\n            arrayRemove(this.events[event], fn);\r\n          }\r\n        } else {\r\n          delete this.events[event];\r\n        }\r\n      } else {\r\n        this.events = {};\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Fire an event\r\n     * @function\r\n     * @param {string} event event name\r\n     * @param {...} args arguments of a callback\r\n     * @return {bool} value is false if at least one of the event handlers which handled this event\r\n     * returned false. Otherwise it returns true.\r\n     */\r\n    fire: function (event, args) {\r\n      // `arguments` is an object, not array, in FF, so:\r\n      args = Array.prototype.slice.call(arguments);\r\n      event = event.toLowerCase();\r\n      var preventDefault = false;\r\n      if (this.events.hasOwnProperty(event)) {\r\n        each(this.events[event], function (callback) {\r\n          preventDefault = callback.apply(this, args.slice(1)) === false || preventDefault;\r\n        }, this);\r\n      }\r\n      if (event != 'catchall') {\r\n        args.unshift('catchAll');\r\n        preventDefault = this.fire.apply(this, args) === false || preventDefault;\r\n      }\r\n      return !preventDefault;\r\n    },\r\n\r\n    /**\r\n     * Read webkit dataTransfer object\r\n     * @param event\r\n     */\r\n    webkitReadDataTransfer: function (event) {\r\n      var $ = this;\r\n      var queue = event.dataTransfer.items.length;\r\n      var files = [];\r\n      each(event.dataTransfer.items, function (item) {\r\n        var entry = item.webkitGetAsEntry();\r\n        if (!entry) {\r\n          decrement();\r\n          return ;\r\n        }\r\n        if (entry.isFile) {\r\n          // due to a bug in Chrome's File System API impl - #149735\r\n          fileReadSuccess(item.getAsFile(), entry.fullPath);\r\n        } else {\r\n          readDirectory(entry.createReader());\r\n        }\r\n      });\r\n      function readDirectory(reader) {\r\n        reader.readEntries(function (entries) {\r\n          if (entries.length) {\r\n            queue += entries.length;\r\n            each(entries, function(entry) {\r\n              if (entry.isFile) {\r\n                var fullPath = entry.fullPath;\r\n                entry.file(function (file) {\r\n                  fileReadSuccess(file, fullPath);\r\n                }, readError);\r\n              } else if (entry.isDirectory) {\r\n                readDirectory(entry.createReader());\r\n              }\r\n            });\r\n            readDirectory(reader);\r\n          } else {\r\n            decrement();\r\n          }\r\n        }, readError);\r\n      }\r\n      function fileReadSuccess(file, fullPath) {\r\n        // relative path should not start with \"/\"\r\n        file.relativePath = fullPath.substring(1);\r\n        files.push(file);\r\n        decrement();\r\n      }\r\n      function readError(fileError) {\r\n        throw fileError;\r\n      }\r\n      function decrement() {\r\n        if (--queue == 0) {\r\n          $.addFiles(files, event);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Generate unique identifier for a file\r\n     * @function\r\n     * @param {FlowFile} file\r\n     * @returns {string}\r\n     */\r\n    generateUniqueIdentifier: function (file) {\r\n      var custom = this.opts.generateUniqueIdentifier;\r\n      if (typeof custom === 'function') {\r\n        return custom(file);\r\n      }\r\n      // Some confusion in different versions of Firefox\r\n      var relativePath = file.relativePath || file.webkitRelativePath || file.fileName || file.name;\r\n      return file.size + '-' + relativePath.replace(/[^0-9a-zA-Z_-]/img, '');\r\n    },\r\n\r\n    /**\r\n     * Upload next chunk from the queue\r\n     * @function\r\n     * @returns {boolean}\r\n     * @private\r\n     */\r\n    uploadNextChunk: function (preventEvents) {\r\n      // In some cases (such as videos) it's really handy to upload the first\r\n      // and last chunk of a file quickly; this let's the server check the file's\r\n      // metadata and determine if there's even a point in continuing.\r\n      var found = false;\r\n      if (this.opts.prioritizeFirstAndLastChunk) {\r\n        each(this.files, function (file) {\r\n          if (!file.paused && file.chunks.length &&\r\n            file.chunks[0].status() === 'pending') {\r\n            file.chunks[0].send();\r\n            found = true;\r\n            return false;\r\n          }\r\n          if (!file.paused && file.chunks.length > 1 &&\r\n            file.chunks[file.chunks.length - 1].status() === 'pending') {\r\n            file.chunks[file.chunks.length - 1].send();\r\n            found = true;\r\n            return false;\r\n          }\r\n        });\r\n        if (found) {\r\n          return found;\r\n        }\r\n      }\r\n\r\n      // Now, simply look for the next, best thing to upload\r\n      each(this.files, function (file) {\r\n        if (!file.paused) {\r\n          each(file.chunks, function (chunk) {\r\n            if (chunk.status() === 'pending') {\r\n              chunk.send();\r\n              found = true;\r\n              return false;\r\n            }\r\n          });\r\n        }\r\n        if (found) {\r\n          return false;\r\n        }\r\n      });\r\n      if (found) {\r\n        return true;\r\n      }\r\n\r\n      // The are no more outstanding chunks to upload, check is everything is done\r\n      var outstanding = false;\r\n      each(this.files, function (file) {\r\n        if (!file.isComplete()) {\r\n          outstanding = true;\r\n          return false;\r\n        }\r\n      });\r\n      if (!outstanding && !preventEvents) {\r\n        // All chunks have been uploaded, complete\r\n        async(function () {\r\n          this.fire('complete');\r\n        }, this);\r\n      }\r\n      return false;\r\n    },\r\n\r\n\r\n    /**\r\n     * Assign a browse action to one or more DOM nodes.\r\n     * @function\r\n     * @param {Element|Array.<Element>} domNodes\r\n     * @param {boolean} isDirectory Pass in true to allow directories to\r\n     * @param {boolean} singleFile prevent multi file upload\r\n     * @param {Object} attributes set custom attributes:\r\n     *  http://www.w3.org/TR/html-markup/input.file.html#input.file-attributes\r\n     *  eg: accept: 'image/*'\r\n     * be selected (Chrome only).\r\n     */\r\n    assignBrowse: function (domNodes, isDirectory, singleFile, attributes) {\r\n      if (domNodes instanceof Element) {\r\n        domNodes = [domNodes];\r\n      }\r\n\r\n      each(domNodes, function (domNode) {\r\n        var input;\r\n        if (domNode.tagName === 'INPUT' && domNode.type === 'file') {\r\n          input = domNode;\r\n        } else {\r\n          input = document.createElement('input');\r\n          input.setAttribute('type', 'file');\r\n          // display:none - not working in opera 12\r\n          extend(input.style, {\r\n            visibility: 'hidden',\r\n            position: 'absolute',\r\n            width: '1px',\r\n            height: '1px'\r\n          });\r\n          // for opera 12 browser, input must be assigned to a document\r\n          domNode.appendChild(input);\r\n          // https://developer.mozilla.org/en/using_files_from_web_applications)\r\n          // event listener is executed two times\r\n          // first one - original mouse click event\r\n          // second - input.click(), input is inside domNode\r\n          domNode.addEventListener('click', function() {\r\n            input.click();\r\n          }, false);\r\n        }\r\n        if (!this.opts.singleFile && !singleFile) {\r\n          input.setAttribute('multiple', 'multiple');\r\n        }\r\n        if (isDirectory) {\r\n          input.setAttribute('webkitdirectory', 'webkitdirectory');\r\n        }\r\n        each(attributes, function (value, key) {\r\n          input.setAttribute(key, value);\r\n        });\r\n        // When new files are added, simply append them to the overall list\r\n        var $ = this;\r\n        input.addEventListener('change', function (e) {\r\n       \t  if (e.target.value) {\r\n            $.addFiles(e.target.files, e);\r\n            e.target.value = '';\r\n       \t  }\r\n        }, false);\r\n      }, this);\r\n    },\r\n\r\n    /**\r\n     * Assign one or more DOM nodes as a drop target.\r\n     * @function\r\n     * @param {Element|Array.<Element>} domNodes\r\n     */\r\n    assignDrop: function (domNodes) {\r\n      if (typeof domNodes.length === 'undefined') {\r\n        domNodes = [domNodes];\r\n      }\r\n      each(domNodes, function (domNode) {\r\n        domNode.addEventListener('dragover', this.preventEvent, false);\r\n        domNode.addEventListener('dragenter', this.preventEvent, false);\r\n        domNode.addEventListener('drop', this.onDrop, false);\r\n      }, this);\r\n    },\r\n\r\n    /**\r\n     * Un-assign drop event from DOM nodes\r\n     * @function\r\n     * @param domNodes\r\n     */\r\n    unAssignDrop: function (domNodes) {\r\n      if (typeof domNodes.length === 'undefined') {\r\n        domNodes = [domNodes];\r\n      }\r\n      each(domNodes, function (domNode) {\r\n        domNode.removeEventListener('dragover', this.preventEvent);\r\n        domNode.removeEventListener('dragenter', this.preventEvent);\r\n        domNode.removeEventListener('drop', this.onDrop);\r\n      }, this);\r\n    },\r\n\r\n    /**\r\n     * Returns a boolean indicating whether or not the instance is currently\r\n     * uploading anything.\r\n     * @function\r\n     * @returns {boolean}\r\n     */\r\n    isUploading: function () {\r\n      var uploading = false;\r\n      each(this.files, function (file) {\r\n        if (file.isUploading()) {\r\n          uploading = true;\r\n          return false;\r\n        }\r\n      });\r\n      return uploading;\r\n    },\r\n\r\n    /**\r\n     * should upload next chunk\r\n     * @function\r\n     * @returns {boolean|number}\r\n     */\r\n    _shouldUploadNext: function () {\r\n      var num = 0;\r\n      var should = true;\r\n      var simultaneousUploads = this.opts.simultaneousUploads;\r\n      each(this.files, function (file) {\r\n        each(file.chunks, function(chunk) {\r\n          if (chunk.status() === 'uploading') {\r\n            num++;\r\n            if (num >= simultaneousUploads) {\r\n              should = false;\r\n              return false;\r\n            }\r\n          }\r\n        });\r\n      });\r\n      // if should is true then return uploading chunks's length\r\n      return should && num;\r\n    },\r\n\r\n    /**\r\n     * Start or resume uploading.\r\n     * @function\r\n     */\r\n    upload: function () {\r\n      // Make sure we don't start too many uploads at once\r\n      var ret = this._shouldUploadNext();\r\n      if (ret === false) {\r\n        return;\r\n      }\r\n      // Kick off the queue\r\n      this.fire('uploadStart');\r\n      var started = false;\r\n      for (var num = 1; num <= this.opts.simultaneousUploads - ret; num++) {\r\n        started = this.uploadNextChunk(true) || started;\r\n      }\r\n      if (!started) {\r\n        async(function () {\r\n          this.fire('complete');\r\n        }, this);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Resume uploading.\r\n     * @function\r\n     */\r\n    resume: function () {\r\n      each(this.files, function (file) {\r\n        file.resume();\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Pause uploading.\r\n     * @function\r\n     */\r\n    pause: function () {\r\n      each(this.files, function (file) {\r\n        file.pause();\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Cancel upload of all FlowFile objects and remove them from the list.\r\n     * @function\r\n     */\r\n    cancel: function () {\r\n      for (var i = this.files.length - 1; i >= 0; i--) {\r\n        this.files[i].cancel();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Returns a number between 0 and 1 indicating the current upload progress\r\n     * of all files.\r\n     * @function\r\n     * @returns {number}\r\n     */\r\n    progress: function () {\r\n      var totalDone = 0;\r\n      var totalSize = 0;\r\n      // Resume all chunks currently being uploaded\r\n      each(this.files, function (file) {\r\n        totalDone += file.progress() * file.size;\r\n        totalSize += file.size;\r\n      });\r\n      return totalSize > 0 ? totalDone / totalSize : 0;\r\n    },\r\n\r\n    /**\r\n     * Add a HTML5 File object to the list of files.\r\n     * @function\r\n     * @param {File} file\r\n     * @param {Event} [event] event is optional\r\n     */\r\n    addFile: function (file, event) {\r\n      this.addFiles([file], event);\r\n    },\r\n\r\n    /**\r\n     * Add a HTML5 File object to the list of files.\r\n     * @function\r\n     * @param {FileList|Array} fileList\r\n     * @param {Event} [event] event is optional\r\n     */\r\n    addFiles: function (fileList, event) {\r\n      var files = [];\r\n      each(fileList, function (file) {\r\n        // https://github.com/flowjs/flow.js/issues/55\r\n        if ((!ie10plus || ie10plus && file.size > 0) && !(file.size % 4096 === 0 && (file.name === '.' || file.fileName === '.')) &&\r\n          (this.opts.allowDuplicateUploads || !this.getFromUniqueIdentifier(this.generateUniqueIdentifier(file)))) {\r\n          var f = new FlowFile(this, file);\r\n          if (this.fire('fileAdded', f, event)) {\r\n            files.push(f);\r\n          }\r\n        }\r\n      }, this);\r\n      if (this.fire('filesAdded', files, event)) {\r\n        each(files, function (file) {\r\n          if (this.opts.singleFile && this.files.length > 0) {\r\n            this.removeFile(this.files[0]);\r\n          }\r\n          this.files.push(file);\r\n        }, this);\r\n        this.fire('filesSubmitted', files, event);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Cancel upload of a specific FlowFile object from the list.\r\n     * @function\r\n     * @param {FlowFile} file\r\n     */\r\n    removeFile: function (file) {\r\n      for (var i = this.files.length - 1; i >= 0; i--) {\r\n        if (this.files[i] === file) {\r\n          this.files.splice(i, 1);\r\n          file.abort();\r\n          this.fire('fileRemoved', file);\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Look up a FlowFile object by its unique identifier.\r\n     * @function\r\n     * @param {string} uniqueIdentifier\r\n     * @returns {boolean|FlowFile} false if file was not found\r\n     */\r\n    getFromUniqueIdentifier: function (uniqueIdentifier) {\r\n      var ret = false;\r\n      each(this.files, function (file) {\r\n        if (file.uniqueIdentifier === uniqueIdentifier) {\r\n          ret = file;\r\n        }\r\n      });\r\n      return ret;\r\n    },\r\n\r\n    /**\r\n     * Returns the total size of all files in bytes.\r\n     * @function\r\n     * @returns {number}\r\n     */\r\n    getSize: function () {\r\n      var totalSize = 0;\r\n      each(this.files, function (file) {\r\n        totalSize += file.size;\r\n      });\r\n      return totalSize;\r\n    },\r\n\r\n    /**\r\n     * Returns the total size uploaded of all files in bytes.\r\n     * @function\r\n     * @returns {number}\r\n     */\r\n    sizeUploaded: function () {\r\n      var size = 0;\r\n      each(this.files, function (file) {\r\n        size += file.sizeUploaded();\r\n      });\r\n      return size;\r\n    },\r\n\r\n    /**\r\n     * Returns remaining time to upload all files in seconds. Accuracy is based on average speed.\r\n     * If speed is zero, time remaining will be equal to positive infinity `Number.POSITIVE_INFINITY`\r\n     * @function\r\n     * @returns {number}\r\n     */\r\n    timeRemaining: function () {\r\n      var sizeDelta = 0;\r\n      var averageSpeed = 0;\r\n      each(this.files, function (file) {\r\n        if (!file.paused && !file.error) {\r\n          sizeDelta += file.size - file.sizeUploaded();\r\n          averageSpeed += file.averageSpeed;\r\n        }\r\n      });\r\n      if (sizeDelta && !averageSpeed) {\r\n        return Number.POSITIVE_INFINITY;\r\n      }\r\n      if (!sizeDelta && !averageSpeed) {\r\n        return 0;\r\n      }\r\n      return Math.floor(sizeDelta / averageSpeed);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * FlowFile class\r\n   * @name FlowFile\r\n   * @param {Flow} flowObj\r\n   * @param {File} file\r\n   * @constructor\r\n   */\r\n  function FlowFile(flowObj, file) {\r\n\r\n    /**\r\n     * Reference to parent Flow instance\r\n     * @type {Flow}\r\n     */\r\n    this.flowObj = flowObj;\r\n    \r\n    /**\r\n     * Used to store the bytes read\r\n     * @type {Blob|string}\r\n     */\r\n    this.bytes = null;\r\n\r\n    /**\r\n     * Reference to file\r\n     * @type {File}\r\n     */\r\n    this.file = file;\r\n\r\n    /**\r\n     * File name. Some confusion in different versions of Firefox\r\n     * @type {string}\r\n     */\r\n    this.name = file.fileName || file.name;\r\n\r\n    /**\r\n     * File size\r\n     * @type {number}\r\n     */\r\n    this.size = file.size;\r\n\r\n    /**\r\n     * Relative file path\r\n     * @type {string}\r\n     */\r\n    this.relativePath = file.relativePath || file.webkitRelativePath || this.name;\r\n\r\n    /**\r\n     * File unique identifier\r\n     * @type {string}\r\n     */\r\n    this.uniqueIdentifier = flowObj.generateUniqueIdentifier(file);\r\n\r\n    /**\r\n     * List of chunks\r\n     * @type {Array.<FlowChunk>}\r\n     */\r\n    this.chunks = [];\r\n\r\n    /**\r\n     * Indicated if file is paused\r\n     * @type {boolean}\r\n     */\r\n    this.paused = false;\r\n\r\n    /**\r\n     * Indicated if file has encountered an error\r\n     * @type {boolean}\r\n     */\r\n    this.error = false;\r\n\r\n    /**\r\n     * Average upload speed\r\n     * @type {number}\r\n     */\r\n    this.averageSpeed = 0;\r\n\r\n    /**\r\n     * Current upload speed\r\n     * @type {number}\r\n     */\r\n    this.currentSpeed = 0;\r\n\r\n    /**\r\n     * Date then progress was called last time\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this._lastProgressCallback = Date.now();\r\n\r\n    /**\r\n     * Previously uploaded file size\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this._prevUploadedSize = 0;\r\n\r\n    /**\r\n     * Holds previous progress\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this._prevProgress = 0;\r\n\r\n    this.bootstrap();\r\n  }\r\n\r\n  FlowFile.prototype = {\r\n    /**\r\n     * Update speed parameters\r\n     * @link http://stackoverflow.com/questions/2779600/how-to-estimate-download-time-remaining-accurately\r\n     * @function\r\n     */\r\n    measureSpeed: function () {\r\n      var timeSpan = Date.now() - this._lastProgressCallback;\r\n      if (!timeSpan) {\r\n        return ;\r\n      }\r\n      var smoothingFactor = this.flowObj.opts.speedSmoothingFactor;\r\n      var uploaded = this.sizeUploaded();\r\n      // Prevent negative upload speed after file upload resume\r\n      this.currentSpeed = Math.max((uploaded - this._prevUploadedSize) / timeSpan * 1000, 0);\r\n      this.averageSpeed = smoothingFactor * this.currentSpeed + (1 - smoothingFactor) * this.averageSpeed;\r\n      this._prevUploadedSize = uploaded;\r\n    },\r\n\r\n    /**\r\n     * For internal usage only.\r\n     * Callback when something happens within the chunk.\r\n     * @function\r\n     * @param {FlowChunk} chunk\r\n     * @param {string} event can be 'progress', 'success', 'error' or 'retry'\r\n     * @param {string} [message]\r\n     */\r\n    chunkEvent: function (chunk, event, message) {\r\n      switch (event) {\r\n        case 'progress':\r\n          if (Date.now() - this._lastProgressCallback <\r\n            this.flowObj.opts.progressCallbacksInterval) {\r\n            break;\r\n          }\r\n          this.measureSpeed();\r\n          this.flowObj.fire('fileProgress', this, chunk);\r\n          this.flowObj.fire('progress');\r\n          this._lastProgressCallback = Date.now();\r\n          break;\r\n        case 'error':\r\n          this.error = true;\r\n          this.abort(true);\r\n          this.flowObj.fire('fileError', this, message, chunk);\r\n          this.flowObj.fire('error', message, this, chunk);\r\n          break;\r\n        case 'success':\r\n          if (this.error) {\r\n            return;\r\n          }\r\n          this.measureSpeed();\r\n          this.flowObj.fire('fileProgress', this, chunk);\r\n          this.flowObj.fire('progress');\r\n          this._lastProgressCallback = Date.now();\r\n          if (this.isComplete()) {\r\n            this.currentSpeed = 0;\r\n            this.averageSpeed = 0;\r\n            this.flowObj.fire('fileSuccess', this, message, chunk);\r\n          }\r\n          break;\r\n        case 'retry':\r\n          this.flowObj.fire('fileRetry', this, chunk);\r\n          break;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Pause file upload\r\n     * @function\r\n     */\r\n    pause: function() {\r\n      this.paused = true;\r\n      this.abort();\r\n    },\r\n\r\n    /**\r\n     * Resume file upload\r\n     * @function\r\n     */\r\n    resume: function() {\r\n      this.paused = false;\r\n      this.flowObj.upload();\r\n    },\r\n\r\n    /**\r\n     * Abort current upload\r\n     * @function\r\n     */\r\n    abort: function (reset) {\r\n      this.currentSpeed = 0;\r\n      this.averageSpeed = 0;\r\n      var chunks = this.chunks;\r\n      if (reset) {\r\n        this.chunks = [];\r\n      }\r\n      each(chunks, function (c) {\r\n        if (c.status() === 'uploading') {\r\n          c.abort();\r\n          this.flowObj.uploadNextChunk();\r\n        }\r\n      }, this);\r\n    },\r\n\r\n    /**\r\n     * Cancel current upload and remove from a list\r\n     * @function\r\n     */\r\n    cancel: function () {\r\n      this.flowObj.removeFile(this);\r\n    },\r\n\r\n    /**\r\n     * Retry aborted file upload\r\n     * @function\r\n     */\r\n    retry: function () {\r\n      this.bootstrap();\r\n      this.flowObj.upload();\r\n    },\r\n\r\n    /**\r\n     * Clear current chunks and slice file again\r\n     * @function\r\n     */\r\n    bootstrap: function () {\r\n      if (typeof this.flowObj.opts.initFileFn === \"function\") {\r\n        this.flowObj.opts.initFileFn(this);\r\n      }\r\n\r\n      this.abort(true);\r\n      this.error = false;\r\n      // Rebuild stack of chunks from file\r\n      this._prevProgress = 0;\r\n      var round = this.flowObj.opts.forceChunkSize ? Math.ceil : Math.floor;\r\n      var chunks = Math.max(\r\n        round(this.size / this.flowObj.opts.chunkSize), 1\r\n      );\r\n      for (var offset = 0; offset < chunks; offset++) {\r\n        this.chunks.push(\r\n          new FlowChunk(this.flowObj, this, offset)\r\n        );\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get current upload progress status\r\n     * @function\r\n     * @returns {number} from 0 to 1\r\n     */\r\n    progress: function () {\r\n      if (this.error) {\r\n        return 1;\r\n      }\r\n      if (this.chunks.length === 1) {\r\n        this._prevProgress = Math.max(this._prevProgress, this.chunks[0].progress());\r\n        return this._prevProgress;\r\n      }\r\n      // Sum up progress across everything\r\n      var bytesLoaded = 0;\r\n      each(this.chunks, function (c) {\r\n        // get chunk progress relative to entire file\r\n        bytesLoaded += c.progress() * (c.endByte - c.startByte);\r\n      });\r\n      var percent = bytesLoaded / this.size;\r\n      // We don't want to lose percentages when an upload is paused\r\n      this._prevProgress = Math.max(this._prevProgress, percent > 0.9999 ? 1 : percent);\r\n      return this._prevProgress;\r\n    },\r\n\r\n    /**\r\n     * Indicates if file is being uploaded at the moment\r\n     * @function\r\n     * @returns {boolean}\r\n     */\r\n    isUploading: function () {\r\n      var uploading = false;\r\n      each(this.chunks, function (chunk) {\r\n        if (chunk.status() === 'uploading') {\r\n          uploading = true;\r\n          return false;\r\n        }\r\n      });\r\n      return uploading;\r\n    },\r\n\r\n    /**\r\n     * Indicates if file is has finished uploading and received a response\r\n     * @function\r\n     * @returns {boolean}\r\n     */\r\n    isComplete: function () {\r\n      var outstanding = false;\r\n      each(this.chunks, function (chunk) {\r\n        var status = chunk.status();\r\n        if (status === 'pending' || status === 'uploading' || status === 'reading' || chunk.preprocessState === 1 || chunk.readState === 1) {\r\n          outstanding = true;\r\n          return false;\r\n        }\r\n      });\r\n      return !outstanding;\r\n    },\r\n\r\n    /**\r\n     * Count total size uploaded\r\n     * @function\r\n     * @returns {number}\r\n     */\r\n    sizeUploaded: function () {\r\n      var size = 0;\r\n      each(this.chunks, function (chunk) {\r\n        size += chunk.sizeUploaded();\r\n      });\r\n      return size;\r\n    },\r\n\r\n    /**\r\n     * Returns remaining time to finish upload file in seconds. Accuracy is based on average speed.\r\n     * If speed is zero, time remaining will be equal to positive infinity `Number.POSITIVE_INFINITY`\r\n     * @function\r\n     * @returns {number}\r\n     */\r\n    timeRemaining: function () {\r\n      if (this.paused || this.error) {\r\n        return 0;\r\n      }\r\n      var delta = this.size - this.sizeUploaded();\r\n      if (delta && !this.averageSpeed) {\r\n        return Number.POSITIVE_INFINITY;\r\n      }\r\n      if (!delta && !this.averageSpeed) {\r\n        return 0;\r\n      }\r\n      return Math.floor(delta / this.averageSpeed);\r\n    },\r\n\r\n    /**\r\n     * Get file type\r\n     * @function\r\n     * @returns {string}\r\n     */\r\n    getType: function () {\r\n      return this.file.type && this.file.type.split('/')[1];\r\n    },\r\n\r\n    /**\r\n     * Get file extension\r\n     * @function\r\n     * @returns {string}\r\n     */\r\n    getExtension: function () {\r\n      return this.name.substr((~-this.name.lastIndexOf(\".\") >>> 0) + 2).toLowerCase();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Default read function using the webAPI\r\n   *\r\n   * @function webAPIFileRead(fileObj, startByte, endByte, fileType, chunk)\r\n   *\r\n   */\r\n  function webAPIFileRead(fileObj, startByte, endByte, fileType, chunk) {\r\n    var function_name = 'slice';\r\n\r\n    if (fileObj.file.slice)\r\n      function_name =  'slice';\r\n    else if (fileObj.file.mozSlice)\r\n      function_name = 'mozSlice';\r\n    else if (fileObj.file.webkitSlice)\r\n      function_name = 'webkitSlice';\r\n\r\n    chunk.readFinished(fileObj.file[function_name](startByte, endByte, fileType));\r\n  }\r\n\r\n\r\n  /**\r\n   * Class for storing a single chunk\r\n   * @name FlowChunk\r\n   * @param {Flow} flowObj\r\n   * @param {FlowFile} fileObj\r\n   * @param {number} offset\r\n   * @constructor\r\n   */\r\n  function FlowChunk(flowObj, fileObj, offset) {\r\n\r\n    /**\r\n     * Reference to parent flow object\r\n     * @type {Flow}\r\n     */\r\n    this.flowObj = flowObj;\r\n\r\n    /**\r\n     * Reference to parent FlowFile object\r\n     * @type {FlowFile}\r\n     */\r\n    this.fileObj = fileObj;\r\n\r\n    /**\r\n     * File offset\r\n     * @type {number}\r\n     */\r\n    this.offset = offset;\r\n\r\n    /**\r\n     * Indicates if chunk existence was checked on the server\r\n     * @type {boolean}\r\n     */\r\n    this.tested = false;\r\n\r\n    /**\r\n     * Number of retries performed\r\n     * @type {number}\r\n     */\r\n    this.retries = 0;\r\n\r\n    /**\r\n     * Pending retry\r\n     * @type {boolean}\r\n     */\r\n    this.pendingRetry = false;\r\n\r\n    /**\r\n     * Preprocess state\r\n     * @type {number} 0 = unprocessed, 1 = processing, 2 = finished\r\n     */\r\n    this.preprocessState = 0;\r\n\r\n    /**\r\n     * Read state\r\n     * @type {number} 0 = not read, 1 = reading, 2 = finished\r\n     */\r\n    this.readState = 0;\r\n\r\n\r\n    /**\r\n     * Bytes transferred from total request size\r\n     * @type {number}\r\n     */\r\n    this.loaded = 0;\r\n\r\n    /**\r\n     * Total request size\r\n     * @type {number}\r\n     */\r\n    this.total = 0;\r\n\r\n    /**\r\n     * Size of a chunk\r\n     * @type {number}\r\n     */\r\n    this.chunkSize = this.flowObj.opts.chunkSize;\r\n\r\n    /**\r\n     * Chunk start byte in a file\r\n     * @type {number}\r\n     */\r\n    this.startByte = this.offset * this.chunkSize;\r\n\r\n    /**\r\n      * Compute the endbyte in a file\r\n      *\r\n      */\r\n    this.computeEndByte = function() {\r\n      var endByte = Math.min(this.fileObj.size, (this.offset + 1) * this.chunkSize);\r\n      if (this.fileObj.size - endByte < this.chunkSize && !this.flowObj.opts.forceChunkSize) {\r\n        // The last chunk will be bigger than the chunk size,\r\n        // but less than 2 * this.chunkSize\r\n        endByte = this.fileObj.size;\r\n      }\r\n      return endByte;\r\n    }\r\n\r\n    /**\r\n     * Chunk end byte in a file\r\n     * @type {number}\r\n     */\r\n    this.endByte = this.computeEndByte();\r\n\r\n    /**\r\n     * XMLHttpRequest\r\n     * @type {XMLHttpRequest}\r\n     */\r\n    this.xhr = null;\r\n\r\n    var $ = this;\r\n\r\n    /**\r\n     * Send chunk event\r\n     * @param event\r\n     * @param {...} args arguments of a callback\r\n     */\r\n    this.event = function (event, args) {\r\n      args = Array.prototype.slice.call(arguments);\r\n      args.unshift($);\r\n      $.fileObj.chunkEvent.apply($.fileObj, args);\r\n    };\r\n    /**\r\n     * Catch progress event\r\n     * @param {ProgressEvent} event\r\n     */\r\n    this.progressHandler = function(event) {\r\n      if (event.lengthComputable) {\r\n        $.loaded = event.loaded ;\r\n        $.total = event.total;\r\n      }\r\n      $.event('progress', event);\r\n    };\r\n\r\n    /**\r\n     * Catch test event\r\n     * @param {Event} event\r\n     */\r\n    this.testHandler = function(event) {\r\n      var status = $.status(true);\r\n      if (status === 'error') {\r\n        $.event(status, $.message());\r\n        $.flowObj.uploadNextChunk();\r\n      } else if (status === 'success') {\r\n        $.tested = true;\r\n        $.event(status, $.message());\r\n        $.flowObj.uploadNextChunk();\r\n      } else if (!$.fileObj.paused) {\r\n        // Error might be caused by file pause method\r\n        // Chunks does not exist on the server side\r\n        $.tested = true;\r\n        $.send();\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Upload has stopped\r\n     * @param {Event} event\r\n     */\r\n    this.doneHandler = function(event) {\r\n      var status = $.status();\r\n      if (status === 'success' || status === 'error') {\r\n        delete this.data;\r\n        $.event(status, $.message());\r\n        $.flowObj.uploadNextChunk();\r\n      } else {\r\n        $.event('retry', $.message());\r\n        $.pendingRetry = true;\r\n        $.abort();\r\n        $.retries++;\r\n        var retryInterval = $.flowObj.opts.chunkRetryInterval;\r\n        if (retryInterval !== null) {\r\n          setTimeout(function () {\r\n            $.send();\r\n          }, retryInterval);\r\n        } else {\r\n          $.send();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  FlowChunk.prototype = {\r\n    /**\r\n     * Get params for a request\r\n     * @function\r\n     */\r\n    getParams: function () {\r\n      return {\r\n        flowChunkNumber: this.offset + 1,\r\n        flowChunkSize: this.flowObj.opts.chunkSize,\r\n        flowCurrentChunkSize: this.endByte - this.startByte,\r\n        flowTotalSize: this.fileObj.size,\r\n        flowIdentifier: this.fileObj.uniqueIdentifier,\r\n        flowFilename: this.fileObj.name,\r\n        flowRelativePath: this.fileObj.relativePath,\r\n        flowTotalChunks: this.fileObj.chunks.length\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Get target option with query params\r\n     * @function\r\n     * @param params\r\n     * @returns {string}\r\n     */\r\n    getTarget: function(target, params){\r\n      if(target.indexOf('?') < 0) {\r\n        target += '?';\r\n      } else {\r\n        target += '&';\r\n      }\r\n      return target + params.join('&');\r\n    },\r\n\r\n    /**\r\n     * Makes a GET request without any data to see if the chunk has already\r\n     * been uploaded in a previous session\r\n     * @function\r\n     */\r\n    test: function () {\r\n      // Set up request and listen for event\r\n      this.xhr = new XMLHttpRequest();\r\n      this.xhr.addEventListener(\"load\", this.testHandler, false);\r\n      this.xhr.addEventListener(\"error\", this.testHandler, false);\r\n      var testMethod = evalOpts(this.flowObj.opts.testMethod, this.fileObj, this);\r\n      var data = this.prepareXhrRequest(testMethod, true);\r\n      this.xhr.send(data);\r\n    },\r\n\r\n    /**\r\n     * Finish preprocess state\r\n     * @function\r\n     */\r\n    preprocessFinished: function () {\r\n      // Re-compute the endByte after the preprocess function to allow an\r\n      // implementer of preprocess to set the fileObj size\r\n      this.endByte = this.computeEndByte();\r\n\r\n      this.preprocessState = 2;\r\n      this.send();\r\n    },\r\n\r\n    /**\r\n     * Finish read state\r\n     * @function\r\n     */\r\n    readFinished: function (bytes) {\r\n      this.readState = 2;\r\n      this.bytes = bytes;\r\n      this.send();\r\n    },\r\n\r\n\r\n    /**\r\n     * Uploads the actual data in a POST call\r\n     * @function\r\n     */\r\n    send: function () {\r\n      var preprocess = this.flowObj.opts.preprocess;\r\n      var read = this.flowObj.opts.readFileFn;\r\n      if (typeof preprocess === 'function') {\r\n        switch (this.preprocessState) {\r\n          case 0:\r\n            this.preprocessState = 1;\r\n            preprocess(this);\r\n            return;\r\n          case 1:\r\n            return;\r\n        }\r\n      }\r\n      switch (this.readState) {\r\n        case 0:\r\n          this.readState = 1;\r\n          read(this.fileObj, this.startByte, this.endByte, this.fileObj.file.type, this);\r\n          return;\r\n        case 1:\r\n          return;\r\n      }\r\n      if (this.flowObj.opts.testChunks && !this.tested) {\r\n        this.test();\r\n        return;\r\n      }\r\n\r\n      this.loaded = 0;\r\n      this.total = 0;\r\n      this.pendingRetry = false;\r\n\r\n      // Set up request and listen for event\r\n      this.xhr = new XMLHttpRequest();\r\n      this.xhr.upload.addEventListener('progress', this.progressHandler, false);\r\n      this.xhr.addEventListener(\"load\", this.doneHandler, false);\r\n      this.xhr.addEventListener(\"error\", this.doneHandler, false);\r\n\r\n      var uploadMethod = evalOpts(this.flowObj.opts.uploadMethod, this.fileObj, this);\r\n      var data = this.prepareXhrRequest(uploadMethod, false, this.flowObj.opts.method, this.bytes);\r\n      this.xhr.send(data);\r\n    },\r\n\r\n    /**\r\n     * Abort current xhr request\r\n     * @function\r\n     */\r\n    abort: function () {\r\n      // Abort and reset\r\n      var xhr = this.xhr;\r\n      this.xhr = null;\r\n      if (xhr) {\r\n        xhr.abort();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Retrieve current chunk upload status\r\n     * @function\r\n     * @returns {string} 'pending', 'uploading', 'success', 'error'\r\n     */\r\n    status: function (isTest) {\r\n      if (this.readState === 1) {\r\n        return 'reading';\r\n      } else if (this.pendingRetry || this.preprocessState === 1) {\r\n        // if pending retry then that's effectively the same as actively uploading,\r\n        // there might just be a slight delay before the retry starts\r\n        return 'uploading';\r\n      } else if (!this.xhr) {\r\n        return 'pending';\r\n      } else if (this.xhr.readyState < 4) {\r\n        // Status is really 'OPENED', 'HEADERS_RECEIVED'\r\n        // or 'LOADING' - meaning that stuff is happening\r\n        return 'uploading';\r\n      } else {\r\n        if (this.flowObj.opts.successStatuses.indexOf(this.xhr.status) > -1) {\r\n          // HTTP 200, perfect\r\n\t\t      // HTTP 202 Accepted - The request has been accepted for processing, but the processing has not been completed.\r\n          return 'success';\r\n        } else if (this.flowObj.opts.permanentErrors.indexOf(this.xhr.status) > -1 ||\r\n            !isTest && this.retries >= this.flowObj.opts.maxChunkRetries) {\r\n          // HTTP 413/415/500/501, permanent error\r\n          return 'error';\r\n        } else {\r\n          // this should never happen, but we'll reset and queue a retry\r\n          // a likely case for this would be 503 service unavailable\r\n          this.abort();\r\n          return 'pending';\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Get response from xhr request\r\n     * @function\r\n     * @returns {String}\r\n     */\r\n    message: function () {\r\n      return this.xhr ? this.xhr.responseText : '';\r\n    },\r\n\r\n    /**\r\n     * Get upload progress\r\n     * @function\r\n     * @returns {number}\r\n     */\r\n    progress: function () {\r\n      if (this.pendingRetry) {\r\n        return 0;\r\n      }\r\n      var s = this.status();\r\n      if (s === 'success' || s === 'error') {\r\n        return 1;\r\n      } else if (s === 'pending') {\r\n        return 0;\r\n      } else {\r\n        return this.total > 0 ? this.loaded / this.total : 0;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Count total size uploaded\r\n     * @function\r\n     * @returns {number}\r\n     */\r\n    sizeUploaded: function () {\r\n      var size = this.endByte - this.startByte;\r\n      // can't return only chunk.loaded value, because it is bigger than chunk size\r\n      if (this.status() !== 'success') {\r\n        size = this.progress() * size;\r\n      }\r\n      return size;\r\n    },\r\n\r\n    /**\r\n     * Prepare Xhr request. Set query, headers and data\r\n     * @param {string} method GET or POST\r\n     * @param {bool} isTest is this a test request\r\n     * @param {string} [paramsMethod] octet or form\r\n     * @param {Blob} [blob] to send\r\n     * @returns {FormData|Blob|Null} data to send\r\n     */\r\n    prepareXhrRequest: function(method, isTest, paramsMethod, blob) {\r\n      // Add data from the query options\r\n      var query = evalOpts(this.flowObj.opts.query, this.fileObj, this, isTest);\r\n      query = extend(query, this.getParams());\r\n\r\n      var target = evalOpts(this.flowObj.opts.target, this.fileObj, this, isTest);\r\n      var data = null;\r\n      if (method === 'GET' || paramsMethod === 'octet') {\r\n        // Add data from the query options\r\n        var params = [];\r\n        each(query, function (v, k) {\r\n          params.push([encodeURIComponent(k), encodeURIComponent(v)].join('='));\r\n        });\r\n        target = this.getTarget(target, params);\r\n        data = blob || null;\r\n      } else {\r\n        // Add data from the query options\r\n        data = new FormData();\r\n        each(query, function (v, k) {\r\n          data.append(k, v);\r\n        });\r\n        data.append(this.flowObj.opts.fileParameterName, blob, this.fileObj.file.name);\r\n      }\r\n\r\n      this.xhr.open(method, target, true);\r\n      this.xhr.withCredentials = this.flowObj.opts.withCredentials;\r\n\r\n      // Add data from header options\r\n      each(evalOpts(this.flowObj.opts.headers, this.fileObj, this, isTest), function (v, k) {\r\n        this.xhr.setRequestHeader(k, v);\r\n      }, this);\r\n\r\n      return data;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Remove value from array\r\n   * @param array\r\n   * @param value\r\n   */\r\n  function arrayRemove(array, value) {\r\n    var index = array.indexOf(value);\r\n    if (index > -1) {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If option is a function, evaluate it with given params\r\n   * @param {*} data\r\n   * @param {...} args arguments of a callback\r\n   * @returns {*}\r\n   */\r\n  function evalOpts(data, args) {\r\n    if (typeof data === \"function\") {\r\n      // `arguments` is an object, not array, in FF, so:\r\n      args = Array.prototype.slice.call(arguments);\r\n      data = data.apply(null, args.slice(1));\r\n    }\r\n    return data;\r\n  }\r\n  Flow.evalOpts = evalOpts;\r\n\r\n  /**\r\n   * Execute function asynchronously\r\n   * @param fn\r\n   * @param context\r\n   */\r\n  function async(fn, context) {\r\n    setTimeout(fn.bind(context), 0);\r\n  }\r\n\r\n  /**\r\n   * Extends the destination object `dst` by copying all of the properties from\r\n   * the `src` object(s) to `dst`. You can specify multiple `src` objects.\r\n   * @function\r\n   * @param {Object} dst Destination object.\r\n   * @param {...Object} src Source object(s).\r\n   * @returns {Object} Reference to `dst`.\r\n   */\r\n  function extend(dst, src) {\r\n    each(arguments, function(obj) {\r\n      if (obj !== dst) {\r\n        each(obj, function(value, key){\r\n          dst[key] = value;\r\n        });\r\n      }\r\n    });\r\n    return dst;\r\n  }\r\n  Flow.extend = extend;\r\n\r\n  /**\r\n   * Iterate each element of an object\r\n   * @function\r\n   * @param {Array|Object} obj object or an array to iterate\r\n   * @param {Function} callback first argument is a value and second is a key.\r\n   * @param {Object=} context Object to become context (`this`) for the iterator function.\r\n   */\r\n  function each(obj, callback, context) {\r\n    if (!obj) {\r\n      return ;\r\n    }\r\n    var key;\r\n    // Is Array?\r\n    // Array.isArray won't work, not only arrays can be iterated by index https://github.com/flowjs/ng-flow/issues/236#\r\n    if (typeof(obj.length) !== 'undefined') {\r\n      for (key = 0; key < obj.length; key++) {\r\n        if (callback.call(context, obj[key], key) === false) {\r\n          return ;\r\n        }\r\n      }\r\n    } else {\r\n      for (key in obj) {\r\n        if (obj.hasOwnProperty(key) && callback.call(context, obj[key], key) === false) {\r\n          return ;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  Flow.each = each;\r\n\r\n  /**\r\n   * FlowFile constructor\r\n   * @type {FlowFile}\r\n   */\r\n  Flow.FlowFile = FlowFile;\r\n\r\n  /**\r\n   * FlowFile constructor\r\n   * @type {FlowChunk}\r\n   */\r\n  Flow.FlowChunk = FlowChunk;\r\n\r\n  /**\r\n   * Library version\r\n   * @type {string}\r\n   */\r\n  Flow.version = '2.11.2';\r\n\r\n  if ( typeof module === \"object\" && module && typeof module.exports === \"object\" ) {\r\n    // Expose Flow as module.exports in loaders that implement the Node\r\n    // module pattern (including browserify). Do not create the global, since\r\n    // the user will be storing it themselves locally, and globals are frowned\r\n    // upon in the Node module world.\r\n    module.exports = Flow;\r\n  } else {\r\n    // Otherwise expose Flow to the global object as usual\r\n    window.Flow = Flow;\r\n\r\n    // Register as a named AMD module, since Flow can be concatenated with other\r\n    // files that may use define, but not via a proper concatenation script that\r\n    // understands anonymous AMD modules. A named AMD is safest and most robust\r\n    // way to register. Lowercase flow is used because AMD module names are\r\n    // derived from file names, and Flow is normally delivered in a lowercase\r\n    // file name. Do this after creating the global so that if an AMD module wants\r\n    // to call noConflict to hide this version of Flow, it will work.\r\n    if ( typeof define === \"function\" && define.amd ) {\r\n      define( \"flow\", [], function () { return Flow; } );\r\n    }\r\n  }\r\n})(window, document);\r\n\r\n/**\r\n * @description\r\n * var app = angular.module('App', ['flow.provider'], function(flowFactoryProvider){\r\n *    flowFactoryProvider.defaults = {target: '/'};\r\n * });\r\n * @name flowFactoryProvider\r\n */\r\nangular.module('flow.provider', [])\r\n.provider('flowFactory', function() {\r\n  'use strict';\r\n  /**\r\n   * Define the default properties for flow.js\r\n   * @name flowFactoryProvider.defaults\r\n   * @type {Object}\r\n   */\r\n  this.defaults = {};\r\n\r\n  /**\r\n   * Flow, MaybeFlow or NotFlow\r\n   * @name flowFactoryProvider.factory\r\n   * @type {function}\r\n   * @return {Flow}\r\n   */\r\n  this.factory = function (options) {\r\n    return new Flow(options);\r\n  };\r\n\r\n  /**\r\n   * Define the default events\r\n   * @name flowFactoryProvider.events\r\n   * @type {Array}\r\n   * @private\r\n   */\r\n  this.events = [];\r\n\r\n  /**\r\n   * Add default events\r\n   * @name flowFactoryProvider.on\r\n   * @function\r\n   * @param {string} event\r\n   * @param {Function} callback\r\n   */\r\n  this.on = function (event, callback) {\r\n    this.events.push([event, callback]);\r\n  };\r\n\r\n  this.$get = function() {\r\n    var fn = this.factory;\r\n    var defaults = this.defaults;\r\n    var events = this.events;\r\n    return {\r\n      'create': function(opts) {\r\n        // combine default options with global options and options\r\n        var flow = fn(angular.extend({}, defaults, opts));\r\n        angular.forEach(events, function (event) {\r\n          flow.on(event[0], event[1]);\r\n        });\r\n        return flow;\r\n      }\r\n    };\r\n  };\r\n});\r\nangular.module('flow.init', ['flow.provider'])\r\n  .controller('flowCtrl', ['$scope', '$attrs', '$parse', 'flowFactory',\r\n  function ($scope, $attrs, $parse, flowFactory) {\r\n\r\n    var options = angular.extend({}, $scope.$eval($attrs.flowInit));\r\n\r\n    // use existing flow object or create a new one\r\n    var flow  = $scope.$eval($attrs.flowObject) || flowFactory.create(options);\r\n\r\n    var catchAllHandler = function(eventName){\r\n      var args = Array.prototype.slice.call(arguments);\r\n      args.shift();\r\n      var event = $scope.$broadcast.apply($scope, ['flow::' + eventName, flow].concat(args));\r\n      if ({\r\n        'progress':1, 'filesSubmitted':1, 'fileSuccess': 1, 'fileError': 1, 'complete': 1\r\n      }[eventName]) {\r\n        $scope.$apply();\r\n      }\r\n      if (event.defaultPrevented) {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    flow.on('catchAll', catchAllHandler);\r\n    $scope.$on('$destroy', function(){\r\n        flow.off('catchAll', catchAllHandler);\r\n    });\r\n\r\n    $scope.$flow = flow;\r\n\r\n    if ($attrs.hasOwnProperty('flowName')) {\r\n      $parse($attrs.flowName).assign($scope, flow);\r\n      $scope.$on('$destroy', function () {\r\n        $parse($attrs.flowName).assign($scope);\r\n      });\r\n    }\r\n  }])\r\n  .directive('flowInit', [function() {\r\n    return {\r\n      scope: true,\r\n      controller: 'flowCtrl'\r\n    };\r\n  }]);\r\nangular.module('flow.btn', ['flow.init'])\r\n.directive('flowBtn', [function() {\r\n  return {\r\n    'restrict': 'EA',\r\n    'scope': false,\r\n    'require': '^flowInit',\r\n    'link': function(scope, element, attrs) {\r\n      var isDirectory = attrs.hasOwnProperty('flowDirectory');\r\n      var isSingleFile = attrs.hasOwnProperty('flowSingleFile');\r\n      var inputAttrs = attrs.hasOwnProperty('flowAttrs') && scope.$eval(attrs.flowAttrs);\r\n      scope.$flow.assignBrowse(element, isDirectory, isSingleFile, inputAttrs);\r\n    }\r\n  };\r\n}]);\r\nangular.module('flow.dragEvents', ['flow.init'])\r\n/**\r\n * @name flowPreventDrop\r\n * Prevent loading files then dropped on element\r\n */\r\n  .directive('flowPreventDrop', function() {\r\n    return {\r\n      'scope': false,\r\n      'link': function(scope, element, attrs) {\r\n        element.bind('drop dragover', function (event) {\r\n          event.preventDefault();\r\n        });\r\n      }\r\n    };\r\n  })\r\n/**\r\n * @name flowDragEnter\r\n * executes `flowDragEnter` and `flowDragLeave` events\r\n */\r\n  .directive('flowDragEnter', ['$timeout', function($timeout) {\r\n    return {\r\n      'scope': false,\r\n      'link': function(scope, element, attrs) {\r\n        var promise;\r\n        var enter = false;\r\n        element.bind('dragover', function (event) {\r\n          if (!isFileDrag(event)) {\r\n            return ;\r\n          }\r\n          if (!enter) {\r\n            scope.$apply(attrs.flowDragEnter);\r\n            enter = true;\r\n          }\r\n          $timeout.cancel(promise);\r\n          event.preventDefault();\r\n        });\r\n        element.bind('dragleave drop', function (event) {\r\n          $timeout.cancel(promise);\r\n          promise = $timeout(function () {\r\n            scope.$eval(attrs.flowDragLeave);\r\n            promise = null;\r\n            enter = false;\r\n          }, 100);\r\n        });\r\n        function isFileDrag(dragEvent) {\r\n          var fileDrag = false;\r\n          var dataTransfer = dragEvent.dataTransfer || dragEvent.originalEvent.dataTransfer;\r\n          angular.forEach(dataTransfer && dataTransfer.types, function(val) {\r\n            if (val === 'Files') {\r\n              fileDrag = true;\r\n            }\r\n          });\r\n          return fileDrag;\r\n        }\r\n      }\r\n    };\r\n  }]);\r\n\r\nangular.module('flow.drop', ['flow.init'])\r\n.directive('flowDrop', function() {\r\n  return {\r\n    'scope': false,\r\n    'require': '^flowInit',\r\n    'link': function(scope, element, attrs) {\r\n      if (attrs.flowDropEnabled) {\r\n        scope.$watch(attrs.flowDropEnabled, function (value) {\r\n          if (value) {\r\n            assignDrop();\r\n          } else {\r\n            unAssignDrop();\r\n          }\r\n        });\r\n      } else {\r\n        assignDrop();\r\n      }\r\n      function assignDrop() {\r\n        scope.$flow.assignDrop(element);\r\n      }\r\n      function unAssignDrop() {\r\n        scope.$flow.unAssignDrop(element);\r\n      }\r\n    }\r\n  };\r\n});\r\n\r\n!function (angular) {'use strict';\r\n  var module = angular.module('flow.events', ['flow.init']);\r\n  var events = {\r\n    fileSuccess: ['$file', '$message'],\r\n    fileProgress: ['$file'],\r\n    fileAdded: ['$file', '$event'],\r\n    filesAdded: ['$files', '$event'],\r\n    filesSubmitted: ['$files', '$event'],\r\n    fileRetry: ['$file'],\r\n    fileError: ['$file', '$message'],\r\n    uploadStart: [],\r\n    complete: [],\r\n    progress: [],\r\n    error: ['$message', '$file']\r\n  };\r\n\r\n  angular.forEach(events, function (eventArgs, eventName) {\r\n    var name = 'flow' + capitaliseFirstLetter(eventName);\r\n    if (name == 'flowUploadStart') {\r\n      name = 'flowUploadStarted';// event alias\r\n    }\r\n    module.directive(name, [function() {\r\n      return {\r\n        require: '^flowInit',\r\n        controller: ['$scope', '$attrs', function ($scope, $attrs) {\r\n          $scope.$on('flow::' + eventName, function () {\r\n            var funcArgs = Array.prototype.slice.call(arguments);\r\n            var event = funcArgs.shift();// remove angular event\r\n            // remove flow object and ignore event if it is from parent directive\r\n            if ($scope.$flow !== funcArgs.shift()) {\r\n              return ;\r\n            }\r\n            var args = {};\r\n            angular.forEach(eventArgs, function(value, key) {\r\n              args[value] = funcArgs[key];\r\n            });\r\n            if ($scope.$eval($attrs[name], args) === false) {\r\n              event.preventDefault();\r\n            }\r\n          });\r\n        }]\r\n      };\r\n    }]);\r\n  });\r\n\r\n  function capitaliseFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n}(angular);\r\nangular.module('flow.img', ['flow.init'])\r\n.directive('flowImg', [function() {\r\n  return {\r\n    'scope': false,\r\n    'require': '^flowInit',\r\n    'link': function(scope, element, attrs) {\r\n      var file = attrs.flowImg;\r\n      scope.$watch(file, function (file) {\r\n        if (!file) {\r\n          return ;\r\n        }\r\n        var fileReader = new FileReader();\r\n        fileReader.readAsDataURL(file.file);\r\n        fileReader.onload = function (event) {\r\n          scope.$apply(function () {\r\n            attrs.$set('src', event.target.result);\r\n          });\r\n        };\r\n      });\r\n    }\r\n  };\r\n}]);\r\nangular.module('flow.transfers', ['flow.init'])\r\n.directive('flowTransfers', [function() {\r\n  return {\r\n    'scope': true,\r\n    'require': '^flowInit',\r\n    'link': function(scope) {\r\n      scope.transfers = scope.$flow.files;\r\n    }\r\n  };\r\n}]);\r\nangular.module('flow', ['flow.provider', 'flow.init', 'flow.events', 'flow.btn',\r\n  'flow.drop', 'flow.transfers', 'flow.img', 'flow.dragEvents']);","angular.module('angularResizable', [])\r\n    .directive('resizable', function() {\r\n        var toCall;\r\n        function throttle(fun) {\r\n            if (toCall === undefined) {\r\n                toCall = fun;\r\n                setTimeout(function() {\r\n                    toCall();\r\n                    toCall = undefined;\r\n                }, 100);\r\n            } else {\r\n                toCall = fun;\r\n            }\r\n        }\r\n        return {\r\n            restrict: 'AE',\r\n            scope: {\r\n                rDirections: '=',\r\n                rCenteredX: '=',\r\n                rCenteredY: '=',\r\n                rWidth: '=',\r\n                rHeight: '=',\r\n                rFlex: '=',\r\n                rGrabber: '@',\r\n                rDisabled: '@',\r\n                rNoThrottle: '='\r\n            },\r\n            link: function(scope, element, attr) {\r\n                var flexBasis = 'flexBasis' in document.documentElement.style ? 'flexBasis' :\r\n                    'webkitFlexBasis' in document.documentElement.style ? 'webkitFlexBasis' :\r\n                    'msFlexPreferredSize' in document.documentElement.style ? 'msFlexPreferredSize' : 'flexBasis';\r\n\r\n                // register watchers on width and height attributes if they are set\r\n                scope.$watch('rWidth', function(value){\r\n                    element[0].style[scope.rFlex ? flexBasis : 'width'] = scope.rWidth + 'px';\r\n                });\r\n                scope.$watch('rHeight', function(value){\r\n                    element[0].style[scope.rFlex ? flexBasis : 'height'] = scope.rHeight + 'px';\r\n                });\r\n\r\n                element.addClass('resizable');\r\n\r\n                var style = window.getComputedStyle(element[0], null),\r\n                    w,\r\n                    h,\r\n                    dir = scope.rDirections || ['right'],\r\n                    vx = scope.rCenteredX ? 2 : 1, // if centered double velocity\r\n                    vy = scope.rCenteredY ? 2 : 1, // if centered double velocity\r\n                    inner = scope.rGrabber ? scope.rGrabber : '<span></span>',\r\n                    start,\r\n                    dragDir,\r\n                    axis,\r\n                    info = {};\r\n\r\n                var updateInfo = function(e) {\r\n                    info.width = false; info.height = false;\r\n                    if(axis === 'x')\r\n                        info.width = parseInt(element[0].style[scope.rFlex ? flexBasis : 'width']);\r\n                    else\r\n                        info.height = parseInt(element[0].style[scope.rFlex ? flexBasis : 'height']);\r\n                    info.id = element[0].id;\r\n                    info.evt = e;\r\n                };\r\n\r\n                var getClientX = function(e) {\r\n                    return e.touches ? e.touches[0].clientX : e.clientX;\r\n                };\r\n\r\n                var getClientY = function(e) {\r\n                    return e.touches ? e.touches[0].clientY : e.clientY;\r\n                };\r\n\r\n                var dragging = function(e) {\r\n                    var prop, offset = axis === 'x' ? start - getClientX(e) : start - getClientY(e);\r\n                    switch(dragDir) {\r\n                        case 'top':\r\n                            prop = scope.rFlex ? flexBasis : 'height';\r\n                            element[0].style[prop] = h + (offset * vy) + 'px';\r\n                            break;\r\n                        case 'bottom':\r\n                            prop = scope.rFlex ? flexBasis : 'height';\r\n                            element[0].style[prop] = h - (offset * vy) + 'px';\r\n                            break;\r\n                        case 'right':\r\n                            prop = scope.rFlex ? flexBasis : 'width';\r\n                            element[0].style[prop] = w - (offset * vx) + 'px';\r\n                            break;\r\n                        case 'left':\r\n                            prop = scope.rFlex ? flexBasis : 'width';\r\n                            element[0].style[prop] = w + (offset * vx) + 'px';\r\n                            break;\r\n                    }\r\n                    updateInfo(e);\r\n                    function resizingEmit(){\r\n                        scope.$emit('angular-resizable.resizing', info);\r\n                    }\r\n                    if (scope.rNoThrottle) {\r\n                        resizingEmit();\r\n                    } else {\r\n                        throttle(resizingEmit);\r\n                    }\r\n                };\r\n                var dragEnd = function(e) {\r\n                    updateInfo();\r\n                    scope.$emit('angular-resizable.resizeEnd', info);\r\n                    scope.$apply();\r\n                    document.removeEventListener('mouseup', dragEnd, false);\r\n                    document.removeEventListener('mousemove', dragging, false);\r\n                    document.removeEventListener('touchend', dragEnd, false);\r\n                    document.removeEventListener('touchmove', dragging, false);\r\n                    element.removeClass('no-transition');\r\n                };\r\n                var dragStart = function(e, direction) {\r\n                    dragDir = direction;\r\n                    axis = dragDir === 'left' || dragDir === 'right' ? 'x' : 'y';\r\n                    start = axis === 'x' ? getClientX(e) : getClientY(e);\r\n                    w = parseInt(style.getPropertyValue('width'));\r\n                    h = parseInt(style.getPropertyValue('height'));\r\n\r\n                    //prevent transition while dragging\r\n                    element.addClass('no-transition');\r\n\r\n                    document.addEventListener('mouseup', dragEnd, false);\r\n                    document.addEventListener('mousemove', dragging, false);\r\n                    document.addEventListener('touchend', dragEnd, false);\r\n                    document.addEventListener('touchmove', dragging, false);\r\n\r\n                    // Disable highlighting while dragging\r\n                    if(e.stopPropagation) e.stopPropagation();\r\n                    if(e.preventDefault) e.preventDefault();\r\n                    e.cancelBubble = true;\r\n                    e.returnValue = false;\r\n\r\n                    updateInfo(e);\r\n                    scope.$emit('angular-resizable.resizeStart', info);\r\n                    scope.$apply();\r\n                };\r\n\r\n                dir.forEach(function (direction) {\r\n                    var grabber = document.createElement('div');\r\n\r\n                    // add class for styling purposes\r\n                    grabber.setAttribute('class', 'rg-' + direction);\r\n                    grabber.innerHTML = inner;\r\n                    element[0].appendChild(grabber);\r\n                    grabber.ondragstart = function() { return false; };\r\n\r\n                    var down = function(e) {\r\n                        var disabled = (scope.rDisabled === 'true');\r\n                        if (!disabled && (e.which === 1 || e.touches)) {\r\n                            // left mouse click or touch screen\r\n                            dragStart(e, direction);\r\n                        }\r\n                    };\r\n                    grabber.addEventListener('mousedown', down, false);\r\n                    grabber.addEventListener('touchstart', down, false);\r\n                });\r\n            }\r\n        };\r\n    });","/*!\r\n * ngTagsInput v3.1.1\r\n * http://mbenford.github.io/ngTagsInput\r\n *\r\n * Copyright (c) 2013-2016 Michael Benford\r\n * License: MIT\r\n *\r\n * Generated at 2016-05-27 12:28:31 -0300\r\n */\r\n(function() {\r\n'use strict';\r\n\r\nvar KEYS = {\r\n    backspace: 8,\r\n    tab: 9,\r\n    enter: 13,\r\n    escape: 27,\r\n    space: 32,\r\n    up: 38,\r\n    down: 40,\r\n    left: 37,\r\n    right: 39,\r\n    delete: 46,\r\n    comma: 188\r\n};\r\n\r\nvar MAX_SAFE_INTEGER = 9007199254740991;\r\nvar SUPPORTED_INPUT_TYPES = ['text', 'email', 'url'];\r\n\r\nvar tagsInput = angular.module('ngTagsInput', []);\r\n\r\n/**\r\n * @ngdoc directive\r\n * @name tagsInput\r\n * @module ngTagsInput\r\n *\r\n * @description\r\n * Renders an input box with tag editing support.\r\n *\r\n * @param {string} ngModel Assignable Angular expression to data-bind to.\r\n * @param {string=} [template=NA] URL or id of a custom template for rendering each tag.\r\n * @param {string=} [templateScope=NA] Scope to be passed to custom templates - of both tagsInput and\r\n *    autoComplete directives - as $scope.\r\n * @param {string=} [displayProperty=text] Property to be rendered as the tag label.\r\n * @param {string=} [keyProperty=text] Property to be used as a unique identifier for the tag.\r\n * @param {string=} [type=text] Type of the input element. Only 'text', 'email' and 'url' are supported values.\r\n * @param {string=} [text=NA] Assignable Angular expression for data-binding to the element's text.\r\n * @param {number=} tabindex Tab order of the control.\r\n * @param {string=} [placeholder=Add a tag] Placeholder text for the control.\r\n * @param {number=} [minLength=3] Minimum length for a new tag.\r\n * @param {number=} [maxLength=MAX_SAFE_INTEGER] Maximum length allowed for a new tag.\r\n * @param {number=} [minTags=0] Sets minTags validation error key if the number of tags added is less than minTags.\r\n * @param {number=} [maxTags=MAX_SAFE_INTEGER] Sets maxTags validation error key if the number of tags added is greater\r\n *    than maxTags.\r\n * @param {boolean=} [allowLeftoverText=false] Sets leftoverText validation error key if there is any leftover text in\r\n *    the input element when the directive loses focus.\r\n * @param {string=} [removeTagSymbol=×] (Obsolete) Symbol character for the remove tag button.\r\n * @param {boolean=} [addOnEnter=true] Flag indicating that a new tag will be added on pressing the ENTER key.\r\n * @param {boolean=} [addOnSpace=false] Flag indicating that a new tag will be added on pressing the SPACE key.\r\n * @param {boolean=} [addOnComma=true] Flag indicating that a new tag will be added on pressing the COMMA key.\r\n * @param {boolean=} [addOnBlur=true] Flag indicating that a new tag will be added when the input field loses focus.\r\n * @param {boolean=} [addOnPaste=false] Flag indicating that the text pasted into the input field will be split into tags.\r\n * @param {string=} [pasteSplitPattern=,] Regular expression used to split the pasted text into tags.\r\n * @param {boolean=} [replaceSpacesWithDashes=true] Flag indicating that spaces will be replaced with dashes.\r\n * @param {string=} [allowedTagsPattern=.+] Regular expression that determines whether a new tag is valid.\r\n * @param {boolean=} [enableEditingLastTag=false] Flag indicating that the last tag will be moved back into the new tag\r\n *    input box instead of being removed when the backspace key is pressed and the input box is empty.\r\n * @param {boolean=} [addFromAutocompleteOnly=false] Flag indicating that only tags coming from the autocomplete list\r\n *    will be allowed. When this flag is true, addOnEnter, addOnComma, addOnSpace and addOnBlur values are ignored.\r\n * @param {boolean=} [spellcheck=true] Flag indicating whether the browser's spellcheck is enabled for the input field or not.\r\n * @param {expression=} [tagClass=NA] Expression to evaluate for each existing tag in order to get the CSS classes to be used.\r\n *    The expression is provided with the current tag as $tag, its index as $index and its state as $selected. The result\r\n *    of the evaluation must be one of the values supported by the ngClass directive (either a string, an array or an object).\r\n *    See https://docs.angularjs.org/api/ng/directive/ngClass for more information.\r\n * @param {expression=} [onTagAdding=NA] Expression to evaluate that will be invoked before adding a new tag. The new\r\n *    tag is available as $tag. This method must return either a boolean value or a promise. If either a false value or a rejected\r\n *    promise is returned, the tag will not be added.\r\n * @param {expression=} [onTagAdded=NA] Expression to evaluate upon adding a new tag. The new tag is available as $tag.\r\n * @param {expression=} [onInvalidTag=NA] Expression to evaluate when a tag is invalid. The invalid tag is available as $tag.\r\n * @param {expression=} [onTagRemoving=NA] Expression to evaluate that will be invoked before removing a tag. The tag\r\n *    is available as $tag. This method must return either a boolean value or a promise. If either a false value or a rejected\r\n *    promise is returned, the tag will not be removed.\r\n * @param {expression=} [onTagRemoved=NA] Expression to evaluate upon removing an existing tag. The removed tag is available as $tag.\r\n * @param {expression=} [onTagClicked=NA] Expression to evaluate upon clicking an existing tag. The clicked tag is available as $tag.\r\n */\r\ntagsInput.directive('tagsInput', [\"$timeout\", \"$document\", \"$window\", \"$q\", \"tagsInputConfig\", \"tiUtil\", function($timeout, $document, $window, $q, tagsInputConfig, tiUtil) {\r\n    function TagList(options, events, onTagAdding, onTagRemoving) {\r\n        var self = {}, getTagText, setTagText, canAddTag, canRemoveTag;\r\n\r\n        getTagText = function(tag) {\r\n            return tiUtil.safeToString(tag[options.displayProperty]);\r\n        };\r\n\r\n        setTagText = function(tag, text) {\r\n            tag[options.displayProperty] = text;\r\n        };\r\n\r\n        canAddTag = function(tag) {\r\n            var tagText = getTagText(tag);\r\n            var valid = tagText &&\r\n                        tagText.length >= options.minLength &&\r\n                        tagText.length <= options.maxLength &&\r\n                        options.allowedTagsPattern.test(tagText) &&\r\n                        !tiUtil.findInObjectArray(self.items, tag, options.keyProperty || options.displayProperty);\r\n\r\n            return $q.when(valid && onTagAdding({ $tag: tag })).then(tiUtil.promisifyValue);\r\n        };\r\n\r\n        canRemoveTag = function(tag) {\r\n            return $q.when(onTagRemoving({ $tag: tag })).then(tiUtil.promisifyValue);\r\n        };\r\n\r\n        self.items = [];\r\n\r\n        self.addText = function(text) {\r\n            var tag = {};\r\n            setTagText(tag, text);\r\n            return self.add(tag);\r\n        };\r\n\r\n        self.add = function(tag) {\r\n            var tagText = getTagText(tag);\r\n\r\n            if (options.replaceSpacesWithDashes) {\r\n                tagText = tiUtil.replaceSpacesWithDashes(tagText);\r\n            }\r\n\r\n            setTagText(tag, tagText);\r\n\r\n            return canAddTag(tag)\r\n                .then(function() {\r\n                    self.items.push(tag);\r\n                    events.trigger('tag-added', { $tag: tag });\r\n                })\r\n                .catch(function() {\r\n                    if (tagText) {\r\n                      events.trigger('invalid-tag', { $tag: tag });\r\n                    }\r\n                });\r\n        };\r\n\r\n        self.remove = function(index) {\r\n            var tag = self.items[index];\r\n\r\n            return canRemoveTag(tag).then(function() {\r\n                self.items.splice(index, 1);\r\n                self.clearSelection();\r\n                events.trigger('tag-removed', { $tag: tag });\r\n                return tag;\r\n            });\r\n        };\r\n\r\n        self.select = function(index) {\r\n            if (index < 0) {\r\n                index = self.items.length - 1;\r\n            }\r\n            else if (index >= self.items.length) {\r\n                index = 0;\r\n            }\r\n\r\n            self.index = index;\r\n            self.selected = self.items[index];\r\n        };\r\n\r\n        self.selectPrior = function() {\r\n            self.select(--self.index);\r\n        };\r\n\r\n        self.selectNext = function() {\r\n            self.select(++self.index);\r\n        };\r\n\r\n        self.removeSelected = function() {\r\n            return self.remove(self.index);\r\n        };\r\n\r\n        self.clearSelection = function() {\r\n            self.selected = null;\r\n            self.index = -1;\r\n        };\r\n\r\n        self.clearSelection();\r\n\r\n        return self;\r\n    }\r\n\r\n    function validateType(type) {\r\n        return SUPPORTED_INPUT_TYPES.indexOf(type) !== -1;\r\n    }\r\n\r\n    return {\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        scope: {\r\n            tags: '=ngModel',\r\n            text: '=?',\r\n            templateScope: '=?',\r\n            tagClass: '&',\r\n            onTagAdding: '&',\r\n            onTagAdded: '&',\r\n            onInvalidTag: '&',\r\n            onTagRemoving: '&',\r\n            onTagRemoved: '&',\r\n            onTagClicked: '&',\r\n        },\r\n        replace: false,\r\n        transclude: true,\r\n        templateUrl: 'ngTagsInput/tags-input.html',\r\n        controller: [\"$scope\", \"$attrs\", \"$element\", function($scope, $attrs, $element) {\r\n            $scope.events = tiUtil.simplePubSub();\r\n\r\n            tagsInputConfig.load('tagsInput', $scope, $attrs, {\r\n                template: [String, 'ngTagsInput/tag-item.html'],\r\n                type: [String, 'text', validateType],\r\n                placeholder: [String, 'Add a tag'],\r\n                tabindex: [Number, null],\r\n                removeTagSymbol: [String, String.fromCharCode(215)],\r\n                replaceSpacesWithDashes: [Boolean, true],\r\n                minLength: [Number, 3],\r\n                maxLength: [Number, MAX_SAFE_INTEGER],\r\n                addOnEnter: [Boolean, true],\r\n                addOnSpace: [Boolean, false],\r\n                addOnComma: [Boolean, true],\r\n                addOnBlur: [Boolean, true],\r\n                addOnPaste: [Boolean, false],\r\n                pasteSplitPattern: [RegExp, /,/],\r\n                allowedTagsPattern: [RegExp, /.+/],\r\n                enableEditingLastTag: [Boolean, false],\r\n                minTags: [Number, 0],\r\n                maxTags: [Number, MAX_SAFE_INTEGER],\r\n                displayProperty: [String, 'text'],\r\n                keyProperty: [String, ''],\r\n                allowLeftoverText: [Boolean, false],\r\n                addFromAutocompleteOnly: [Boolean, false],\r\n                spellcheck: [Boolean, true]\r\n            });\r\n\r\n            $scope.tagList = new TagList($scope.options, $scope.events,\r\n                tiUtil.handleUndefinedResult($scope.onTagAdding, true),\r\n                tiUtil.handleUndefinedResult($scope.onTagRemoving, true));\r\n\r\n            this.registerAutocomplete = function() {\r\n                var input = $element.find('input');\r\n\r\n                return {\r\n                    addTag: function(tag) {\r\n                        return $scope.tagList.add(tag);\r\n                    },\r\n                    getTags: function() {\r\n                        return $scope.tagList.items;\r\n                    },\r\n                    getCurrentTagText: function() {\r\n                        return $scope.newTag.text();\r\n                    },\r\n                    getOptions: function() {\r\n                        return $scope.options;\r\n                    },\r\n                    getTemplateScope: function() {\r\n                        return $scope.templateScope;\r\n                    },\r\n                    on: function(name, handler) {\r\n                        $scope.events.on(name, handler, true);\r\n                        return this;\r\n                    }\r\n                };\r\n            };\r\n\r\n            this.registerTagItem = function() {\r\n                return {\r\n                    getOptions: function() {\r\n                        return $scope.options;\r\n                    },\r\n                    removeTag: function(index) {\r\n                        if ($scope.disabled) {\r\n                            return;\r\n                        }\r\n                        $scope.tagList.remove(index);\r\n                    }\r\n                };\r\n            };\r\n        }],\r\n        link: function(scope, element, attrs, ngModelCtrl) {\r\n            var hotkeys = [KEYS.enter, KEYS.comma, KEYS.space, KEYS.backspace, KEYS.delete, KEYS.left, KEYS.right],\r\n                tagList = scope.tagList,\r\n                events = scope.events,\r\n                options = scope.options,\r\n                input = element.find('input'),\r\n                validationOptions = ['minTags', 'maxTags', 'allowLeftoverText'],\r\n                setElementValidity,\r\n                focusInput;\r\n\r\n            setElementValidity = function() {\r\n                ngModelCtrl.$setValidity('maxTags', tagList.items.length <= options.maxTags);\r\n                ngModelCtrl.$setValidity('minTags', tagList.items.length >= options.minTags);\r\n                ngModelCtrl.$setValidity('leftoverText', scope.hasFocus || options.allowLeftoverText ? true : !scope.newTag.text());\r\n            };\r\n\r\n            focusInput = function() {\r\n                $timeout(function() { input[0].focus(); });\r\n            };\r\n\r\n            ngModelCtrl.$isEmpty = function(value) {\r\n                return !value || !value.length;\r\n            };\r\n\r\n            scope.newTag = {\r\n                text: function(value) {\r\n                    if (angular.isDefined(value)) {\r\n                        scope.text = value;\r\n                        events.trigger('input-change', value);\r\n                    }\r\n                    else {\r\n                        return scope.text || '';\r\n                    }\r\n                },\r\n                invalid: null\r\n            };\r\n\r\n            scope.track = function(tag) {\r\n                return tag[options.keyProperty || options.displayProperty];\r\n            };\r\n\r\n            scope.getTagClass = function(tag, index) {\r\n                var selected = tag === tagList.selected;\r\n                return [\r\n                    scope.tagClass({$tag: tag, $index: index, $selected: selected}),\r\n                    { selected: selected }\r\n                ];\r\n            };\r\n\r\n            scope.$watch('tags', function(value) {\r\n                if (value) {\r\n                    tagList.items = tiUtil.makeObjectArray(value, options.displayProperty);\r\n                    scope.tags = tagList.items;\r\n                }\r\n                else {\r\n                    tagList.items = [];\r\n                }\r\n            });\r\n\r\n            scope.$watch('tags.length', function() {\r\n                setElementValidity();\r\n\r\n                // ngModelController won't trigger validators when the model changes (because it's an array),\r\n                // so we need to do it ourselves. Unfortunately this won't trigger any registered formatter.\r\n                ngModelCtrl.$validate();\r\n            });\r\n\r\n            attrs.$observe('disabled', function(value) {\r\n                scope.disabled = value;\r\n            });\r\n\r\n            scope.eventHandlers = {\r\n                input: {\r\n                    keydown: function($event) {\r\n                        events.trigger('input-keydown', $event);\r\n                    },\r\n                    focus: function() {\r\n                        if (scope.hasFocus) {\r\n                            return;\r\n                        }\r\n\r\n                        scope.hasFocus = true;\r\n                        events.trigger('input-focus');\r\n                    },\r\n                    blur: function() {\r\n                        $timeout(function() {\r\n                            var activeElement = $document.prop('activeElement'),\r\n                                lostFocusToBrowserWindow = activeElement === input[0],\r\n                                lostFocusToChildElement = element[0].contains(activeElement);\r\n\r\n                            if (lostFocusToBrowserWindow || !lostFocusToChildElement) {\r\n                                scope.hasFocus = false;\r\n                                events.trigger('input-blur');\r\n                            }\r\n                        });\r\n                    },\r\n                    paste: function($event) {\r\n                        $event.getTextData = function() {\r\n                            var clipboardData = $event.clipboardData || ($event.originalEvent && $event.originalEvent.clipboardData);\r\n                            return clipboardData ? clipboardData.getData('text/plain') : $window.clipboardData.getData('Text');\r\n                        };\r\n                        events.trigger('input-paste', $event);\r\n                    }\r\n                },\r\n                host: {\r\n                    click: function() {\r\n                        if (scope.disabled) {\r\n                            return;\r\n                        }\r\n                        focusInput();\r\n                    }\r\n                },\r\n                tag: {\r\n                    click: function(tag) {\r\n                        events.trigger('tag-clicked', { $tag: tag });\r\n                    }\r\n                }\r\n            };\r\n\r\n            events\r\n                .on('tag-added', scope.onTagAdded)\r\n                .on('invalid-tag', scope.onInvalidTag)\r\n                .on('tag-removed', scope.onTagRemoved)\r\n                .on('tag-clicked', scope.onTagClicked)\r\n                .on('tag-added', function() {\r\n                    scope.newTag.text('');\r\n                })\r\n                .on('tag-added tag-removed', function() {\r\n                    scope.tags = tagList.items;\r\n                    // Ideally we should be able call $setViewValue here and let it in turn call $setDirty and $validate\r\n                    // automatically, but since the model is an array, $setViewValue does nothing and it's up to us to do it.\r\n                    // Unfortunately this won't trigger any registered $parser and there's no safe way to do it.\r\n                    ngModelCtrl.$setDirty();\r\n                    focusInput();\r\n                })\r\n                .on('invalid-tag', function() {\r\n                    scope.newTag.invalid = true;\r\n                })\r\n                .on('option-change', function(e) {\r\n                    if (validationOptions.indexOf(e.name) !== -1) {\r\n                        setElementValidity();\r\n                    }\r\n                })\r\n                .on('input-change', function() {\r\n                    tagList.clearSelection();\r\n                    scope.newTag.invalid = null;\r\n                })\r\n                .on('input-focus', function() {\r\n                    element.triggerHandler('focus');\r\n                    ngModelCtrl.$setValidity('leftoverText', true);\r\n                })\r\n                .on('input-blur', function() {\r\n                    if (options.addOnBlur && !options.addFromAutocompleteOnly) {\r\n                        tagList.addText(scope.newTag.text());\r\n                    }\r\n                    element.triggerHandler('blur');\r\n                    setElementValidity();\r\n                })\r\n                .on('input-keydown', function(event) {\r\n                    var key = event.keyCode,\r\n                        addKeys = {},\r\n                        shouldAdd, shouldRemove, shouldSelect, shouldEditLastTag;\r\n\r\n                    if (tiUtil.isModifierOn(event) || hotkeys.indexOf(key) === -1) {\r\n                        return;\r\n                    }\r\n\r\n                    addKeys[KEYS.enter] = options.addOnEnter;\r\n                    addKeys[KEYS.comma] = options.addOnComma;\r\n                    addKeys[KEYS.space] = options.addOnSpace;\r\n\r\n                    shouldAdd = !options.addFromAutocompleteOnly && addKeys[key];\r\n                    shouldRemove = (key === KEYS.backspace || key === KEYS.delete) && tagList.selected;\r\n                    shouldEditLastTag = key === KEYS.backspace && scope.newTag.text().length === 0 && options.enableEditingLastTag;\r\n                    shouldSelect = (key === KEYS.backspace || key === KEYS.left || key === KEYS.right) && scope.newTag.text().length === 0 && !options.enableEditingLastTag;\r\n\r\n                    if (shouldAdd) {\r\n                        tagList.addText(scope.newTag.text());\r\n                    }\r\n                    else if (shouldEditLastTag) {\r\n                        tagList.selectPrior();\r\n                        tagList.removeSelected().then(function(tag) {\r\n                            if (tag) {\r\n                                scope.newTag.text(tag[options.displayProperty]);\r\n                            }\r\n                        });\r\n                    }\r\n                    else if (shouldRemove) {\r\n                        tagList.removeSelected();\r\n                    }\r\n                    else if (shouldSelect) {\r\n                        if (key === KEYS.left || key === KEYS.backspace) {\r\n                            tagList.selectPrior();\r\n                        }\r\n                        else if (key === KEYS.right) {\r\n                            tagList.selectNext();\r\n                        }\r\n                    }\r\n\r\n                    if (shouldAdd || shouldSelect || shouldRemove || shouldEditLastTag) {\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n                .on('input-paste', function(event) {\r\n                    if (options.addOnPaste) {\r\n                        var data = event.getTextData();\r\n                        var tags = data.split(options.pasteSplitPattern);\r\n\r\n                        if (tags.length > 1) {\r\n                            tags.forEach(function(tag) {\r\n                                tagList.addText(tag);\r\n                            });\r\n                            event.preventDefault();\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    };\r\n}]);\r\n\r\n\r\n/**\r\n * @ngdoc directive\r\n * @name tiTagItem\r\n * @module ngTagsInput\r\n *\r\n * @description\r\n * Represents a tag item. Used internally by the tagsInput directive.\r\n */\r\ntagsInput.directive('tiTagItem', [\"tiUtil\", function(tiUtil) {\r\n    return {\r\n        restrict: 'E',\r\n        require: '^tagsInput',\r\n        template: '<ng-include src=\"$$template\"></ng-include>',\r\n        scope: {\r\n            $scope: '=scope',\r\n            data: '='\r\n        },\r\n        link: function(scope, element, attrs, tagsInputCtrl) {\r\n            var tagsInput = tagsInputCtrl.registerTagItem(),\r\n                options = tagsInput.getOptions();\r\n\r\n            scope.$$template = options.template;\r\n            scope.$$removeTagSymbol = options.removeTagSymbol;\r\n\r\n            scope.$getDisplayText = function() {\r\n                return tiUtil.safeToString(scope.data[options.displayProperty]);\r\n            };\r\n            scope.$removeTag = function() {\r\n                tagsInput.removeTag(scope.$index);\r\n            };\r\n\r\n            scope.$watch('$parent.$index', function(value) {\r\n                scope.$index = value;\r\n            });\r\n        }\r\n    };\r\n}]);\r\n\r\n\r\n/**\r\n * @ngdoc directive\r\n * @name autoComplete\r\n * @module ngTagsInput\r\n *\r\n * @description\r\n * Provides autocomplete support for the tagsInput directive.\r\n *\r\n * @param {expression} source Expression to evaluate upon changing the input content. The input value is available as\r\n *    $query. The result of the expression must be a promise that eventually resolves to an array of strings.\r\n * @param {string=} [template=NA] URL or id of a custom template for rendering each element of the autocomplete list.\r\n * @param {string=} [displayProperty=tagsInput.displayText] Property to be rendered as the autocomplete label.\r\n * @param {number=} [debounceDelay=100] Amount of time, in milliseconds, to wait before evaluating the expression in\r\n *    the source option after the last keystroke.\r\n * @param {number=} [minLength=3] Minimum number of characters that must be entered before evaluating the expression\r\n *    in the source option.\r\n * @param {boolean=} [highlightMatchedText=true] Flag indicating that the matched text will be highlighted in the\r\n *    suggestions list.\r\n * @param {number=} [maxResultsToShow=10] Maximum number of results to be displayed at a time.\r\n * @param {boolean=} [loadOnDownArrow=false] Flag indicating that the source option will be evaluated when the down arrow\r\n *    key is pressed and the suggestion list is closed. The current input value is available as $query.\r\n * @param {boolean=} [loadOnEmpty=false] Flag indicating that the source option will be evaluated when the input content\r\n *    becomes empty. The $query variable will be passed to the expression as an empty string.\r\n * @param {boolean=} [loadOnFocus=false] Flag indicating that the source option will be evaluated when the input element\r\n *    gains focus. The current input value is available as $query.\r\n * @param {boolean=} [selectFirstMatch=true] Flag indicating that the first match will be automatically selected once\r\n *    the suggestion list is shown.\r\n * @param {expression=} [matchClass=NA] Expression to evaluate for each match in order to get the CSS classes to be used.\r\n *    The expression is provided with the current match as $match, its index as $index and its state as $selected. The result\r\n *    of the evaluation must be one of the values supported by the ngClass directive (either a string, an array or an object).\r\n *    See https://docs.angularjs.org/api/ng/directive/ngClass for more information.\r\n */\r\ntagsInput.directive('autoComplete', [\"$document\", \"$timeout\", \"$sce\", \"$q\", \"tagsInputConfig\", \"tiUtil\", function($document, $timeout, $sce, $q, tagsInputConfig, tiUtil) {\r\n    function SuggestionList(loadFn, options, events) {\r\n        var self = {}, getDifference, lastPromise, getTagId;\r\n\r\n        getTagId = function() {\r\n            return options.tagsInput.keyProperty || options.tagsInput.displayProperty;\r\n        };\r\n\r\n        getDifference = function(array1, array2) {\r\n            return array1.filter(function(item) {\r\n                return !tiUtil.findInObjectArray(array2, item, getTagId(), function(a, b) {\r\n                    if (options.tagsInput.replaceSpacesWithDashes) {\r\n                        a = tiUtil.replaceSpacesWithDashes(a);\r\n                        b = tiUtil.replaceSpacesWithDashes(b);\r\n                    }\r\n                    return tiUtil.defaultComparer(a, b);\r\n                });\r\n            });\r\n        };\r\n\r\n        self.reset = function() {\r\n            lastPromise = null;\r\n\r\n            self.items = [];\r\n            self.visible = false;\r\n            self.index = -1;\r\n            self.selected = null;\r\n            self.query = null;\r\n        };\r\n        self.show = function() {\r\n            if (options.selectFirstMatch) {\r\n                self.select(0);\r\n            }\r\n            else {\r\n                self.selected = null;\r\n            }\r\n            self.visible = true;\r\n        };\r\n        self.load = tiUtil.debounce(function(query, tags) {\r\n            self.query = query;\r\n\r\n            var promise = $q.when(loadFn({ $query: query }));\r\n            lastPromise = promise;\r\n\r\n            promise.then(function(items) {\r\n                if (promise !== lastPromise) {\r\n                    return;\r\n                }\r\n\r\n                items = tiUtil.makeObjectArray(items.data || items, getTagId());\r\n                items = getDifference(items, tags);\r\n                self.items = items.slice(0, options.maxResultsToShow);\r\n\r\n                if (self.items.length > 0) {\r\n                    self.show();\r\n                }\r\n                else {\r\n                    self.reset();\r\n                }\r\n            });\r\n        }, options.debounceDelay);\r\n\r\n        self.selectNext = function() {\r\n            self.select(++self.index);\r\n        };\r\n        self.selectPrior = function() {\r\n            self.select(--self.index);\r\n        };\r\n        self.select = function(index) {\r\n            if (index < 0) {\r\n                index = self.items.length - 1;\r\n            }\r\n            else if (index >= self.items.length) {\r\n                index = 0;\r\n            }\r\n            self.index = index;\r\n            self.selected = self.items[index];\r\n            events.trigger('suggestion-selected', index);\r\n        };\r\n\r\n        self.reset();\r\n\r\n        return self;\r\n    }\r\n\r\n    function scrollToElement(root, index) {\r\n        var element = root.find('li').eq(index),\r\n            parent = element.parent(),\r\n            elementTop = element.prop('offsetTop'),\r\n            elementHeight = element.prop('offsetHeight'),\r\n            parentHeight = parent.prop('clientHeight'),\r\n            parentScrollTop = parent.prop('scrollTop');\r\n\r\n        if (elementTop < parentScrollTop) {\r\n            parent.prop('scrollTop', elementTop);\r\n        }\r\n        else if (elementTop + elementHeight > parentHeight + parentScrollTop) {\r\n            parent.prop('scrollTop', elementTop + elementHeight - parentHeight);\r\n        }\r\n    }\r\n\r\n    return {\r\n        restrict: 'E',\r\n        require: '^tagsInput',\r\n        scope: {\r\n            source: '&',\r\n            matchClass: '&'\r\n        },\r\n        templateUrl: 'ngTagsInput/auto-complete.html',\r\n        controller: [\"$scope\", \"$element\", \"$attrs\", function($scope, $element, $attrs) {\r\n            $scope.events = tiUtil.simplePubSub();\r\n\r\n            tagsInputConfig.load('autoComplete', $scope, $attrs, {\r\n                template: [String, 'ngTagsInput/auto-complete-match.html'],\r\n                debounceDelay: [Number, 100],\r\n                minLength: [Number, 3],\r\n                highlightMatchedText: [Boolean, true],\r\n                maxResultsToShow: [Number, 10],\r\n                loadOnDownArrow: [Boolean, false],\r\n                loadOnEmpty: [Boolean, false],\r\n                loadOnFocus: [Boolean, false],\r\n                selectFirstMatch: [Boolean, true],\r\n                displayProperty: [String, '']\r\n            });\r\n\r\n            $scope.suggestionList = new SuggestionList($scope.source, $scope.options, $scope.events);\r\n\r\n            this.registerAutocompleteMatch = function() {\r\n                return {\r\n                    getOptions: function() {\r\n                        return $scope.options;\r\n                    },\r\n                    getQuery: function() {\r\n                        return $scope.suggestionList.query;\r\n                    }\r\n                };\r\n            };\r\n        }],\r\n        link: function(scope, element, attrs, tagsInputCtrl) {\r\n            var hotkeys = [KEYS.enter, KEYS.tab, KEYS.escape, KEYS.up, KEYS.down],\r\n                suggestionList = scope.suggestionList,\r\n                tagsInput = tagsInputCtrl.registerAutocomplete(),\r\n                options = scope.options,\r\n                events = scope.events,\r\n                shouldLoadSuggestions;\r\n\r\n            options.tagsInput = tagsInput.getOptions();\r\n\r\n            shouldLoadSuggestions = function(value) {\r\n                return value && value.length >= options.minLength || !value && options.loadOnEmpty;\r\n            };\r\n\r\n            scope.templateScope = tagsInput.getTemplateScope();\r\n\r\n            scope.addSuggestionByIndex = function(index) {\r\n                suggestionList.select(index);\r\n                scope.addSuggestion();\r\n            };\r\n\r\n            scope.addSuggestion = function() {\r\n                var added = false;\r\n\r\n                if (suggestionList.selected) {\r\n                    tagsInput.addTag(angular.copy(suggestionList.selected));\r\n                    suggestionList.reset();\r\n                    added = true;\r\n                }\r\n                return added;\r\n            };\r\n\r\n            scope.track = function(item) {\r\n                return item[options.tagsInput.keyProperty || options.tagsInput.displayProperty];\r\n            };\r\n\r\n            scope.getSuggestionClass = function(item, index) {\r\n                var selected = item === suggestionList.selected;\r\n                return [\r\n                    scope.matchClass({$match: item, $index: index, $selected: selected}),\r\n                    { selected: selected }\r\n                ];\r\n            };\r\n\r\n            tagsInput\r\n                .on('tag-added tag-removed invalid-tag input-blur', function() {\r\n                    suggestionList.reset();\r\n                })\r\n                .on('input-change', function(value) {\r\n                    if (shouldLoadSuggestions(value)) {\r\n                        suggestionList.load(value, tagsInput.getTags());\r\n                    }\r\n                    else {\r\n                        suggestionList.reset();\r\n                    }\r\n                })\r\n                .on('input-focus', function() {\r\n                    var value = tagsInput.getCurrentTagText();\r\n                    if (options.loadOnFocus && shouldLoadSuggestions(value)) {\r\n                        suggestionList.load(value, tagsInput.getTags());\r\n                    }\r\n                })\r\n                .on('input-keydown', function(event) {\r\n                    var key = event.keyCode,\r\n                        handled = false;\r\n\r\n                    if (tiUtil.isModifierOn(event) || hotkeys.indexOf(key) === -1) {\r\n                        return;\r\n                    }\r\n\r\n                    if (suggestionList.visible) {\r\n\r\n                        if (key === KEYS.down) {\r\n                            suggestionList.selectNext();\r\n                            handled = true;\r\n                        }\r\n                        else if (key === KEYS.up) {\r\n                            suggestionList.selectPrior();\r\n                            handled = true;\r\n                        }\r\n                        else if (key === KEYS.escape) {\r\n                            suggestionList.reset();\r\n                            handled = true;\r\n                        }\r\n                        else if (key === KEYS.enter || key === KEYS.tab) {\r\n                            handled = scope.addSuggestion();\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (key === KEYS.down && scope.options.loadOnDownArrow) {\r\n                            suggestionList.load(tagsInput.getCurrentTagText(), tagsInput.getTags());\r\n                            handled = true;\r\n                        }\r\n                    }\r\n\r\n                    if (handled) {\r\n                        event.preventDefault();\r\n                        event.stopImmediatePropagation();\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n            events.on('suggestion-selected', function(index) {\r\n                scrollToElement(element, index);\r\n            });\r\n        }\r\n    };\r\n}]);\r\n\r\n\r\n/**\r\n * @ngdoc directive\r\n * @name tiAutocompleteMatch\r\n * @module ngTagsInput\r\n *\r\n * @description\r\n * Represents an autocomplete match. Used internally by the autoComplete directive.\r\n */\r\ntagsInput.directive('tiAutocompleteMatch', [\"$sce\", \"tiUtil\", function($sce, tiUtil) {\r\n    return {\r\n        restrict: 'E',\r\n        require: '^autoComplete',\r\n        template: '<ng-include src=\"$$template\"></ng-include>',\r\n        scope: {\r\n            $scope: '=scope',\r\n            data: '='\r\n        },\r\n        link: function(scope, element, attrs, autoCompleteCtrl) {\r\n            var autoComplete = autoCompleteCtrl.registerAutocompleteMatch(),\r\n                options = autoComplete.getOptions();\r\n\r\n            scope.$$template = options.template;\r\n            scope.$index = scope.$parent.$index;\r\n\r\n            scope.$highlight = function(text) {\r\n                if (options.highlightMatchedText) {\r\n                    text = tiUtil.safeHighlight(text, autoComplete.getQuery());\r\n                }\r\n                return $sce.trustAsHtml(text);\r\n            };\r\n            scope.$getDisplayText =  function() {\r\n                return tiUtil.safeToString(scope.data[options.displayProperty || options.tagsInput.displayProperty]);\r\n            };\r\n        }\r\n    };\r\n}]);\r\n\r\n\r\n/**\r\n * @ngdoc directive\r\n * @name tiTranscludeAppend\r\n * @module ngTagsInput\r\n *\r\n * @description\r\n * Re-creates the old behavior of ng-transclude. Used internally by tagsInput directive.\r\n */\r\ntagsInput.directive('tiTranscludeAppend', function() {\r\n    return function(scope, element, attrs, ctrl, transcludeFn) {\r\n        transcludeFn(function(clone) {\r\n            element.append(clone);\r\n        });\r\n    };\r\n});\r\n\r\n/**\r\n * @ngdoc directive\r\n * @name tiAutosize\r\n * @module ngTagsInput\r\n *\r\n * @description\r\n * Automatically sets the input's width so its content is always visible. Used internally by tagsInput directive.\r\n */\r\ntagsInput.directive('tiAutosize', [\"tagsInputConfig\", function(tagsInputConfig) {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        link: function(scope, element, attrs, ctrl) {\r\n            var threshold = tagsInputConfig.getTextAutosizeThreshold(),\r\n                span, resize;\r\n\r\n            span = angular.element('<span class=\"input\"></span>');\r\n            span.css('display', 'none')\r\n                .css('visibility', 'hidden')\r\n                .css('white-space', 'pre');\r\n\r\n            element.parent().append(span);\r\n\r\n            resize = function(originalValue) {\r\n                var value = originalValue, width;\r\n\r\n                if (angular.isString(value) && value.length === 0) {\r\n                    value = attrs.placeholder;\r\n                }\r\n\r\n                if (value) {\r\n                    span.text(value);\r\n                    span.css('display', '');\r\n                    span.css('display', 'none');\r\n                }\r\n\r\n\r\n                return originalValue;\r\n            };\r\n\r\n            ctrl.$parsers.unshift(resize);\r\n            ctrl.$formatters.unshift(resize);\r\n\r\n            attrs.$observe('placeholder', function(value) {\r\n                if (!ctrl.$modelValue) {\r\n                    resize(value);\r\n                }\r\n            });\r\n        }\r\n    };\r\n}]);\r\n\r\n/**\r\n * @ngdoc directive\r\n * @name tiBindAttrs\r\n * @module ngTagsInput\r\n *\r\n * @description\r\n * Binds attributes to expressions. Used internally by tagsInput directive.\r\n */\r\ntagsInput.directive('tiBindAttrs', function() {\r\n    return function(scope, element, attrs) {\r\n        scope.$watch(attrs.tiBindAttrs, function(value) {\r\n            angular.forEach(value, function(value, key) {\r\n                attrs.$set(key, value);\r\n            });\r\n        }, true);\r\n    };\r\n});\r\n\r\n/**\r\n * @ngdoc service\r\n * @name tagsInputConfig\r\n * @module ngTagsInput\r\n *\r\n * @description\r\n * Sets global configuration settings for both tagsInput and autoComplete directives. It's also used internally to parse and\r\n *  initialize options from HTML attributes.\r\n */\r\ntagsInput.provider('tagsInputConfig', function() {\r\n    var globalDefaults = {},\r\n        interpolationStatus = {},\r\n        autosizeThreshold = 3;\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name tagsInputConfig#setDefaults\r\n     * @description Sets the default configuration option for a directive.\r\n     *\r\n     * @param {string} directive Name of the directive to be configured. Must be either 'tagsInput' or 'autoComplete'.\r\n     * @param {object} defaults Object containing options and their values.\r\n     *\r\n     * @returns {object} The service itself for chaining purposes.\r\n     */\r\n    this.setDefaults = function(directive, defaults) {\r\n        globalDefaults[directive] = defaults;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name tagsInputConfig#setActiveInterpolation\r\n     * @description Sets active interpolation for a set of options.\r\n     *\r\n     * @param {string} directive Name of the directive to be configured. Must be either 'tagsInput' or 'autoComplete'.\r\n     * @param {object} options Object containing which options should have interpolation turned on at all times.\r\n     *\r\n     * @returns {object} The service itself for chaining purposes.\r\n     */\r\n    this.setActiveInterpolation = function(directive, options) {\r\n        interpolationStatus[directive] = options;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @ngdoc method\r\n     * @name tagsInputConfig#setTextAutosizeThreshold\r\n     * @description Sets the threshold used by the tagsInput directive to re-size the inner input field element based on its contents.\r\n     *\r\n     * @param {number} threshold Threshold value, in pixels.\r\n     *\r\n     * @returns {object} The service itself for chaining purposes.\r\n     */\r\n    this.setTextAutosizeThreshold = function(threshold) {\r\n        autosizeThreshold = threshold;\r\n        return this;\r\n    };\r\n\r\n    this.$get = [\"$interpolate\", function($interpolate) {\r\n        var converters = {};\r\n        converters[String] = function(value) { return value; };\r\n        converters[Number] = function(value) { return parseInt(value, 10); };\r\n        converters[Boolean] = function(value) { return value.toLowerCase() === 'true'; };\r\n        converters[RegExp] = function(value) { return new RegExp(value); };\r\n\r\n        return {\r\n            load: function(directive, scope, attrs, options) {\r\n                var defaultValidator = function() { return true; };\r\n\r\n                scope.options = {};\r\n\r\n                angular.forEach(options, function(value, key) {\r\n                    var type, localDefault, validator, converter, getDefault, updateValue;\r\n\r\n                    type = value[0];\r\n                    localDefault = value[1];\r\n                    validator = value[2] || defaultValidator;\r\n                    converter = converters[type];\r\n\r\n                    getDefault = function() {\r\n                        var globalValue = globalDefaults[directive] && globalDefaults[directive][key];\r\n                        return angular.isDefined(globalValue) ? globalValue : localDefault;\r\n                    };\r\n\r\n                    updateValue = function(value) {\r\n                        scope.options[key] = value && validator(value) ? converter(value) : getDefault();\r\n                    };\r\n\r\n                    if (interpolationStatus[directive] && interpolationStatus[directive][key]) {\r\n                        attrs.$observe(key, function(value) {\r\n                            updateValue(value);\r\n                            scope.events.trigger('option-change', { name: key, newValue: value });\r\n                        });\r\n                    }\r\n                    else {\r\n                        updateValue(attrs[key] && $interpolate(attrs[key])(scope.$parent));\r\n                    }\r\n                });\r\n            },\r\n            getTextAutosizeThreshold: function() {\r\n                return autosizeThreshold;\r\n            }\r\n        };\r\n    }];\r\n});\r\n\r\n\r\n/***\r\n * @ngdoc service\r\n * @name tiUtil\r\n * @module ngTagsInput\r\n *\r\n * @description\r\n * Helper methods used internally by the directive. Should not be called directly from user code.\r\n */\r\ntagsInput.factory('tiUtil', [\"$timeout\", \"$q\", function($timeout, $q) {\r\n    var self = {};\r\n\r\n    self.debounce = function(fn, delay) {\r\n        var timeoutId;\r\n        return function() {\r\n            var args = arguments;\r\n            $timeout.cancel(timeoutId);\r\n            timeoutId = $timeout(function() { fn.apply(null, args); }, delay);\r\n        };\r\n    };\r\n\r\n    self.makeObjectArray = function(array, key) {\r\n        if (!angular.isArray(array) || array.length === 0 || angular.isObject(array[0])) {\r\n            return array;\r\n        }\r\n\r\n        var newArray = [];\r\n        array.forEach(function(item) {\r\n            var obj = {};\r\n            obj[key] = item;\r\n            newArray.push(obj);\r\n        });\r\n        return newArray;\r\n    };\r\n\r\n    self.findInObjectArray = function(array, obj, key, comparer) {\r\n        var item = null;\r\n        comparer = comparer || self.defaultComparer;\r\n\r\n        array.some(function(element) {\r\n            if (comparer(element[key], obj[key])) {\r\n                item = element;\r\n                return true;\r\n            }\r\n        });\r\n\r\n        return item;\r\n    };\r\n\r\n    self.defaultComparer = function(a, b) {\r\n        // I'm aware of the internationalization issues regarding toLowerCase()\r\n        // but I couldn't come up with a better solution right now\r\n        return self.safeToString(a).toLowerCase() === self.safeToString(b).toLowerCase();\r\n    };\r\n\r\n    self.safeHighlight = function(str, value) {\r\n        if (!value) {\r\n            return str;\r\n        }\r\n\r\n        function escapeRegexChars(str) {\r\n            return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\r\n        }\r\n\r\n        str = self.encodeHTML(str);\r\n        value = self.encodeHTML(value);\r\n\r\n        var expression = new RegExp('&[^;]+;|' + escapeRegexChars(value), 'gi');\r\n        return str.replace(expression, function(match) {\r\n            return match.toLowerCase() === value.toLowerCase() ? '<em>' + match + '</em>' : match;\r\n        });\r\n    };\r\n\r\n    self.safeToString = function(value) {\r\n        return angular.isUndefined(value) || value == null ? '' : value.toString().trim();\r\n    };\r\n\r\n    self.encodeHTML = function(value) {\r\n        return self.safeToString(value)\r\n            .replace(/&/g, '&amp;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;');\r\n    };\r\n\r\n    self.handleUndefinedResult = function(fn, valueIfUndefined) {\r\n        return function() {\r\n            var result = fn.apply(null, arguments);\r\n            return angular.isUndefined(result) ? valueIfUndefined : result;\r\n        };\r\n    };\r\n\r\n    self.replaceSpacesWithDashes = function(str) {\r\n        return self.safeToString(str).replace(/\\s/g, '-');\r\n    };\r\n\r\n    self.isModifierOn = function(event) {\r\n        return event.shiftKey || event.ctrlKey || event.altKey || event.metaKey;\r\n    };\r\n\r\n    self.promisifyValue = function(value) {\r\n        value = angular.isUndefined(value) ? true : value;\r\n        return $q[value ? 'when' : 'reject']();\r\n    };\r\n\r\n    self.simplePubSub = function() {\r\n        var events = {};\r\n        return {\r\n            on: function(names, handler, first) {\r\n                names.split(' ').forEach(function(name) {\r\n                    if (!events[name]) {\r\n                        events[name] = [];\r\n                    }\r\n                    var method = first ? [].unshift : [].push;\r\n                    method.call(events[name], handler);\r\n                });\r\n                return this;\r\n            },\r\n            trigger: function(name, args) {\r\n                var handlers = events[name] || [];\r\n                handlers.every(function(handler) {\r\n                    return self.handleUndefinedResult(handler, true)(args);\r\n                });\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n\r\n    return self;\r\n}]);\r\n\r\n/* HTML templates */\r\ntagsInput.run([\"$templateCache\", function($templateCache) {\r\n    $templateCache.put('ngTagsInput/tags-input.html',\r\n    \"<div class=\\\"host\\\" tabindex=\\\"-1\\\" ng-click=\\\"eventHandlers.host.click()\\\" ti-transclude-append><div class=\\\"tags\\\" ng-class=\\\"{focused: hasFocus}\\\"><ul class=\\\"tag-list\\\"><li class=\\\"tag-item\\\" ng-repeat=\\\"tag in tagList.items track by track(tag)\\\" ng-class=\\\"getTagClass(tag, $index)\\\" ng-click=\\\"eventHandlers.tag.click(tag)\\\"><ti-tag-item scope=\\\"templateScope\\\" data=\\\"::tag\\\"></ti-tag-item></li></ul><input class=\\\"input\\\" autocomplete=\\\"off\\\" ng-model=\\\"newTag.text\\\" ng-model-options=\\\"{getterSetter: true}\\\" ng-keydown=\\\"eventHandlers.input.keydown($event)\\\" ng-focus=\\\"eventHandlers.input.focus($event)\\\" ng-blur=\\\"eventHandlers.input.blur($event)\\\" ng-paste=\\\"eventHandlers.input.paste($event)\\\" ng-trim=\\\"false\\\" ng-class=\\\"{'invalid-tag': newTag.invalid}\\\" ng-disabled=\\\"disabled\\\" ti-bind-attrs=\\\"{type: options.type, placeholder: options.placeholder, tabindex: options.tabindex, spellcheck: options.spellcheck}\\\" ti-autosize></div></div>\"\r\n  );\r\n\r\n  $templateCache.put('ngTagsInput/tag-item.html',\r\n    \"<span ng-bind=\\\"$getDisplayText()\\\"></span> <a class=\\\"remove-button\\\" ng-click=\\\"$removeTag()\\\" ng-bind=\\\"::$$removeTagSymbol\\\"></a>\"\r\n  );\r\n\r\n  $templateCache.put('ngTagsInput/auto-complete.html',\r\n    \"<div class=\\\"autocomplete\\\" ng-if=\\\"suggestionList.visible\\\"><ul class=\\\"suggestion-list\\\"><li class=\\\"suggestion-item\\\" ng-repeat=\\\"item in suggestionList.items track by track(item)\\\" ng-class=\\\"getSuggestionClass(item, $index)\\\" ng-click=\\\"addSuggestionByIndex($index)\\\" ng-mouseenter=\\\"suggestionList.select($index)\\\"><ti-autocomplete-match scope=\\\"templateScope\\\" data=\\\"::item\\\"></ti-autocomplete-match></li></ul></div>\"\r\n  );\r\n\r\n  $templateCache.put('ngTagsInput/auto-complete-match.html',\r\n    \"<span ng-bind-html=\\\"$highlight($getDisplayText())\\\"></span>\"\r\n  );\r\n}]);\r\n\r\n}());","/*! angularjs-slider - v6.0.0 - \r\n (c) Rafal Zajac <rzajac@gmail.com>, Valentin Hervieu <valentin@hervieu.me>, Jussi Saarivirta <jusasi@gmail.com>, Angelin Sirbu <angelin.sirbu@gmail.com> - \r\n https://github.com/angular-slider/angularjs-slider - \r\n 2017-01-02 */\r\n/*jslint unparam: true */\r\n/*global angular: false, console: false, define, module */\r\n(function(root, factory) {\r\n  'use strict';\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define(['angular'], factory);\r\n  } else if (typeof module === 'object' && module.exports) {\r\n    // Node. Does not work with strict CommonJS, but\r\n    // only CommonJS-like environments that support module.exports,\r\n    // like Node.\r\n    // to support bundler like browserify\r\n    var angularObj = angular || require('angular');\r\n    if ((!angularObj || !angularObj.module) && typeof angular != 'undefined') {\r\n      angularObj = angular;\r\n    }\r\n    module.exports = factory(angularObj);\r\n  } else {\r\n    // Browser globals (root is window)\r\n    factory(root.angular);\r\n  }\r\n\r\n}(this, function(angular) {\r\n  'use strict';\r\n  var module = angular.module('rzModule', [])\r\n\r\n  .factory('RzSliderOptions', function() {\r\n    var defaultOptions = {\r\n      floor: 0,\r\n      ceil: null, //defaults to rz-slider-model\r\n      step: 1,\r\n      precision: 0,\r\n      minRange: null,\r\n      maxRange: null,\r\n      pushRange: false,\r\n      minLimit: null,\r\n      maxLimit: null,\r\n      id: null,\r\n      translate: null,\r\n      getLegend: null,\r\n      stepsArray: null,\r\n      bindIndexForStepsArray: false,\r\n      draggableRange: false,\r\n      draggableRangeOnly: false,\r\n      showSelectionBar: false,\r\n      showSelectionBarEnd: false,\r\n      showSelectionBarFromValue: null,\r\n      hidePointerLabels: false,\r\n      hideLimitLabels: false,\r\n      autoHideLimitLabels: true,\r\n      readOnly: false,\r\n      disabled: false,\r\n      interval: 350,\r\n      showTicks: false,\r\n      showTicksValues: false,\r\n      ticksArray: null,\r\n      ticksTooltip: null,\r\n      ticksValuesTooltip: null,\r\n      vertical: false,\r\n      getSelectionBarColor: null,\r\n      getTickColor: null,\r\n      getPointerColor: null,\r\n      keyboardSupport: true,\r\n      scale: 1,\r\n      enforceStep: true,\r\n      enforceRange: false,\r\n      noSwitching: false,\r\n      onlyBindHandles: false,\r\n      onStart: null,\r\n      onChange: null,\r\n      onEnd: null,\r\n      rightToLeft: false,\r\n      boundPointerLabels: true,\r\n      mergeRangeLabelsIfSame: false,\r\n      customTemplateScope: null,\r\n      logScale: false,\r\n      customValueToPosition: null,\r\n      customPositionToValue: null,\r\n      selectionBarGradient: null\r\n    };\r\n    var globalOptions = {};\r\n\r\n    var factory = {};\r\n    /**\r\n     * `options({})` allows global configuration of all sliders in the\r\n     * application.\r\n     *\r\n     *   var app = angular.module( 'App', ['rzModule'], function( RzSliderOptions ) {\r\n     *     // show ticks for all sliders\r\n     *     RzSliderOptions.options( { showTicks: true } );\r\n     *   });\r\n     */\r\n    factory.options = function(value) {\r\n      angular.extend(globalOptions, value);\r\n    };\r\n\r\n    factory.getOptions = function(options) {\r\n      return angular.extend({}, defaultOptions, globalOptions, options);\r\n    };\r\n\r\n    return factory;\r\n  })\r\n\r\n  .factory('rzThrottle', ['$timeout', function($timeout) {\r\n    /**\r\n     * rzThrottle\r\n     *\r\n     * Taken from underscore project\r\n     *\r\n     * @param {Function} func\r\n     * @param {number} wait\r\n     * @param {ThrottleOptions} options\r\n     * @returns {Function}\r\n     */\r\n    return function(func, wait, options) {\r\n      'use strict';\r\n      /* istanbul ignore next */\r\n      var getTime = (Date.now || function() {\r\n        return new Date().getTime();\r\n      });\r\n      var context, args, result;\r\n      var timeout = null;\r\n      var previous = 0;\r\n      options = options || {};\r\n      var later = function() {\r\n        previous = getTime();\r\n        timeout = null;\r\n        result = func.apply(context, args);\r\n        context = args = null;\r\n      };\r\n      return function() {\r\n        var now = getTime();\r\n        var remaining = wait - (now - previous);\r\n        context = this;\r\n        args = arguments;\r\n        if (remaining <= 0) {\r\n          $timeout.cancel(timeout);\r\n          timeout = null;\r\n          previous = now;\r\n          result = func.apply(context, args);\r\n          context = args = null;\r\n        } else if (!timeout && options.trailing !== false) {\r\n          timeout = $timeout(later, remaining);\r\n        }\r\n        return result;\r\n      };\r\n    }\r\n  }])\r\n\r\n  .factory('RzSlider', ['$timeout', '$document', '$window', '$compile', 'RzSliderOptions', 'rzThrottle', function($timeout, $document, $window, $compile, RzSliderOptions, rzThrottle) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Slider\r\n     *\r\n     * @param {ngScope} scope            The AngularJS scope\r\n     * @param {Element} sliderElem The slider directive element wrapped in jqLite\r\n     * @constructor\r\n     */\r\n    var Slider = function(scope, sliderElem) {\r\n      /**\r\n       * The slider's scope\r\n       *\r\n       * @type {ngScope}\r\n       */\r\n      this.scope = scope;\r\n\r\n      /**\r\n       * The slider inner low value (linked to rzSliderModel)\r\n       * @type {number}\r\n       */\r\n      this.lowValue = 0;\r\n\r\n      /**\r\n       * The slider inner high value (linked to rzSliderHigh)\r\n       * @type {number}\r\n       */\r\n      this.highValue = 0;\r\n\r\n      /**\r\n       * Slider element wrapped in jqLite\r\n       *\r\n       * @type {jqLite}\r\n       */\r\n      this.sliderElem = sliderElem;\r\n\r\n      /**\r\n       * Slider type\r\n       *\r\n       * @type {boolean} Set to true for range slider\r\n       */\r\n      this.range = this.scope.rzSliderModel !== undefined && this.scope.rzSliderHigh !== undefined;\r\n\r\n      /**\r\n       * Values recorded when first dragging the bar\r\n       *\r\n       * @type {Object}\r\n       */\r\n      this.dragging = {\r\n        active: false,\r\n        value: 0,\r\n        difference: 0,\r\n        position: 0,\r\n        lowLimit: 0,\r\n        highLimit: 0\r\n      };\r\n\r\n      /**\r\n       * property that handle position (defaults to left for horizontal)\r\n       * @type {string}\r\n       */\r\n      this.positionProperty = 'left';\r\n\r\n      /**\r\n       * property that handle dimension (defaults to width for horizontal)\r\n       * @type {string}\r\n       */\r\n      this.dimensionProperty = 'width';\r\n\r\n      /**\r\n       * Half of the width or height of the slider handles\r\n       *\r\n       * @type {number}\r\n       */\r\n      this.handleHalfDim = 0;\r\n\r\n      /**\r\n       * Maximum position the slider handle can have\r\n       *\r\n       * @type {number}\r\n       */\r\n      this.maxPos = 0;\r\n\r\n      /**\r\n       * Precision\r\n       *\r\n       * @type {number}\r\n       */\r\n      this.precision = 0;\r\n\r\n      /**\r\n       * Step\r\n       *\r\n       * @type {number}\r\n       */\r\n      this.step = 1;\r\n\r\n      /**\r\n       * The name of the handle we are currently tracking\r\n       *\r\n       * @type {string}\r\n       */\r\n      this.tracking = '';\r\n\r\n      /**\r\n       * Minimum value (floor) of the model\r\n       *\r\n       * @type {number}\r\n       */\r\n      this.minValue = 0;\r\n\r\n      /**\r\n       * Maximum value (ceiling) of the model\r\n       *\r\n       * @type {number}\r\n       */\r\n      this.maxValue = 0;\r\n\r\n\r\n      /**\r\n       * The delta between min and max value\r\n       *\r\n       * @type {number}\r\n       */\r\n      this.valueRange = 0;\r\n\r\n\r\n      /**\r\n       * If showTicks/showTicksValues options are number.\r\n       * In this case, ticks values should be displayed below the slider.\r\n       * @type {boolean}\r\n       */\r\n      this.intermediateTicks = false;\r\n\r\n      /**\r\n       * Set to true if init method already executed\r\n       *\r\n       * @type {boolean}\r\n       */\r\n      this.initHasRun = false;\r\n\r\n      /**\r\n       * Used to call onStart on the first keydown event\r\n       *\r\n       * @type {boolean}\r\n       */\r\n      this.firstKeyDown = false;\r\n\r\n      /**\r\n       * Internal flag to prevent watchers to be called when the sliders value are modified internally.\r\n       * @type {boolean}\r\n       */\r\n      this.internalChange = false;\r\n\r\n      /**\r\n       * Internal flag to keep track of the visibility of combo label\r\n       * @type {boolean}\r\n       */\r\n      this.cmbLabelShown = false;\r\n\r\n      /**\r\n       * Internal variable to keep track of the focus element\r\n       */\r\n      this.currentFocusElement = null;\r\n\r\n      // Slider DOM elements wrapped in jqLite\r\n      this.fullBar = null; // The whole slider bar\r\n      this.selBar = null; // Highlight between two handles\r\n      this.minH = null; // Left slider handle\r\n      this.maxH = null; // Right slider handle\r\n      this.flrLab = null; // Floor label\r\n      this.ceilLab = null; // Ceiling label\r\n      this.minLab = null; // Label above the low value\r\n      this.maxLab = null; // Label above the high value\r\n      this.cmbLab = null; // Combined label\r\n      this.ticks = null; // The ticks\r\n\r\n      // Initialize slider\r\n      this.init();\r\n    };\r\n\r\n    // Add instance methods\r\n    Slider.prototype = {\r\n\r\n      /**\r\n       * Initialize slider\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      init: function() {\r\n        var thrLow, thrHigh,\r\n          self = this;\r\n\r\n        var calcDimFn = function() {\r\n          self.calcViewDimensions();\r\n        };\r\n\r\n        this.applyOptions();\r\n        this.syncLowValue();\r\n        if (this.range)\r\n          this.syncHighValue();\r\n        this.initElemHandles();\r\n        this.manageElementsStyle();\r\n        this.setDisabledState();\r\n        this.calcViewDimensions();\r\n        this.setMinAndMax();\r\n        this.addAccessibility();\r\n        this.updateCeilLab();\r\n        this.updateFloorLab();\r\n        this.initHandles();\r\n        this.manageEventsBindings();\r\n\r\n        // Recalculate slider view dimensions\r\n        this.scope.$on('reCalcViewDimensions', calcDimFn);\r\n\r\n        // Recalculate stuff if view port dimensions have changed\r\n        angular.element($window).on('resize', calcDimFn);\r\n\r\n        this.initHasRun = true;\r\n\r\n        // Watch for changes to the model\r\n        thrLow = rzThrottle(function() {\r\n          self.onLowHandleChange();\r\n        }, self.options.interval);\r\n\r\n        thrHigh = rzThrottle(function() {\r\n          self.onHighHandleChange();\r\n        }, self.options.interval);\r\n\r\n        this.scope.$on('rzSliderForceRender', function() {\r\n          self.resetLabelsValue();\r\n          thrLow();\r\n          if (self.range) {\r\n            thrHigh();\r\n          }\r\n          self.resetSlider();\r\n        });\r\n\r\n        // Watchers (order is important because in case of simultaneous change,\r\n        // watchers will be called in the same order)\r\n        this.scope.$watch('rzSliderOptions()', function(newValue, oldValue) {\r\n          if (newValue === oldValue)\r\n            return;\r\n          self.applyOptions(); // need to be called before synchronizing the values\r\n          self.syncLowValue();\r\n          if (self.range)\r\n            self.syncHighValue();\r\n          self.resetSlider();\r\n        }, true);\r\n\r\n        this.scope.$watch('rzSliderModel', function(newValue, oldValue) {\r\n          if (self.internalChange)\r\n            return;\r\n          if (newValue === oldValue)\r\n            return;\r\n          thrLow();\r\n        });\r\n\r\n        this.scope.$watch('rzSliderHigh', function(newValue, oldValue) {\r\n          if (self.internalChange)\r\n            return;\r\n          if (newValue === oldValue)\r\n            return;\r\n          if (newValue != null)\r\n            thrHigh();\r\n          if (self.range && newValue == null || !self.range && newValue != null) {\r\n            self.applyOptions();\r\n            self.resetSlider();\r\n          }\r\n        });\r\n\r\n        this.scope.$on('$destroy', function() {\r\n          self.unbindEvents();\r\n          angular.element($window).off('resize', calcDimFn);\r\n          self.currentFocusElement = null;\r\n        });\r\n      },\r\n\r\n      findStepIndex: function(modelValue) {\r\n        var index = 0;\r\n        for (var i = 0; i < this.options.stepsArray.length; i++) {\r\n          var step = this.options.stepsArray[i];\r\n          if (step === modelValue) {\r\n            index = i;\r\n            break;\r\n          }\r\n          else if (angular.isDate(step)) {\r\n            if (step.getTime() === modelValue.getTime()) {\r\n              index = i;\r\n              break;\r\n            }\r\n          }\r\n          else if (angular.isObject(step)) {\r\n            if (angular.isDate(step.value) && step.value.getTime() === modelValue.getTime() || step.value === modelValue) {\r\n              index = i;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        return index;\r\n      },\r\n\r\n      syncLowValue: function() {\r\n        if (this.options.stepsArray) {\r\n          if (!this.options.bindIndexForStepsArray)\r\n            this.lowValue = this.findStepIndex(this.scope.rzSliderModel);\r\n          else\r\n            this.lowValue = this.scope.rzSliderModel\r\n        }\r\n        else\r\n          this.lowValue = this.scope.rzSliderModel;\r\n      },\r\n\r\n      syncHighValue: function() {\r\n        if (this.options.stepsArray) {\r\n          if (!this.options.bindIndexForStepsArray)\r\n            this.highValue = this.findStepIndex(this.scope.rzSliderHigh);\r\n          else\r\n            this.highValue = this.scope.rzSliderHigh\r\n        }\r\n        else\r\n          this.highValue = this.scope.rzSliderHigh;\r\n      },\r\n\r\n      getStepValue: function(sliderValue) {\r\n        var step = this.options.stepsArray[sliderValue];\r\n        if (angular.isDate(step))\r\n          return step;\r\n        if (angular.isObject(step))\r\n          return step.value;\r\n        return step;\r\n      },\r\n\r\n      applyLowValue: function() {\r\n        if (this.options.stepsArray) {\r\n          if (!this.options.bindIndexForStepsArray)\r\n            this.scope.rzSliderModel = this.getStepValue(this.lowValue);\r\n          else\r\n            this.scope.rzSliderModel = this.lowValue\r\n        }\r\n        else\r\n          this.scope.rzSliderModel = this.lowValue;\r\n      },\r\n\r\n      applyHighValue: function() {\r\n        if (this.options.stepsArray) {\r\n          if (!this.options.bindIndexForStepsArray)\r\n            this.scope.rzSliderHigh = this.getStepValue(this.highValue);\r\n          else\r\n            this.scope.rzSliderHigh = this.highValue\r\n        }\r\n        else\r\n          this.scope.rzSliderHigh = this.highValue;\r\n      },\r\n\r\n      /*\r\n       * Reflow the slider when the low handle changes (called with throttle)\r\n       */\r\n      onLowHandleChange: function() {\r\n        this.syncLowValue();\r\n        if (this.range)\r\n          this.syncHighValue();\r\n        this.setMinAndMax();\r\n        this.updateLowHandle(this.valueToPosition(this.lowValue));\r\n        this.updateSelectionBar();\r\n        this.updateTicksScale();\r\n        this.updateAriaAttributes();\r\n        if (this.range) {\r\n          this.updateCmbLabel();\r\n        }\r\n      },\r\n\r\n      /*\r\n       * Reflow the slider when the high handle changes (called with throttle)\r\n       */\r\n      onHighHandleChange: function() {\r\n        this.syncLowValue();\r\n        this.syncHighValue();\r\n        this.setMinAndMax();\r\n        this.updateHighHandle(this.valueToPosition(this.highValue));\r\n        this.updateSelectionBar();\r\n        this.updateTicksScale();\r\n        this.updateCmbLabel();\r\n        this.updateAriaAttributes();\r\n      },\r\n\r\n      /**\r\n       * Read the user options and apply them to the slider model\r\n       */\r\n      applyOptions: function() {\r\n        var sliderOptions;\r\n        if (this.scope.rzSliderOptions)\r\n          sliderOptions = this.scope.rzSliderOptions();\r\n        else\r\n          sliderOptions = {};\r\n\r\n        this.options = RzSliderOptions.getOptions(sliderOptions);\r\n\r\n        if (this.options.step <= 0)\r\n          this.options.step = 1;\r\n\r\n        this.range = this.scope.rzSliderModel !== undefined && this.scope.rzSliderHigh !== undefined;\r\n        this.options.draggableRange = this.range && this.options.draggableRange;\r\n        this.options.draggableRangeOnly = this.range && this.options.draggableRangeOnly;\r\n        if (this.options.draggableRangeOnly) {\r\n          this.options.draggableRange = true;\r\n        }\r\n\r\n        this.options.showTicks = this.options.showTicks || this.options.showTicksValues || !!this.options.ticksArray;\r\n        this.scope.showTicks = this.options.showTicks; //scope is used in the template\r\n        if (angular.isNumber(this.options.showTicks) || this.options.ticksArray)\r\n          this.intermediateTicks = true;\r\n\r\n        this.options.showSelectionBar = this.options.showSelectionBar || this.options.showSelectionBarEnd\r\n          || this.options.showSelectionBarFromValue !== null;\r\n\r\n        if (this.options.stepsArray) {\r\n          this.parseStepsArray();\r\n        } else {\r\n          if (this.options.translate)\r\n            this.customTrFn = this.options.translate;\r\n          else\r\n            this.customTrFn = function(value) {\r\n              return String(value);\r\n            };\r\n\r\n          this.getLegend = this.options.getLegend;\r\n        }\r\n\r\n        if (this.options.vertical) {\r\n          this.positionProperty = 'bottom';\r\n          this.dimensionProperty = 'height';\r\n        }\r\n\r\n        if (this.options.customTemplateScope)\r\n          this.scope.custom = this.options.customTemplateScope;\r\n      },\r\n\r\n      parseStepsArray: function() {\r\n        this.options.floor = 0;\r\n        this.options.ceil = this.options.stepsArray.length - 1;\r\n        this.options.step = 1;\r\n\r\n        if (this.options.translate) {\r\n          this.customTrFn = this.options.translate;\r\n        }\r\n        else {\r\n          this.customTrFn = function(modelValue) {\r\n            if (this.options.bindIndexForStepsArray)\r\n              return this.getStepValue(modelValue);\r\n            return modelValue;\r\n          };\r\n        }\r\n\r\n        this.getLegend = function(index) {\r\n          var step = this.options.stepsArray[index];\r\n          if (angular.isObject(step))\r\n            return step.legend;\r\n          return null;\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Resets slider\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      resetSlider: function() {\r\n        this.manageElementsStyle();\r\n        this.addAccessibility();\r\n        this.setMinAndMax();\r\n        this.updateCeilLab();\r\n        this.updateFloorLab();\r\n        this.unbindEvents();\r\n        this.manageEventsBindings();\r\n        this.setDisabledState();\r\n        this.calcViewDimensions();\r\n        this.refocusPointerIfNeeded();\r\n      },\r\n\r\n      refocusPointerIfNeeded: function() {\r\n        if (this.currentFocusElement) {\r\n          this.onPointerFocus(this.currentFocusElement.pointer, this.currentFocusElement.ref);\r\n          this.focusElement(this.currentFocusElement.pointer)\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Set the slider children to variables for easy access\r\n       *\r\n       * Run only once during initialization\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      initElemHandles: function() {\r\n        // Assign all slider elements to object properties for easy access\r\n        angular.forEach(this.sliderElem.children(), function(elem, index) {\r\n          var jElem = angular.element(elem);\r\n\r\n          switch (index) {\r\n            case 0:\r\n              this.fullBar = jElem;\r\n              break;\r\n            case 1:\r\n              this.selBar = jElem;\r\n              break;\r\n            case 2:\r\n              this.minH = jElem;\r\n              break;\r\n            case 3:\r\n              this.maxH = jElem;\r\n              break;\r\n            case 4:\r\n              this.flrLab = jElem;\r\n              break;\r\n            case 5:\r\n              this.ceilLab = jElem;\r\n              break;\r\n            case 6:\r\n              this.minLab = jElem;\r\n              break;\r\n            case 7:\r\n              this.maxLab = jElem;\r\n              break;\r\n            case 8:\r\n              this.cmbLab = jElem;\r\n              break;\r\n            case 9:\r\n              this.ticks = jElem;\r\n              break;\r\n          }\r\n\r\n        }, this);\r\n\r\n        // Initialize position cache properties\r\n        this.selBar.rzsp = 0;\r\n        this.minH.rzsp = 0;\r\n        this.maxH.rzsp = 0;\r\n        this.flrLab.rzsp = 0;\r\n        this.ceilLab.rzsp = 0;\r\n        this.minLab.rzsp = 0;\r\n        this.maxLab.rzsp = 0;\r\n        this.cmbLab.rzsp = 0;\r\n      },\r\n\r\n      /**\r\n       * Update each elements style based on options\r\n       */\r\n      manageElementsStyle: function() {\r\n\r\n        if (!this.range)\r\n          this.maxH.css('display', 'none');\r\n        else\r\n          this.maxH.css('display', '');\r\n\r\n\r\n        this.alwaysHide(this.flrLab, this.options.showTicksValues || this.options.hideLimitLabels);\r\n        this.alwaysHide(this.ceilLab, this.options.showTicksValues || this.options.hideLimitLabels);\r\n\r\n        var hideLabelsForTicks = this.options.showTicksValues && !this.intermediateTicks;\r\n        this.alwaysHide(this.minLab, hideLabelsForTicks || this.options.hidePointerLabels);\r\n        this.alwaysHide(this.maxLab, hideLabelsForTicks || !this.range || this.options.hidePointerLabels);\r\n        this.alwaysHide(this.cmbLab, hideLabelsForTicks || !this.range || this.options.hidePointerLabels);\r\n        this.alwaysHide(this.selBar, !this.range && !this.options.showSelectionBar);\r\n\r\n        if (this.options.vertical)\r\n          this.sliderElem.addClass('rz-vertical');\r\n\r\n        if (this.options.draggableRange)\r\n          this.selBar.addClass('rz-draggable');\r\n        else\r\n          this.selBar.removeClass('rz-draggable');\r\n\r\n        if (this.intermediateTicks && this.options.showTicksValues)\r\n          this.ticks.addClass('rz-ticks-values-under');\r\n      },\r\n\r\n      alwaysHide: function(el, hide) {\r\n        el.rzAlwaysHide = hide;\r\n        if (hide)\r\n          this.hideEl(el);\r\n        else\r\n          this.showEl(el)\r\n      },\r\n\r\n      /**\r\n       * Manage the events bindings based on readOnly and disabled options\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      manageEventsBindings: function() {\r\n        if (this.options.disabled || this.options.readOnly)\r\n          this.unbindEvents();\r\n        else\r\n          this.bindEvents();\r\n      },\r\n\r\n      /**\r\n       * Set the disabled state based on rzSliderDisabled\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      setDisabledState: function() {\r\n        if (this.options.disabled) {\r\n          this.sliderElem.attr('disabled', 'disabled');\r\n        } else {\r\n          this.sliderElem.attr('disabled', null);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Reset label values\r\n       *\r\n       * @return {undefined}\r\n       */\r\n      resetLabelsValue: function() {\r\n        this.minLab.rzsv = undefined;\r\n        this.maxLab.rzsv = undefined;\r\n      },\r\n\r\n      /**\r\n       * Initialize slider handles positions and labels\r\n       *\r\n       * Run only once during initialization and every time view port changes size\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      initHandles: function() {\r\n        this.updateLowHandle(this.valueToPosition(this.lowValue));\r\n\r\n        /*\r\n         the order here is important since the selection bar should be\r\n         updated after the high handle but before the combined label\r\n         */\r\n        if (this.range)\r\n          this.updateHighHandle(this.valueToPosition(this.highValue));\r\n        this.updateSelectionBar();\r\n        if (this.range)\r\n          this.updateCmbLabel();\r\n\r\n        this.updateTicksScale();\r\n      },\r\n\r\n      /**\r\n       * Translate value to human readable format\r\n       *\r\n       * @param {number|string} value\r\n       * @param {jqLite} label\r\n       * @param {String} which\r\n       * @param {boolean} [useCustomTr]\r\n       * @returns {undefined}\r\n       */\r\n      translateFn: function(value, label, which, useCustomTr) {\r\n        useCustomTr = useCustomTr === undefined ? true : useCustomTr;\r\n\r\n        var valStr = '',\r\n          getDimension = false,\r\n          noLabelInjection = label.hasClass('no-label-injection');\r\n\r\n        if (useCustomTr) {\r\n          if (this.options.stepsArray && !this.options.bindIndexForStepsArray)\r\n            value = this.getStepValue(value);\r\n          valStr = String(this.customTrFn(value, this.options.id, which));\r\n        }\r\n        else {\r\n          valStr = String(value)\r\n        }\r\n\r\n        if (label.rzsv === undefined || label.rzsv.length !== valStr.length || (label.rzsv.length > 0 && label.rzsd === 0)) {\r\n          getDimension = true;\r\n          label.rzsv = valStr;\r\n        }\r\n\r\n        if (!noLabelInjection) {\r\n          label.html(valStr);\r\n        }\r\n        ;\r\n\r\n        this.scope[which + 'Label'] = valStr;\r\n\r\n        // Update width only when length of the label have changed\r\n        if (getDimension) {\r\n          this.getDimension(label);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Set maximum and minimum values for the slider and ensure the model and high\r\n       * value match these limits\r\n       * @returns {undefined}\r\n       */\r\n      setMinAndMax: function() {\r\n\r\n        this.step = +this.options.step;\r\n        this.precision = +this.options.precision;\r\n\r\n        this.minValue = this.options.floor;\r\n        if (this.options.logScale && this.minValue === 0)\r\n          throw Error(\"Can't use floor=0 with logarithmic scale\");\r\n\r\n        if (this.options.enforceStep) {\r\n          this.lowValue = this.roundStep(this.lowValue);\r\n          if (this.range)\r\n            this.highValue = this.roundStep(this.highValue);\r\n        }\r\n\r\n        if (this.options.ceil != null)\r\n          this.maxValue = this.options.ceil;\r\n        else\r\n          this.maxValue = this.options.ceil = this.range ? this.highValue : this.lowValue;\r\n\r\n        if (this.options.enforceRange) {\r\n          this.lowValue = this.sanitizeValue(this.lowValue);\r\n          if (this.range)\r\n            this.highValue = this.sanitizeValue(this.highValue);\r\n        }\r\n\r\n        this.applyLowValue();\r\n        if (this.range)\r\n          this.applyHighValue();\r\n\r\n        this.valueRange = this.maxValue - this.minValue;\r\n      },\r\n\r\n      /**\r\n       * Adds accessibility attributes\r\n       *\r\n       * Run only once during initialization\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      addAccessibility: function() {\r\n        this.minH.attr('role', 'slider');\r\n        this.updateAriaAttributes();\r\n        if (this.options.keyboardSupport && !(this.options.readOnly || this.options.disabled))\r\n          this.minH.attr('tabindex', '0');\r\n        else\r\n          this.minH.attr('tabindex', '');\r\n        if (this.options.vertical)\r\n          this.minH.attr('aria-orientation', 'vertical');\r\n\r\n        if (this.range) {\r\n          this.maxH.attr('role', 'slider');\r\n          if (this.options.keyboardSupport && !(this.options.readOnly || this.options.disabled))\r\n            this.maxH.attr('tabindex', '0');\r\n          else\r\n            this.maxH.attr('tabindex', '');\r\n          if (this.options.vertical)\r\n            this.maxH.attr('aria-orientation', 'vertical');\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Updates aria attributes according to current values\r\n       */\r\n      updateAriaAttributes: function() {\r\n        this.minH.attr({\r\n          'aria-valuenow': this.scope.rzSliderModel,\r\n          'aria-valuetext': this.customTrFn(this.scope.rzSliderModel, this.options.id, 'model'),\r\n          'aria-valuemin': this.minValue,\r\n          'aria-valuemax': this.maxValue\r\n        });\r\n        if (this.range) {\r\n          this.maxH.attr({\r\n            'aria-valuenow': this.scope.rzSliderHigh,\r\n            'aria-valuetext': this.customTrFn(this.scope.rzSliderHigh, this.options.id, 'high'),\r\n            'aria-valuemin': this.minValue,\r\n            'aria-valuemax': this.maxValue\r\n          });\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Calculate dimensions that are dependent on view port size\r\n       *\r\n       * Run once during initialization and every time view port changes size.\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      calcViewDimensions: function() {\r\n        var handleWidth = this.getDimension(this.minH);\r\n\r\n        this.handleHalfDim = handleWidth / 2;\r\n        this.barDimension = this.getDimension(this.fullBar);\r\n\r\n        this.maxPos = this.barDimension - handleWidth;\r\n\r\n        this.getDimension(this.sliderElem);\r\n        this.sliderElem.rzsp = this.sliderElem[0].getBoundingClientRect()[this.positionProperty];\r\n\r\n        if (this.initHasRun) {\r\n          this.updateFloorLab();\r\n          this.updateCeilLab();\r\n          this.initHandles();\r\n          var self = this;\r\n          $timeout(function() {\r\n            self.updateTicksScale();\r\n          });\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Update the ticks position\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      updateTicksScale: function() {\r\n        if (!this.options.showTicks) return;\r\n\r\n        var ticksArray = this.options.ticksArray || this.getTicksArray(),\r\n          translate = this.options.vertical ? 'translateY' : 'translateX',\r\n          self = this;\r\n\r\n        if (this.options.rightToLeft)\r\n          ticksArray.reverse();\r\n\r\n        this.scope.ticks = ticksArray.map(function(value) {\r\n          var position = self.valueToPosition(value);\r\n\r\n          if (self.options.vertical)\r\n            position = self.maxPos - position;\r\n\r\n          var tick = {\r\n            selected: self.isTickSelected(value),\r\n            style: {\r\n              transform: translate + '(' + Math.round(position) + 'px)'\r\n            }\r\n          };\r\n          if (tick.selected && self.options.getSelectionBarColor) {\r\n            tick.style['background-color'] = self.getSelectionBarColor();\r\n          }\r\n          if (!tick.selected && self.options.getTickColor) {\r\n            tick.style['background-color'] = self.getTickColor(value);\r\n          }\r\n          if (self.options.ticksTooltip) {\r\n            tick.tooltip = self.options.ticksTooltip(value);\r\n            tick.tooltipPlacement = self.options.vertical ? 'right' : 'top';\r\n          }\r\n          if (self.options.showTicksValues) {\r\n            tick.value = self.getDisplayValue(value, 'tick-value');\r\n            if (self.options.ticksValuesTooltip) {\r\n              tick.valueTooltip = self.options.ticksValuesTooltip(value);\r\n              tick.valueTooltipPlacement = self.options.vertical ? 'right' : 'top';\r\n            }\r\n          }\r\n          if (self.getLegend) {\r\n            var legend = self.getLegend(value, self.options.id);\r\n            if (legend)\r\n              tick.legend = legend;\r\n          }\r\n          return tick;\r\n        });\r\n      },\r\n\r\n      getTicksArray: function() {\r\n        var step = this.step,\r\n          ticksArray = [];\r\n        if (this.intermediateTicks)\r\n          step = this.options.showTicks;\r\n        for (var value = this.minValue; value <= this.maxValue; value += step) {\r\n          ticksArray.push(value);\r\n        }\r\n        return ticksArray;\r\n      },\r\n\r\n      isTickSelected: function(value) {\r\n        if (!this.range) {\r\n          if (this.options.showSelectionBarFromValue !== null) {\r\n            var center = this.options.showSelectionBarFromValue;\r\n            if (this.lowValue > center && value >= center && value <= this.lowValue)\r\n              return true;\r\n            else if (this.lowValue < center && value <= center && value >= this.lowValue)\r\n              return true;\r\n          }\r\n          else if (this.options.showSelectionBarEnd) {\r\n            if (value >= this.lowValue)\r\n              return true;\r\n          }\r\n          else if (this.options.showSelectionBar && value <= this.lowValue)\r\n            return true;\r\n        }\r\n        if (this.range && value >= this.lowValue && value <= this.highValue)\r\n          return true;\r\n        return false;\r\n      },\r\n\r\n      /**\r\n       * Update position of the floor label\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      updateFloorLab: function() {\r\n        this.translateFn(this.minValue, this.flrLab, 'floor');\r\n        this.getDimension(this.flrLab);\r\n        var position = this.options.rightToLeft ? this.barDimension - this.flrLab.rzsd : 0;\r\n        this.setPosition(this.flrLab, position);\r\n      },\r\n\r\n      /**\r\n       * Update position of the ceiling label\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      updateCeilLab: function() {\r\n        this.translateFn(this.maxValue, this.ceilLab, 'ceil');\r\n        this.getDimension(this.ceilLab);\r\n        var position = this.options.rightToLeft ? 0 : this.barDimension - this.ceilLab.rzsd;\r\n        this.setPosition(this.ceilLab, position);\r\n      },\r\n\r\n      /**\r\n       * Update slider handles and label positions\r\n       *\r\n       * @param {string} which\r\n       * @param {number} newPos\r\n       */\r\n      updateHandles: function(which, newPos) {\r\n        if (which === 'lowValue')\r\n          this.updateLowHandle(newPos);\r\n        else\r\n          this.updateHighHandle(newPos);\r\n\r\n        this.updateSelectionBar();\r\n        this.updateTicksScale();\r\n        if (this.range)\r\n          this.updateCmbLabel();\r\n      },\r\n\r\n      /**\r\n       * Helper function to work out the position for handle labels depending on RTL or not\r\n       *\r\n       * @param {string} labelName maxLab or minLab\r\n       * @param newPos\r\n       *\r\n       * @returns {number}\r\n       */\r\n      getHandleLabelPos: function(labelName, newPos) {\r\n        var labelRzsd = this[labelName].rzsd,\r\n          nearHandlePos = newPos - labelRzsd / 2 + this.handleHalfDim,\r\n          endOfBarPos = this.barDimension - labelRzsd;\r\n\r\n        if (!this.options.boundPointerLabels)\r\n          return nearHandlePos;\r\n\r\n        if (this.options.rightToLeft && labelName === 'minLab' || !this.options.rightToLeft && labelName === 'maxLab') {\r\n          return Math.min(nearHandlePos, endOfBarPos);\r\n        } else {\r\n          return Math.min(Math.max(nearHandlePos, 0), endOfBarPos);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Update low slider handle position and label\r\n       *\r\n       * @param {number} newPos\r\n       * @returns {undefined}\r\n       */\r\n      updateLowHandle: function(newPos) {\r\n        this.setPosition(this.minH, newPos);\r\n        this.translateFn(this.lowValue, this.minLab, 'model');\r\n        this.setPosition(this.minLab, this.getHandleLabelPos('minLab', newPos));\r\n\r\n        if (this.options.getPointerColor) {\r\n          var pointercolor = this.getPointerColor('min');\r\n          this.scope.minPointerStyle = {\r\n            backgroundColor: pointercolor\r\n          };\r\n        }\r\n\r\n        if (this.options.autoHideLimitLabels) {\r\n          this.shFloorCeil();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Update high slider handle position and label\r\n       *\r\n       * @param {number} newPos\r\n       * @returns {undefined}\r\n       */\r\n      updateHighHandle: function(newPos) {\r\n        this.setPosition(this.maxH, newPos);\r\n        this.translateFn(this.highValue, this.maxLab, 'high');\r\n        this.setPosition(this.maxLab, this.getHandleLabelPos('maxLab', newPos));\r\n\r\n        if (this.options.getPointerColor) {\r\n          var pointercolor = this.getPointerColor('max');\r\n          this.scope.maxPointerStyle = {\r\n            backgroundColor: pointercolor\r\n          };\r\n        }\r\n        if (this.options.autoHideLimitLabels) {\r\n          this.shFloorCeil();\r\n        }\r\n\r\n      },\r\n\r\n      /**\r\n       * Show/hide floor/ceiling label\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      shFloorCeil: function() {\r\n        // Show based only on hideLimitLabels if pointer labels are hidden\r\n        if (this.options.hidePointerLabels) {\r\n          return;\r\n        }\r\n        var flHidden = false,\r\n          clHidden = false,\r\n          isMinLabAtFloor = this.isLabelBelowFloorLab(this.minLab),\r\n          isMinLabAtCeil = this.isLabelAboveCeilLab(this.minLab),\r\n          isMaxLabAtCeil = this.isLabelAboveCeilLab(this.maxLab),\r\n          isCmbLabAtFloor = this.isLabelBelowFloorLab(this.cmbLab),\r\n          isCmbLabAtCeil =  this.isLabelAboveCeilLab(this.cmbLab);\r\n\r\n        if (isMinLabAtFloor) {\r\n          flHidden = true;\r\n          this.hideEl(this.flrLab);\r\n        } else {\r\n          flHidden = false;\r\n          this.showEl(this.flrLab);\r\n        }\r\n\r\n        if (isMinLabAtCeil) {\r\n          clHidden = true;\r\n          this.hideEl(this.ceilLab);\r\n        } else {\r\n          clHidden = false;\r\n          this.showEl(this.ceilLab);\r\n        }\r\n\r\n        if (this.range) {\r\n          var hideCeil = this.cmbLabelShown ? isCmbLabAtCeil : isMaxLabAtCeil;\r\n          var hideFloor = this.cmbLabelShown ? isCmbLabAtFloor : isMinLabAtFloor;\r\n\r\n          if (hideCeil) {\r\n            this.hideEl(this.ceilLab);\r\n          } else if (!clHidden) {\r\n            this.showEl(this.ceilLab);\r\n          }\r\n\r\n          // Hide or show floor label\r\n          if (hideFloor) {\r\n            this.hideEl(this.flrLab);\r\n          } else if (!flHidden) {\r\n            this.showEl(this.flrLab);\r\n          }\r\n        }\r\n      },\r\n\r\n      isLabelBelowFloorLab: function(label) {\r\n        var isRTL = this.options.rightToLeft,\r\n          pos = label.rzsp,\r\n          dim = label.rzsd,\r\n          floorPos = this.flrLab.rzsp,\r\n          floorDim = this.flrLab.rzsd;\r\n        return isRTL ?\r\n        pos + dim >= floorPos - 2 :\r\n        pos <= floorPos + floorDim + 2;\r\n      },\r\n\r\n      isLabelAboveCeilLab: function(label) {\r\n        var isRTL = this.options.rightToLeft,\r\n          pos = label.rzsp,\r\n          dim = label.rzsd,\r\n          ceilPos = this.ceilLab.rzsp,\r\n          ceilDim = this.ceilLab.rzsd;\r\n        return isRTL ?\r\n        pos <= ceilPos + ceilDim + 2 :\r\n        pos + dim >= ceilPos - 2;\r\n      },\r\n\r\n      /**\r\n       * Update slider selection bar, combined label and range label\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      updateSelectionBar: function() {\r\n        var position = 0,\r\n          dimension = 0,\r\n          isSelectionBarFromRight = this.options.rightToLeft ? !this.options.showSelectionBarEnd : this.options.showSelectionBarEnd,\r\n          positionForRange = this.options.rightToLeft ? this.maxH.rzsp + this.handleHalfDim : this.minH.rzsp + this.handleHalfDim;\r\n\r\n        if (this.range) {\r\n          dimension = Math.abs(this.maxH.rzsp - this.minH.rzsp);\r\n          position = positionForRange;\r\n        }\r\n        else {\r\n          if (this.options.showSelectionBarFromValue !== null) {\r\n            var center = this.options.showSelectionBarFromValue,\r\n              centerPosition = this.valueToPosition(center),\r\n              isModelGreaterThanCenter = this.options.rightToLeft ? this.lowValue <= center : this.lowValue > center;\r\n            if (isModelGreaterThanCenter) {\r\n              dimension = this.minH.rzsp - centerPosition;\r\n              position = centerPosition + this.handleHalfDim;\r\n            }\r\n            else {\r\n              dimension = centerPosition - this.minH.rzsp;\r\n              position = this.minH.rzsp + this.handleHalfDim;\r\n            }\r\n          }\r\n          else if (isSelectionBarFromRight) {\r\n            dimension = Math.abs(this.maxPos - this.minH.rzsp) + this.handleHalfDim;\r\n            position = this.minH.rzsp + this.handleHalfDim;\r\n          } else {\r\n            dimension = Math.abs(this.maxH.rzsp - this.minH.rzsp) + this.handleHalfDim;\r\n            position = 0;\r\n          }\r\n        }\r\n        this.setDimension(this.selBar, dimension);\r\n        this.setPosition(this.selBar, position);\r\n        if (this.options.getSelectionBarColor) {\r\n          var color = this.getSelectionBarColor();\r\n          this.scope.barStyle = {\r\n            backgroundColor: color\r\n          };\r\n        } else if (this.options.selectionBarGradient) {\r\n          var offset = this.options.showSelectionBarFromValue !== null ? this.valueToPosition(this.options.showSelectionBarFromValue) : 0,\r\n            reversed = offset - position > 0 ^ isSelectionBarFromRight,\r\n            direction = this.options.vertical ? (reversed ? 'bottom' : 'top') : (reversed ? 'left' : 'right');\r\n          this.scope.barStyle = {\r\n            backgroundImage: 'linear-gradient(to ' + direction + ', ' + this.options.selectionBarGradient.from + ' 0%,' + this.options.selectionBarGradient.to + ' 100%)'\r\n          };\r\n          if (this.options.vertical) {\r\n            this.scope.barStyle.backgroundPosition = 'center ' + (offset + dimension + position + (reversed ? -this.handleHalfDim : 0)) + 'px';\r\n            this.scope.barStyle.backgroundSize = '100% ' + (this.barDimension - this.handleHalfDim) + 'px';\r\n          } else {\r\n            this.scope.barStyle.backgroundPosition = (offset - position + (reversed ? this.handleHalfDim : 0)) + 'px center';\r\n            this.scope.barStyle.backgroundSize = (this.barDimension - this.handleHalfDim) + 'px 100%';\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Wrapper around the getSelectionBarColor of the user to pass to\r\n       * correct parameters\r\n       */\r\n      getSelectionBarColor: function() {\r\n        if (this.range)\r\n          return this.options.getSelectionBarColor(this.scope.rzSliderModel, this.scope.rzSliderHigh);\r\n        return this.options.getSelectionBarColor(this.scope.rzSliderModel);\r\n      },\r\n\r\n      /**\r\n       * Wrapper around the getPointerColor of the user to pass to\r\n       * correct parameters\r\n       */\r\n      getPointerColor: function(pointerType) {\r\n        if (pointerType === 'max') {\r\n          return this.options.getPointerColor(this.scope.rzSliderHigh, pointerType);\r\n        }\r\n        return this.options.getPointerColor(this.scope.rzSliderModel, pointerType);\r\n      },\r\n\r\n      /**\r\n       * Wrapper around the getTickColor of the user to pass to\r\n       * correct parameters\r\n       */\r\n      getTickColor: function(value) {\r\n        return this.options.getTickColor(value);\r\n      },\r\n\r\n      /**\r\n       * Update combined label position and value\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      updateCmbLabel: function() {\r\n        var isLabelOverlap = null;\r\n        if (this.options.rightToLeft) {\r\n          isLabelOverlap = this.minLab.rzsp - this.minLab.rzsd - 10 <= this.maxLab.rzsp;\r\n        } else {\r\n          isLabelOverlap = this.minLab.rzsp + this.minLab.rzsd + 10 >= this.maxLab.rzsp;\r\n        }\r\n\r\n        if (isLabelOverlap) {\r\n          var lowTr = this.getDisplayValue(this.lowValue, 'model'),\r\n            highTr = this.getDisplayValue(this.highValue, 'high'),\r\n            labelVal = '';\r\n          if (this.options.mergeRangeLabelsIfSame && lowTr === highTr) {\r\n            labelVal = lowTr;\r\n          } else {\r\n            labelVal = this.options.rightToLeft ? highTr + ' - ' + lowTr : lowTr + ' - ' + highTr;\r\n          }\r\n\r\n          this.translateFn(labelVal, this.cmbLab, 'cmb', false);\r\n          var pos = this.options.boundPointerLabels ? Math.min(\r\n            Math.max(\r\n              this.selBar.rzsp + this.selBar.rzsd / 2 - this.cmbLab.rzsd / 2,\r\n              0\r\n            ),\r\n            this.barDimension - this.cmbLab.rzsd\r\n          ) : this.selBar.rzsp + this.selBar.rzsd / 2 - this.cmbLab.rzsd / 2;\r\n\r\n          this.setPosition(this.cmbLab, pos);\r\n          this.cmbLabelShown = true;\r\n          this.hideEl(this.minLab);\r\n          this.hideEl(this.maxLab);\r\n          this.showEl(this.cmbLab);\r\n        } else {\r\n          this.cmbLabelShown = false;\r\n          this.showEl(this.maxLab);\r\n          this.showEl(this.minLab);\r\n          this.hideEl(this.cmbLab);\r\n        }\r\n        if (this.options.autoHideLimitLabels) {\r\n          this.shFloorCeil();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Return the translated value if a translate function is provided else the original value\r\n       * @param value\r\n       * @param which if it's min or max handle\r\n       * @returns {*}\r\n       */\r\n      getDisplayValue: function(value, which) {\r\n        if (this.options.stepsArray && !this.options.bindIndexForStepsArray) {\r\n          value = this.getStepValue(value);\r\n        }\r\n        return this.customTrFn(value, this.options.id, which);\r\n      },\r\n\r\n      /**\r\n       * Round value to step and precision based on minValue\r\n       *\r\n       * @param {number} value\r\n       * @param {number} customStep a custom step to override the defined step\r\n       * @returns {number}\r\n       */\r\n      roundStep: function(value, customStep) {\r\n        var step = customStep ? customStep : this.step,\r\n          steppedDifference = parseFloat((value - this.minValue) / step).toPrecision(12);\r\n        steppedDifference = Math.round(+steppedDifference) * step;\r\n        var newValue = (this.minValue + steppedDifference).toFixed(this.precision);\r\n        return +newValue;\r\n      },\r\n\r\n      /**\r\n       * Hide element\r\n       *\r\n       * @param element\r\n       * @returns {jqLite} The jqLite wrapped DOM element\r\n       */\r\n      hideEl: function(element) {\r\n        return element.css({\r\n          visibility: 'hidden'\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Show element\r\n       *\r\n       * @param element The jqLite wrapped DOM element\r\n       * @returns {jqLite} The jqLite\r\n       */\r\n      showEl: function(element) {\r\n        if (!!element.rzAlwaysHide) {\r\n          return element;\r\n        }\r\n\r\n        return element.css({\r\n          visibility: 'visible'\r\n        });\r\n      },\r\n\r\n      /**\r\n       * Set element left/top position depending on whether slider is horizontal or vertical\r\n       *\r\n       * @param {jqLite} elem The jqLite wrapped DOM element\r\n       * @param {number} pos\r\n       * @returns {number}\r\n       */\r\n      setPosition: function(elem, pos) {\r\n        elem.rzsp = pos;\r\n        var css = {};\r\n        css[this.positionProperty] = Math.round(pos) + 'px';\r\n        elem.css(css);\r\n        return pos;\r\n      },\r\n\r\n      /**\r\n       * Get element width/height depending on whether slider is horizontal or vertical\r\n       *\r\n       * @param {jqLite} elem The jqLite wrapped DOM element\r\n       * @returns {number}\r\n       */\r\n      getDimension: function(elem) {\r\n        var val = elem[0].getBoundingClientRect();\r\n        if (this.options.vertical)\r\n          elem.rzsd = (val.bottom - val.top) * this.options.scale;\r\n        else\r\n          elem.rzsd = (val.right - val.left) * this.options.scale;\r\n        return elem.rzsd;\r\n      },\r\n\r\n      /**\r\n       * Set element width/height depending on whether slider is horizontal or vertical\r\n       *\r\n       * @param {jqLite} elem  The jqLite wrapped DOM element\r\n       * @param {number} dim\r\n       * @returns {number}\r\n       */\r\n      setDimension: function(elem, dim) {\r\n        elem.rzsd = dim;\r\n        var css = {};\r\n        css[this.dimensionProperty] = Math.round(dim) + 'px';\r\n        elem.css(css);\r\n        return dim;\r\n      },\r\n\r\n      /**\r\n       * Returns a value that is within slider range\r\n       *\r\n       * @param {number} val\r\n       * @returns {number}\r\n       */\r\n      sanitizeValue: function(val) {\r\n        return Math.min(Math.max(val, this.minValue), this.maxValue);\r\n      },\r\n\r\n      /**\r\n       * Translate value to pixel position\r\n       *\r\n       * @param {number} val\r\n       * @returns {number}\r\n       */\r\n      valueToPosition: function(val) {\r\n        var fn = this.linearValueToPosition;\r\n        if (this.options.customValueToPosition)\r\n          fn = this.options.customValueToPosition;\r\n        else if (this.options.logScale)\r\n          fn = this.logValueToPosition;\r\n\r\n        val = this.sanitizeValue(val);\r\n        var percent = fn(val, this.minValue, this.maxValue) || 0;\r\n        if (this.options.rightToLeft)\r\n          percent = 1 - percent;\r\n        return percent * this.maxPos;\r\n      },\r\n\r\n      linearValueToPosition: function(val, minVal, maxVal) {\r\n        var range = maxVal - minVal;\r\n        return (val - minVal) / range;\r\n      },\r\n\r\n      logValueToPosition: function(val, minVal, maxVal) {\r\n        val = Math.log(val);\r\n        minVal = Math.log(minVal);\r\n        maxVal = Math.log(maxVal);\r\n        var range = maxVal - minVal;\r\n        return (val - minVal) / range;\r\n      },\r\n\r\n      /**\r\n       * Translate position to model value\r\n       *\r\n       * @param {number} position\r\n       * @returns {number}\r\n       */\r\n      positionToValue: function(position) {\r\n        var percent = position / this.maxPos;\r\n        if (this.options.rightToLeft)\r\n          percent = 1 - percent;\r\n        var fn = this.linearPositionToValue;\r\n        if (this.options.customPositionToValue)\r\n          fn = this.options.customPositionToValue;\r\n        else if (this.options.logScale)\r\n          fn = this.logPositionToValue;\r\n        return fn(percent, this.minValue, this.maxValue) || 0;\r\n      },\r\n\r\n      linearPositionToValue: function(percent, minVal, maxVal) {\r\n        return percent * (maxVal - minVal) + minVal;\r\n      },\r\n\r\n      logPositionToValue: function(percent, minVal, maxVal) {\r\n        minVal = Math.log(minVal);\r\n        maxVal = Math.log(maxVal);\r\n        var value = percent * (maxVal - minVal) + minVal;\r\n        return Math.exp(value);\r\n      },\r\n\r\n      // Events\r\n      /**\r\n       * Get the X-coordinate or Y-coordinate of an event\r\n       *\r\n       * @param {Object} event  The event\r\n       * @returns {number}\r\n       */\r\n      getEventXY: function(event) {\r\n        /* http://stackoverflow.com/a/12336075/282882 */\r\n        //noinspection JSLint\r\n        var clientXY = this.options.vertical ? 'clientY' : 'clientX';\r\n        if (event[clientXY] !== undefined) {\r\n          return event[clientXY];\r\n        }\r\n\r\n        return event.originalEvent === undefined ?\r\n          event.touches[0][clientXY] : event.originalEvent.touches[0][clientXY];\r\n      },\r\n\r\n      /**\r\n       * Compute the event position depending on whether the slider is horizontal or vertical\r\n       * @param event\r\n       * @returns {number}\r\n       */\r\n      getEventPosition: function(event) {\r\n        var sliderPos = this.sliderElem.rzsp,\r\n          eventPos = 0;\r\n        if (this.options.vertical)\r\n          eventPos = -this.getEventXY(event) + sliderPos;\r\n        else\r\n          eventPos = this.getEventXY(event) - sliderPos;\r\n        return eventPos * this.options.scale - this.handleHalfDim; // #346 handleHalfDim is already scaled\r\n      },\r\n\r\n      /**\r\n       * Get event names for move and event end\r\n       *\r\n       * @param {Event}    event    The event\r\n       *\r\n       * @return {{moveEvent: string, endEvent: string}}\r\n       */\r\n      getEventNames: function(event) {\r\n        var eventNames = {\r\n          moveEvent: '',\r\n          endEvent: ''\r\n        };\r\n\r\n        if (event.touches || (event.originalEvent !== undefined && event.originalEvent.touches)) {\r\n          eventNames.moveEvent = 'touchmove';\r\n          eventNames.endEvent = 'touchend';\r\n        } else {\r\n          eventNames.moveEvent = 'mousemove';\r\n          eventNames.endEvent = 'mouseup';\r\n        }\r\n\r\n        return eventNames;\r\n      },\r\n\r\n      /**\r\n       * Get the handle closest to an event.\r\n       *\r\n       * @param event {Event} The event\r\n       * @returns {jqLite} The handle closest to the event.\r\n       */\r\n      getNearestHandle: function(event) {\r\n        if (!this.range) {\r\n          return this.minH;\r\n        }\r\n        var position = this.getEventPosition(event),\r\n          distanceMin = Math.abs(position - this.minH.rzsp),\r\n          distanceMax = Math.abs(position - this.maxH.rzsp);\r\n        if (distanceMin < distanceMax)\r\n          return this.minH;\r\n        else if (distanceMin > distanceMax)\r\n          return this.maxH;\r\n        else if (!this.options.rightToLeft)\r\n        //if event is at the same distance from min/max then if it's at left of minH, we return minH else maxH\r\n          return position < this.minH.rzsp ? this.minH : this.maxH;\r\n        else\r\n        //reverse in rtl\r\n          return position > this.minH.rzsp ? this.minH : this.maxH;\r\n      },\r\n\r\n      /**\r\n       * Wrapper function to focus an angular element\r\n       *\r\n       * @param el {AngularElement} the element to focus\r\n       */\r\n      focusElement: function(el) {\r\n        var DOM_ELEMENT = 0;\r\n        el[DOM_ELEMENT].focus();\r\n      },\r\n\r\n      /**\r\n       * Bind mouse and touch events to slider handles\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      bindEvents: function() {\r\n        var barTracking, barStart, barMove;\r\n\r\n        if (this.options.draggableRange) {\r\n          barTracking = 'rzSliderDrag';\r\n          barStart = this.onDragStart;\r\n          barMove = this.onDragMove;\r\n        } else {\r\n          barTracking = 'lowValue';\r\n          barStart = this.onStart;\r\n          barMove = this.onMove;\r\n        }\r\n\r\n        if (!this.options.onlyBindHandles) {\r\n          this.selBar.on('mousedown', angular.bind(this, barStart, null, barTracking));\r\n          this.selBar.on('mousedown', angular.bind(this, barMove, this.selBar));\r\n        }\r\n\r\n        if (this.options.draggableRangeOnly) {\r\n          this.minH.on('mousedown', angular.bind(this, barStart, null, barTracking));\r\n          this.maxH.on('mousedown', angular.bind(this, barStart, null, barTracking));\r\n        } else {\r\n          this.minH.on('mousedown', angular.bind(this, this.onStart, this.minH, 'lowValue'));\r\n          if (this.range) {\r\n            this.maxH.on('mousedown', angular.bind(this, this.onStart, this.maxH, 'highValue'));\r\n          }\r\n          if (!this.options.onlyBindHandles) {\r\n            this.fullBar.on('mousedown', angular.bind(this, this.onStart, null, null));\r\n            this.fullBar.on('mousedown', angular.bind(this, this.onMove, this.fullBar));\r\n            this.ticks.on('mousedown', angular.bind(this, this.onStart, null, null));\r\n            this.ticks.on('mousedown', angular.bind(this, this.onTickClick, this.ticks));\r\n          }\r\n        }\r\n\r\n        if (!this.options.onlyBindHandles) {\r\n          this.selBar.on('touchstart', angular.bind(this, barStart, null, barTracking));\r\n          this.selBar.on('touchstart', angular.bind(this, barMove, this.selBar));\r\n        }\r\n        if (this.options.draggableRangeOnly) {\r\n          this.minH.on('touchstart', angular.bind(this, barStart, null, barTracking));\r\n          this.maxH.on('touchstart', angular.bind(this, barStart, null, barTracking));\r\n        } else {\r\n          this.minH.on('touchstart', angular.bind(this, this.onStart, this.minH, 'lowValue'));\r\n          if (this.range) {\r\n            this.maxH.on('touchstart', angular.bind(this, this.onStart, this.maxH, 'highValue'));\r\n          }\r\n          if (!this.options.onlyBindHandles) {\r\n            this.fullBar.on('touchstart', angular.bind(this, this.onStart, null, null));\r\n            this.fullBar.on('touchstart', angular.bind(this, this.onMove, this.fullBar));\r\n            this.ticks.on('touchstart', angular.bind(this, this.onStart, null, null));\r\n            this.ticks.on('touchstart', angular.bind(this, this.onTickClick, this.ticks));\r\n          }\r\n        }\r\n\r\n        if (this.options.keyboardSupport) {\r\n          this.minH.on('focus', angular.bind(this, this.onPointerFocus, this.minH, 'lowValue'));\r\n          if (this.range) {\r\n            this.maxH.on('focus', angular.bind(this, this.onPointerFocus, this.maxH, 'highValue'));\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Unbind mouse and touch events to slider handles\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      unbindEvents: function() {\r\n        this.minH.off();\r\n        this.maxH.off();\r\n        this.fullBar.off();\r\n        this.selBar.off();\r\n        this.ticks.off();\r\n      },\r\n\r\n      /**\r\n       * onStart event handler\r\n       *\r\n       * @param {?Object} pointer The jqLite wrapped DOM element; if null, the closest handle is used\r\n       * @param {?string} ref     The name of the handle being changed; if null, the closest handle's value is modified\r\n       * @param {Event}   event   The event\r\n       * @returns {undefined}\r\n       */\r\n      onStart: function(pointer, ref, event) {\r\n        var ehMove, ehEnd,\r\n          eventNames = this.getEventNames(event);\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        // We have to do this in case the HTML where the sliders are on\r\n        // have been animated into view.\r\n        this.calcViewDimensions();\r\n\r\n        if (pointer) {\r\n          this.tracking = ref;\r\n        } else {\r\n          pointer = this.getNearestHandle(event);\r\n          this.tracking = pointer === this.minH ? 'lowValue' : 'highValue';\r\n        }\r\n\r\n        pointer.addClass('rz-active');\r\n\r\n        if (this.options.keyboardSupport)\r\n          this.focusElement(pointer);\r\n\r\n        ehMove = angular.bind(this, this.dragging.active ? this.onDragMove : this.onMove, pointer);\r\n        ehEnd = angular.bind(this, this.onEnd, ehMove);\r\n\r\n        $document.on(eventNames.moveEvent, ehMove);\r\n        $document.one(eventNames.endEvent, ehEnd);\r\n        this.callOnStart();\r\n      },\r\n\r\n      /**\r\n       * onMove event handler\r\n       *\r\n       * @param {jqLite} pointer\r\n       * @param {Event}  event The event\r\n       * @param {boolean}  fromTick if the event occured on a tick or not\r\n       * @returns {undefined}\r\n       */\r\n      onMove: function(pointer, event, fromTick) {\r\n        var newPos = this.getEventPosition(event),\r\n          newValue,\r\n          ceilValue = this.options.rightToLeft ? this.minValue : this.maxValue,\r\n          flrValue = this.options.rightToLeft ? this.maxValue : this.minValue;\r\n\r\n        if (newPos <= 0) {\r\n          newValue = flrValue;\r\n        } else if (newPos >= this.maxPos) {\r\n          newValue = ceilValue;\r\n        } else {\r\n          newValue = this.positionToValue(newPos);\r\n          if (fromTick && angular.isNumber(this.options.showTicks))\r\n            newValue = this.roundStep(newValue, this.options.showTicks);\r\n          else\r\n            newValue = this.roundStep(newValue);\r\n        }\r\n        this.positionTrackingHandle(newValue);\r\n      },\r\n\r\n      /**\r\n       * onEnd event handler\r\n       *\r\n       * @param {Event}    event    The event\r\n       * @param {Function} ehMove   The the bound move event handler\r\n       * @returns {undefined}\r\n       */\r\n      onEnd: function(ehMove, event) {\r\n        var moveEventName = this.getEventNames(event).moveEvent;\r\n\r\n        if (!this.options.keyboardSupport) {\r\n          this.minH.removeClass('rz-active');\r\n          this.maxH.removeClass('rz-active');\r\n          this.tracking = '';\r\n        }\r\n        this.dragging.active = false;\r\n\r\n        $document.off(moveEventName, ehMove);\r\n        this.callOnEnd();\r\n      },\r\n\r\n      onTickClick: function(pointer, event) {\r\n        this.onMove(pointer, event, true);\r\n      },\r\n\r\n      onPointerFocus: function(pointer, ref) {\r\n        this.tracking = ref;\r\n        pointer.one('blur', angular.bind(this, this.onPointerBlur, pointer));\r\n        pointer.on('keydown', angular.bind(this, this.onKeyboardEvent));\r\n        pointer.on('keyup', angular.bind(this, this.onKeyUp));\r\n        this.firstKeyDown = true;\r\n        pointer.addClass('rz-active');\r\n\r\n        this.currentFocusElement = {\r\n          pointer: pointer,\r\n          ref: ref\r\n        };\r\n      },\r\n\r\n      onKeyUp: function() {\r\n        this.firstKeyDown = true;\r\n        this.callOnEnd();\r\n      },\r\n\r\n      onPointerBlur: function(pointer) {\r\n        pointer.off('keydown');\r\n        pointer.off('keyup');\r\n        this.tracking = '';\r\n        pointer.removeClass('rz-active');\r\n        this.currentFocusElement = null\r\n      },\r\n\r\n      /**\r\n       * Key actions helper function\r\n       *\r\n       * @param {number} currentValue value of the slider\r\n       *\r\n       * @returns {?Object} action value mappings\r\n       */\r\n      getKeyActions: function(currentValue) {\r\n        var increaseStep = currentValue + this.step,\r\n          decreaseStep = currentValue - this.step,\r\n          increasePage = currentValue + this.valueRange / 10,\r\n          decreasePage = currentValue - this.valueRange / 10;\r\n\r\n        //Left to right default actions\r\n        var actions = {\r\n          'UP': increaseStep,\r\n          'DOWN': decreaseStep,\r\n          'LEFT': decreaseStep,\r\n          'RIGHT': increaseStep,\r\n          'PAGEUP': increasePage,\r\n          'PAGEDOWN': decreasePage,\r\n          'HOME': this.minValue,\r\n          'END': this.maxValue\r\n        };\r\n        //right to left means swapping right and left arrows\r\n        if (this.options.rightToLeft) {\r\n          actions.LEFT = increaseStep;\r\n          actions.RIGHT = decreaseStep;\r\n          // right to left and vertical means we also swap up and down\r\n          if (this.options.vertical) {\r\n            actions.UP = decreaseStep;\r\n            actions.DOWN = increaseStep;\r\n          }\r\n        }\r\n        return actions;\r\n      },\r\n\r\n      onKeyboardEvent: function(event) {\r\n        var currentValue = this[this.tracking],\r\n          keyCode = event.keyCode || event.which,\r\n          keys = {\r\n            38: 'UP',\r\n            40: 'DOWN',\r\n            37: 'LEFT',\r\n            39: 'RIGHT',\r\n            33: 'PAGEUP',\r\n            34: 'PAGEDOWN',\r\n            36: 'HOME',\r\n            35: 'END'\r\n          },\r\n          actions = this.getKeyActions(currentValue),\r\n          key = keys[keyCode],\r\n          action = actions[key];\r\n        if (action == null || this.tracking === '') return;\r\n        event.preventDefault();\r\n\r\n        if (this.firstKeyDown) {\r\n          this.firstKeyDown = false;\r\n          this.callOnStart();\r\n        }\r\n\r\n        var self = this;\r\n        $timeout(function() {\r\n          var newValue = self.roundStep(self.sanitizeValue(action));\r\n          if (!self.options.draggableRangeOnly) {\r\n            self.positionTrackingHandle(newValue);\r\n          }\r\n          else {\r\n            var difference = self.highValue - self.lowValue,\r\n              newMinValue, newMaxValue;\r\n            if (self.tracking === 'lowValue') {\r\n              newMinValue = newValue;\r\n              newMaxValue = newValue + difference;\r\n              if (newMaxValue > self.maxValue) {\r\n                newMaxValue = self.maxValue;\r\n                newMinValue = newMaxValue - difference;\r\n              }\r\n            } else {\r\n              newMaxValue = newValue;\r\n              newMinValue = newValue - difference;\r\n              if (newMinValue < self.minValue) {\r\n                newMinValue = self.minValue;\r\n                newMaxValue = newMinValue + difference;\r\n              }\r\n            }\r\n            self.positionTrackingBar(newMinValue, newMaxValue);\r\n          }\r\n        });\r\n      },\r\n\r\n      /**\r\n       * onDragStart event handler\r\n       *\r\n       * Handles dragging of the middle bar.\r\n       *\r\n       * @param {Object} pointer The jqLite wrapped DOM element\r\n       * @param {string} ref     One of the refLow, refHigh values\r\n       * @param {Event}  event   The event\r\n       * @returns {undefined}\r\n       */\r\n      onDragStart: function(pointer, ref, event) {\r\n        var position = this.getEventPosition(event);\r\n        this.dragging = {\r\n          active: true,\r\n          value: this.positionToValue(position),\r\n          difference: this.highValue - this.lowValue,\r\n          lowLimit: this.options.rightToLeft ? this.minH.rzsp - position : position - this.minH.rzsp,\r\n          highLimit: this.options.rightToLeft ? position - this.maxH.rzsp : this.maxH.rzsp - position\r\n        };\r\n\r\n        this.onStart(pointer, ref, event);\r\n      },\r\n\r\n      /**\r\n       * getValue helper function\r\n       *\r\n       * gets max or min value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\r\n       *\r\n       * @param {string} type 'max' || 'min' The value we are calculating\r\n       * @param {number} newPos  The new position\r\n       * @param {boolean} outOfBounds Is the new position above or below the max/min?\r\n       * @param {boolean} isAbove Is the new position above the bar if out of bounds?\r\n       *\r\n       * @returns {number}\r\n       */\r\n      getValue: function(type, newPos, outOfBounds, isAbove) {\r\n        var isRTL = this.options.rightToLeft,\r\n          value = null;\r\n\r\n        if (type === 'min') {\r\n          if (outOfBounds) {\r\n            if (isAbove) {\r\n              value = isRTL ? this.minValue : this.maxValue - this.dragging.difference;\r\n            } else {\r\n              value = isRTL ? this.maxValue - this.dragging.difference : this.minValue;\r\n            }\r\n          } else {\r\n            value = isRTL ? this.positionToValue(newPos + this.dragging.lowLimit) : this.positionToValue(newPos - this.dragging.lowLimit)\r\n          }\r\n        } else {\r\n          if (outOfBounds) {\r\n            if (isAbove) {\r\n              value = isRTL ? this.minValue + this.dragging.difference : this.maxValue;\r\n            } else {\r\n              value = isRTL ? this.maxValue : this.minValue + this.dragging.difference;\r\n            }\r\n          } else {\r\n            if (isRTL) {\r\n              value = this.positionToValue(newPos + this.dragging.lowLimit) + this.dragging.difference\r\n            } else {\r\n              value = this.positionToValue(newPos - this.dragging.lowLimit) + this.dragging.difference;\r\n            }\r\n          }\r\n        }\r\n        return this.roundStep(value);\r\n      },\r\n\r\n      /**\r\n       * onDragMove event handler\r\n       *\r\n       * Handles dragging of the middle bar.\r\n       *\r\n       * @param {jqLite} pointer\r\n       * @param {Event}  event The event\r\n       * @returns {undefined}\r\n       */\r\n      onDragMove: function(pointer, event) {\r\n        var newPos = this.getEventPosition(event),\r\n          newMinValue, newMaxValue,\r\n          ceilLimit, flrLimit,\r\n          isUnderFlrLimit, isOverCeilLimit,\r\n          flrH, ceilH;\r\n\r\n        if (this.options.rightToLeft) {\r\n          ceilLimit = this.dragging.lowLimit;\r\n          flrLimit = this.dragging.highLimit;\r\n          flrH = this.maxH;\r\n          ceilH = this.minH;\r\n        } else {\r\n          ceilLimit = this.dragging.highLimit;\r\n          flrLimit = this.dragging.lowLimit;\r\n          flrH = this.minH;\r\n          ceilH = this.maxH;\r\n        }\r\n        isUnderFlrLimit = newPos <= flrLimit;\r\n        isOverCeilLimit = newPos >= this.maxPos - ceilLimit;\r\n\r\n        if (isUnderFlrLimit) {\r\n          if (flrH.rzsp === 0)\r\n            return;\r\n          newMinValue = this.getValue('min', newPos, true, false);\r\n          newMaxValue = this.getValue('max', newPos, true, false);\r\n        } else if (isOverCeilLimit) {\r\n          if (ceilH.rzsp === this.maxPos)\r\n            return;\r\n          newMaxValue = this.getValue('max', newPos, true, true);\r\n          newMinValue = this.getValue('min', newPos, true, true);\r\n        } else {\r\n          newMinValue = this.getValue('min', newPos, false);\r\n          newMaxValue = this.getValue('max', newPos, false);\r\n        }\r\n        this.positionTrackingBar(newMinValue, newMaxValue);\r\n      },\r\n\r\n      /**\r\n       * Set the new value and position for the entire bar\r\n       *\r\n       * @param {number} newMinValue   the new minimum value\r\n       * @param {number} newMaxValue   the new maximum value\r\n       */\r\n      positionTrackingBar: function(newMinValue, newMaxValue) {\r\n\r\n        if (this.options.minLimit != null && newMinValue < this.options.minLimit) {\r\n          newMinValue = this.options.minLimit;\r\n          newMaxValue = newMinValue + this.dragging.difference;\r\n        }\r\n        if (this.options.maxLimit != null && newMaxValue > this.options.maxLimit) {\r\n          newMaxValue = this.options.maxLimit;\r\n          newMinValue = newMaxValue - this.dragging.difference;\r\n        }\r\n\r\n        this.lowValue = newMinValue;\r\n        this.highValue = newMaxValue;\r\n        this.applyLowValue();\r\n        if (this.range)\r\n          this.applyHighValue();\r\n        this.applyModel();\r\n        this.updateHandles('lowValue', this.valueToPosition(newMinValue));\r\n        this.updateHandles('highValue', this.valueToPosition(newMaxValue));\r\n      },\r\n\r\n      /**\r\n       * Set the new value and position to the current tracking handle\r\n       *\r\n       * @param {number} newValue new model value\r\n       */\r\n      positionTrackingHandle: function(newValue) {\r\n        var valueChanged = false;\r\n\r\n        newValue = this.applyMinMaxLimit(newValue);\r\n        if (this.range) {\r\n          if (this.options.pushRange) {\r\n            newValue = this.applyPushRange(newValue);\r\n            valueChanged = true;\r\n          }\r\n          else {\r\n            if (this.options.noSwitching) {\r\n              if (this.tracking === 'lowValue' && newValue > this.highValue)\r\n                newValue = this.applyMinMaxRange(this.highValue);\r\n              else if (this.tracking === 'highValue' && newValue < this.lowValue)\r\n                newValue = this.applyMinMaxRange(this.lowValue);\r\n            }\r\n            newValue = this.applyMinMaxRange(newValue);\r\n            /* This is to check if we need to switch the min and max handles */\r\n            if (this.tracking === 'lowValue' && newValue > this.highValue) {\r\n              this.lowValue = this.highValue;\r\n              this.applyLowValue();\r\n              this.updateHandles(this.tracking, this.maxH.rzsp);\r\n              this.updateAriaAttributes();\r\n              this.tracking = 'highValue';\r\n              this.minH.removeClass('rz-active');\r\n              this.maxH.addClass('rz-active');\r\n              if (this.options.keyboardSupport)\r\n                this.focusElement(this.maxH);\r\n              valueChanged = true;\r\n            }\r\n            else if (this.tracking === 'highValue' && newValue < this.lowValue) {\r\n              this.highValue = this.lowValue;\r\n              this.applyHighValue();\r\n              this.updateHandles(this.tracking, this.minH.rzsp);\r\n              this.updateAriaAttributes();\r\n              this.tracking = 'lowValue';\r\n              this.maxH.removeClass('rz-active');\r\n              this.minH.addClass('rz-active');\r\n              if (this.options.keyboardSupport)\r\n                this.focusElement(this.minH);\r\n              valueChanged = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this[this.tracking] !== newValue) {\r\n          this[this.tracking] = newValue;\r\n          if (this.tracking === 'lowValue')\r\n            this.applyLowValue();\r\n          else\r\n            this.applyHighValue();\r\n          this.updateHandles(this.tracking, this.valueToPosition(newValue));\r\n          this.updateAriaAttributes();\r\n          valueChanged = true;\r\n        }\r\n\r\n        if (valueChanged)\r\n          this.applyModel();\r\n      },\r\n\r\n      applyMinMaxLimit: function(newValue) {\r\n        if (this.options.minLimit != null && newValue < this.options.minLimit)\r\n          return this.options.minLimit;\r\n        if (this.options.maxLimit != null && newValue > this.options.maxLimit)\r\n          return this.options.maxLimit;\r\n        return newValue;\r\n      },\r\n\r\n      applyMinMaxRange: function(newValue) {\r\n        var oppositeValue = this.tracking === 'lowValue' ? this.highValue : this.lowValue,\r\n          difference = Math.abs(newValue - oppositeValue);\r\n        if (this.options.minRange != null) {\r\n          if (difference < this.options.minRange) {\r\n            if (this.tracking === 'lowValue')\r\n              return this.highValue - this.options.minRange;\r\n            else\r\n              return this.lowValue + this.options.minRange;\r\n          }\r\n        }\r\n        if (this.options.maxRange != null) {\r\n          if (difference > this.options.maxRange) {\r\n            if (this.tracking === 'lowValue')\r\n              return this.highValue - this.options.maxRange;\r\n            else\r\n              return this.lowValue + this.options.maxRange;\r\n          }\r\n        }\r\n        return newValue;\r\n      },\r\n\r\n      applyPushRange: function(newValue) {\r\n        var difference = this.tracking === 'lowValue' ? this.highValue - newValue : newValue - this.lowValue,\r\n          minRange = this.options.minRange !== null ? this.options.minRange : this.options.step,\r\n          maxRange = this.options.maxRange;\r\n        // if smaller than minRange\r\n        if (difference < minRange) {\r\n          if (this.tracking === 'lowValue') {\r\n            this.highValue = Math.min(newValue + minRange, this.maxValue);\r\n            newValue = this.highValue - minRange;\r\n            this.applyHighValue();\r\n            this.updateHandles('highValue', this.valueToPosition(this.highValue));\r\n          }\r\n          else {\r\n            this.lowValue = Math.max(newValue - minRange, this.minValue);\r\n            newValue = this.lowValue + minRange;\r\n            this.applyLowValue();\r\n            this.updateHandles('lowValue', this.valueToPosition(this.lowValue));\r\n          }\r\n          this.updateAriaAttributes();\r\n        }\r\n        // if greater than maxRange\r\n        else if (maxRange !== null && difference > maxRange) {\r\n          if (this.tracking === 'lowValue') {\r\n            this.highValue = newValue + maxRange;\r\n            this.applyHighValue();\r\n            this.updateHandles('highValue', this.valueToPosition(this.highValue));\r\n          }\r\n          else {\r\n            this.lowValue = newValue - maxRange;\r\n            this.applyLowValue();\r\n            this.updateHandles('lowValue', this.valueToPosition(this.lowValue));\r\n          }\r\n          this.updateAriaAttributes();\r\n        }\r\n        return newValue;\r\n      },\r\n\r\n      /**\r\n       * Apply the model values using scope.$apply.\r\n       * We wrap it with the internalChange flag to avoid the watchers to be called\r\n       */\r\n      applyModel: function() {\r\n        this.internalChange = true;\r\n        this.scope.$apply();\r\n        this.callOnChange();\r\n        this.internalChange = false;\r\n      },\r\n\r\n      /**\r\n       * Call the onStart callback if defined\r\n       * The callback call is wrapped in a $evalAsync to ensure that its result will be applied to the scope.\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      callOnStart: function() {\r\n        if (this.options.onStart) {\r\n          var self = this,\r\n            pointerType = this.tracking === 'lowValue' ? 'min' : 'max';\r\n          this.scope.$evalAsync(function() {\r\n            self.options.onStart(self.options.id, self.scope.rzSliderModel, self.scope.rzSliderHigh, pointerType);\r\n          });\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Call the onChange callback if defined\r\n       * The callback call is wrapped in a $evalAsync to ensure that its result will be applied to the scope.\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      callOnChange: function() {\r\n        if (this.options.onChange) {\r\n          var self = this,\r\n            pointerType = this.tracking === 'lowValue' ? 'min' : 'max';\r\n          this.scope.$evalAsync(function() {\r\n            self.options.onChange(self.options.id, self.scope.rzSliderModel, self.scope.rzSliderHigh, pointerType);\r\n          });\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Call the onEnd callback if defined\r\n       * The callback call is wrapped in a $evalAsync to ensure that its result will be applied to the scope.\r\n       *\r\n       * @returns {undefined}\r\n       */\r\n      callOnEnd: function() {\r\n        if (this.options.onEnd) {\r\n          var self = this,\r\n            pointerType = this.tracking === 'lowValue' ? 'min' : 'max';\r\n          this.scope.$evalAsync(function() {\r\n            self.options.onEnd(self.options.id, self.scope.rzSliderModel, self.scope.rzSliderHigh, pointerType);\r\n          });\r\n        }\r\n        this.scope.$emit('slideEnded');\r\n      }\r\n    };\r\n\r\n    return Slider;\r\n  }])\r\n\r\n  .directive('rzslider', ['RzSlider', function(RzSlider) {\r\n    'use strict';\r\n\r\n    return {\r\n      restrict: 'AE',\r\n      replace: true,\r\n      scope: {\r\n        rzSliderModel: '=?',\r\n        rzSliderHigh: '=?',\r\n        rzSliderOptions: '&?',\r\n        rzSliderTplUrl: '@'\r\n      },\r\n\r\n      /**\r\n       * Return template URL\r\n       *\r\n       * @param {jqLite} elem\r\n       * @param {Object} attrs\r\n       * @return {string}\r\n       */\r\n      templateUrl: function(elem, attrs) {\r\n        //noinspection JSUnresolvedVariable\r\n        return attrs.rzSliderTplUrl || 'rzSliderTpl.html';\r\n      },\r\n\r\n      link: function(scope, elem) {\r\n        scope.slider = new RzSlider(scope, elem); //attach on scope so we can test it\r\n      }\r\n    };\r\n  }]);\r\n\r\n  // IDE assist\r\n\r\n  /**\r\n   * @name ngScope\r\n   *\r\n   * @property {number} rzSliderModel\r\n   * @property {number} rzSliderHigh\r\n   * @property {Object} rzSliderOptions\r\n   */\r\n\r\n  /**\r\n   * @name jqLite\r\n   *\r\n   * @property {number|undefined} rzsp rzslider label position position\r\n   * @property {number|undefined} rzsd rzslider element dimension\r\n   * @property {string|undefined} rzsv rzslider label value/text\r\n   * @property {Function} css\r\n   * @property {Function} text\r\n   */\r\n\r\n  /**\r\n   * @name Event\r\n   * @property {Array} touches\r\n   * @property {Event} originalEvent\r\n   */\r\n\r\n  /**\r\n   * @name ThrottleOptions\r\n   *\r\n   * @property {boolean} leading\r\n   * @property {boolean} trailing\r\n   */\r\n\r\n  module.run(['$templateCache', function($templateCache) {\r\n  'use strict';\r\n\r\n  $templateCache.put('rzSliderTpl.html',\r\n    \"<div class=rzslider><span class=rz-bar-wrapper><span class=rz-bar></span></span> <span class=rz-bar-wrapper><span class=\\\"rz-bar rz-selection\\\" ng-style=barStyle></span></span> <span class=\\\"rz-pointer rz-pointer-min\\\" ng-style=minPointerStyle></span> <span class=\\\"rz-pointer rz-pointer-max\\\" ng-style=maxPointerStyle></span> <span class=\\\"rz-bubble rz-limit rz-floor\\\"></span> <span class=\\\"rz-bubble rz-limit rz-ceil\\\"></span> <span class=rz-bubble></span> <span class=rz-bubble></span> <span class=rz-bubble></span><ul ng-show=showTicks class=rz-ticks><li ng-repeat=\\\"t in ticks track by $index\\\" class=rz-tick ng-class=\\\"{'rz-selected': t.selected}\\\" ng-style=t.style ng-attr-uib-tooltip=\\\"{{ t.tooltip }}\\\" ng-attr-tooltip-placement={{t.tooltipPlacement}} ng-attr-tooltip-append-to-body=\\\"{{ t.tooltip ? true : undefined}}\\\"><span ng-if=\\\"t.value != null\\\" class=rz-tick-value ng-attr-uib-tooltip=\\\"{{ t.valueTooltip }}\\\" ng-attr-tooltip-placement={{t.valueTooltipPlacement}}>{{ t.value }}</span> <span ng-if=\\\"t.legend != null\\\" class=rz-tick-legend>{{ t.legend }}</span></li></ul></div>\"\r\n  );\r\n\r\n}]);\r\n\r\n  return module.name\r\n}));","/**\n * dirPagination - AngularJS module for paginating (almost) anything.\n *\n *\n * Credits\n * =======\n *\n * Daniel Tabuenca: https://groups.google.com/d/msg/angular/an9QpzqIYiM/r8v-3W1X5vcJ\n * for the idea on how to dynamically invoke the ng-repeat directive.\n *\n * I borrowed a couple of lines and a few attribute names from the AngularUI Bootstrap project:\n * https://github.com/angular-ui/bootstrap/blob/master/src/pagination/pagination.js\n *\n * Copyright 2014 Michael Bromley <michael@michaelbromley.co.uk>\n */\n\n(function() {\n\n    /**\n     * Config\n     */\n    var moduleName = 'angularUtils.directives.dirPagination';\n    var DEFAULT_ID = '__default';\n\n    /**\n     * Module\n     */\n    angular.module(moduleName, [])\n        .directive('dirPaginate', ['$compile', '$parse', 'paginationService', dirPaginateDirective])\n        .directive('dirPaginateNoCompile', noCompileDirective)\n        .directive('dirPaginationControls', ['paginationService', 'paginationTemplate', dirPaginationControlsDirective])\n        .filter('itemsPerPage', ['paginationService', itemsPerPageFilter])\n        .service('paginationService', paginationService)\n        .provider('paginationTemplate', paginationTemplateProvider)\n        .run(['$templateCache',dirPaginationControlsTemplateInstaller]);\n\n    function dirPaginateDirective($compile, $parse, paginationService) {\n\n        return  {\n            terminal: true,\n            multiElement: true,\n            priority: 100,\n            compile: dirPaginationCompileFn\n        };\n\n        function dirPaginationCompileFn(tElement, tAttrs){\n\n            var expression = tAttrs.dirPaginate;\n            // regex taken directly from https://github.com/angular/angular.js/blob/v1.4.x/src/ng/directive/ngRepeat.js#L339\n            var match = expression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n            var filterPattern = /\\|\\s*itemsPerPage\\s*:\\s*(.*\\(\\s*\\w*\\)|([^\\)]*?(?=\\s+as\\s+))|[^\\)]*)/;\n            if (match[2].match(filterPattern) === null) {\n                throw 'pagination directive: the \\'itemsPerPage\\' filter must be set.';\n            }\n            var itemsPerPageFilterRemoved = match[2].replace(filterPattern, '');\n            var collectionGetter = $parse(itemsPerPageFilterRemoved);\n\n            addNoCompileAttributes(tElement);\n\n            // If any value is specified for paginationId, we register the un-evaluated expression at this stage for the benefit of any\n            // dir-pagination-controls directives that may be looking for this ID.\n            var rawId = tAttrs.paginationId || DEFAULT_ID;\n            paginationService.registerInstance(rawId);\n\n            return function dirPaginationLinkFn(scope, element, attrs){\n\n                // Now that we have access to the `scope` we can interpolate any expression given in the paginationId attribute and\n                // potentially register a new ID if it evaluates to a different value than the rawId.\n                var paginationId = $parse(attrs.paginationId)(scope) || attrs.paginationId || DEFAULT_ID;\n                // In case rawId != paginationId we deregister using rawId for the sake of general cleanliness\n                // before registering using paginationId\n                paginationService.deregisterInstance(rawId);\n                paginationService.registerInstance(paginationId);\n\n                var repeatExpression = getRepeatExpression(expression, paginationId);\n                addNgRepeatToElement(element, attrs, repeatExpression);\n\n                removeTemporaryAttributes(element);\n                var compiled =  $compile(element);\n\n                var currentPageGetter = makeCurrentPageGetterFn(scope, attrs, paginationId);\n                paginationService.setCurrentPageParser(paginationId, currentPageGetter, scope);\n\n                if (typeof attrs.totalItems !== 'undefined') {\n                    paginationService.setAsyncModeTrue(paginationId);\n                    scope.$watch(function() {\n                        return $parse(attrs.totalItems)(scope);\n                    }, function (result) {\n                        if (0 <= result) {\n                            paginationService.setCollectionLength(paginationId, result);\n                        }\n                    });\n                } else {\n                    paginationService.setAsyncModeFalse(paginationId);\n                    scope.$watchCollection(function() {\n                        return collectionGetter(scope);\n                    }, function(collection) {\n                        if (collection) {\n                            var collectionLength = (collection instanceof Array) ? collection.length : Object.keys(collection).length;\n                            paginationService.setCollectionLength(paginationId, collectionLength);\n                        }\n                    });\n                }\n\n                // Delegate to the link function returned by the new compilation of the ng-repeat\n                compiled(scope);\n                    \n                // When the scope is destroyed, we make sure to remove the reference to it in paginationService\n                // so that it can be properly garbage collected\n                scope.$on('$destroy', function destroyDirPagination() {\n                    paginationService.deregisterInstance(paginationId);\n                });\n            };\n        }\n\n        /**\n         * If a pagination id has been specified, we need to check that it is present as the second argument passed to\n         * the itemsPerPage filter. If it is not there, we add it and return the modified expression.\n         *\n         * @param expression\n         * @param paginationId\n         * @returns {*}\n         */\n        function getRepeatExpression(expression, paginationId) {\n            var repeatExpression,\n                idDefinedInFilter = !!expression.match(/(\\|\\s*itemsPerPage\\s*:[^|]*:[^|]*)/);\n\n            if (paginationId !== DEFAULT_ID && !idDefinedInFilter) {\n                repeatExpression = expression.replace(/(\\|\\s*itemsPerPage\\s*:\\s*[^|\\s]*)/, \"$1 : '\" + paginationId + \"'\");\n            } else {\n                repeatExpression = expression;\n            }\n\n            return repeatExpression;\n        }\n\n        /**\n         * Adds the ng-repeat directive to the element. In the case of multi-element (-start, -end) it adds the\n         * appropriate multi-element ng-repeat to the first and last element in the range.\n         * @param element\n         * @param attrs\n         * @param repeatExpression\n         */\n        function addNgRepeatToElement(element, attrs, repeatExpression) {\n            if (element[0].hasAttribute('dir-paginate-start') || element[0].hasAttribute('data-dir-paginate-start')) {\n                // using multiElement mode (dir-paginate-start, dir-paginate-end)\n                attrs.$set('ngRepeatStart', repeatExpression);\n                element.eq(element.length - 1).attr('ng-repeat-end', true);\n            } else {\n                attrs.$set('ngRepeat', repeatExpression);\n            }\n        }\n\n        /**\n         * Adds the dir-paginate-no-compile directive to each element in the tElement range.\n         * @param tElement\n         */\n        function addNoCompileAttributes(tElement) {\n            angular.forEach(tElement, function(el) {\n                if (el.nodeType === 1) {\n                    angular.element(el).attr('dir-paginate-no-compile', true);\n                }\n            });\n        }\n\n        /**\n         * Removes the variations on dir-paginate (data-, -start, -end) and the dir-paginate-no-compile directives.\n         * @param element\n         */\n        function removeTemporaryAttributes(element) {\n            angular.forEach(element, function(el) {\n                if (el.nodeType === 1) {\n                    angular.element(el).removeAttr('dir-paginate-no-compile');\n                }\n            });\n            element.eq(0).removeAttr('dir-paginate-start').removeAttr('dir-paginate').removeAttr('data-dir-paginate-start').removeAttr('data-dir-paginate');\n            element.eq(element.length - 1).removeAttr('dir-paginate-end').removeAttr('data-dir-paginate-end');\n        }\n\n        /**\n         * Creates a getter function for the current-page attribute, using the expression provided or a default value if\n         * no current-page expression was specified.\n         *\n         * @param scope\n         * @param attrs\n         * @param paginationId\n         * @returns {*}\n         */\n        function makeCurrentPageGetterFn(scope, attrs, paginationId) {\n            var currentPageGetter;\n            if (attrs.currentPage) {\n                currentPageGetter = $parse(attrs.currentPage);\n            } else {\n                // If the current-page attribute was not set, we'll make our own.\n                // Replace any non-alphanumeric characters which might confuse\n                // the $parse service and give unexpected results.\n                // See https://github.com/michaelbromley/angularUtils/issues/233\n                var defaultCurrentPage = (paginationId + '__currentPage').replace(/\\W/g, '_');\n                scope[defaultCurrentPage] = 1;\n                currentPageGetter = $parse(defaultCurrentPage);\n            }\n            return currentPageGetter;\n        }\n    }\n\n    /**\n     * This is a helper directive that allows correct compilation when in multi-element mode (ie dir-paginate-start, dir-paginate-end).\n     * It is dynamically added to all elements in the dir-paginate compile function, and it prevents further compilation of\n     * any inner directives. It is then removed in the link function, and all inner directives are then manually compiled.\n     */\n    function noCompileDirective() {\n        return {\n            priority: 5000,\n            terminal: true\n        };\n    }\n\n    function dirPaginationControlsTemplateInstaller($templateCache) {\n        $templateCache.put('angularUtils.directives.dirPagination.template', '<ul class=\"pagination\" ng-if=\"1 < pages.length || !autoHide\"><li ng-if=\"boundaryLinks\" ng-class=\"{ disabled : pagination.current == 1 }\"><a href=\"\" ng-click=\"setCurrent(1)\">&laquo;</a></li><li ng-if=\"directionLinks\" ng-class=\"{ disabled : pagination.current == 1 }\"><a href=\"\" ng-click=\"setCurrent(pagination.current - 1)\">&lsaquo;</a></li><li ng-repeat=\"pageNumber in pages track by tracker(pageNumber, $index)\" ng-class=\"{ active : pagination.current == pageNumber, disabled : pageNumber == \\'...\\' || ( ! autoHide && pages.length === 1 ) }\"><a href=\"\" ng-click=\"setCurrent(pageNumber)\">{{ pageNumber }}</a></li><li ng-if=\"directionLinks\" ng-class=\"{ disabled : pagination.current == pagination.last }\"><a href=\"\" ng-click=\"setCurrent(pagination.current + 1)\">&rsaquo;</a></li><li ng-if=\"boundaryLinks\"  ng-class=\"{ disabled : pagination.current == pagination.last }\"><a href=\"\" ng-click=\"setCurrent(pagination.last)\">&raquo;</a></li></ul>');\n    }\n\n    function dirPaginationControlsDirective(paginationService, paginationTemplate) {\n\n        var numberRegex = /^\\d+$/;\n\n        var DDO = {\n            restrict: 'AE',\n            scope: {\n                maxSize: '=?',\n                onPageChange: '&?',\n                paginationId: '=?',\n                autoHide: '=?'\n            },\n            link: dirPaginationControlsLinkFn\n        };\n\n        // We need to check the paginationTemplate service to see whether a template path or\n        // string has been specified, and add the `template` or `templateUrl` property to\n        // the DDO as appropriate. The order of priority to decide which template to use is\n        // (highest priority first):\n        // 1. paginationTemplate.getString()\n        // 2. attrs.templateUrl\n        // 3. paginationTemplate.getPath()\n        var templateString = paginationTemplate.getString();\n        if (templateString !== undefined) {\n            DDO.template = templateString;\n        } else {\n            DDO.templateUrl = function(elem, attrs) {\n                return attrs.templateUrl || paginationTemplate.getPath();\n            };\n        }\n        return DDO;\n\n        function dirPaginationControlsLinkFn(scope, element, attrs) {\n\n            // rawId is the un-interpolated value of the pagination-id attribute. This is only important when the corresponding dir-paginate directive has\n            // not yet been linked (e.g. if it is inside an ng-if block), and in that case it prevents this controls directive from assuming that there is\n            // no corresponding dir-paginate directive and wrongly throwing an exception.\n            var rawId = attrs.paginationId ||  DEFAULT_ID;\n            var paginationId = scope.paginationId || attrs.paginationId ||  DEFAULT_ID;\n\n            if (!paginationService.isRegistered(paginationId) && !paginationService.isRegistered(rawId)) {\n                var idMessage = (paginationId !== DEFAULT_ID) ? ' (id: ' + paginationId + ') ' : ' ';\n                if (window.console) {\n                    console.warn('Pagination directive: the pagination controls' + idMessage + 'cannot be used without the corresponding pagination directive, which was not found at link time.');\n                }\n            }\n\n            if (!scope.maxSize) { scope.maxSize = 9; }\n            scope.autoHide = scope.autoHide === undefined ? true : scope.autoHide;\n            scope.directionLinks = angular.isDefined(attrs.directionLinks) ? scope.$parent.$eval(attrs.directionLinks) : true;\n            scope.boundaryLinks = angular.isDefined(attrs.boundaryLinks) ? scope.$parent.$eval(attrs.boundaryLinks) : false;\n\n            var paginationRange = Math.max(scope.maxSize, 5);\n            scope.pages = [];\n            scope.pagination = {\n                last: 1,\n                current: 1\n            };\n            scope.range = {\n                lower: 1,\n                upper: 1,\n                total: 1\n            };\n\n            scope.$watch('maxSize', function(val) {\n                if (val) {\n                    paginationRange = Math.max(scope.maxSize, 5);\n                    generatePagination();\n                }\n            });\n\n            scope.$watch(function() {\n                if (paginationService.isRegistered(paginationId)) {\n                    return (paginationService.getCollectionLength(paginationId) + 1) * paginationService.getItemsPerPage(paginationId);\n                }\n            }, function(length) {\n                if (0 < length) {\n                    generatePagination();\n                }\n            });\n\n            scope.$watch(function() {\n                if (paginationService.isRegistered(paginationId)) {\n                    return (paginationService.getItemsPerPage(paginationId));\n                }\n            }, function(current, previous) {\n                if (current != previous && typeof previous !== 'undefined') {\n                    goToPage(scope.pagination.current);\n                }\n            });\n\n            scope.$watch(function() {\n                if (paginationService.isRegistered(paginationId)) {\n                    return paginationService.getCurrentPage(paginationId);\n                }\n            }, function(currentPage, previousPage) {\n                if (currentPage != previousPage) {\n                    goToPage(currentPage);\n                }\n            });\n\n            scope.setCurrent = function(num) {\n                if (paginationService.isRegistered(paginationId) && isValidPageNumber(num)) {\n                    num = parseInt(num, 10);\n                    paginationService.setCurrentPage(paginationId, num);\n                }\n            };\n\n            /**\n             * Custom \"track by\" function which allows for duplicate \"...\" entries on long lists,\n             * yet fixes the problem of wrongly-highlighted links which happens when using\n             * \"track by $index\" - see https://github.com/michaelbromley/angularUtils/issues/153\n             * @param id\n             * @param index\n             * @returns {string}\n             */\n            scope.tracker = function(id, index) {\n                return id + '_' + index;\n            };\n\n            function goToPage(num) {\n                if (paginationService.isRegistered(paginationId) && isValidPageNumber(num)) {\n                    var oldPageNumber = scope.pagination.current;\n\n                    scope.pages = generatePagesArray(num, paginationService.getCollectionLength(paginationId), paginationService.getItemsPerPage(paginationId), paginationRange);\n                    scope.pagination.current = num;\n                    updateRangeValues();\n\n                    // if a callback has been set, then call it with the page number as the first argument\n                    // and the previous page number as a second argument\n                    if (scope.onPageChange) {\n                        scope.onPageChange({\n                            newPageNumber : num,\n                            oldPageNumber : oldPageNumber\n                        });\n                    }\n                }\n            }\n\n            function generatePagination() {\n                if (paginationService.isRegistered(paginationId)) {\n                    var page = parseInt(paginationService.getCurrentPage(paginationId)) || 1;\n                    scope.pages = generatePagesArray(page, paginationService.getCollectionLength(paginationId), paginationService.getItemsPerPage(paginationId), paginationRange);\n                    scope.pagination.current = page;\n                    scope.pagination.last = scope.pages[scope.pages.length - 1];\n                    if (scope.pagination.last < scope.pagination.current) {\n                        scope.setCurrent(scope.pagination.last);\n                    } else {\n                        updateRangeValues();\n                    }\n                }\n            }\n\n            /**\n             * This function updates the values (lower, upper, total) of the `scope.range` object, which can be used in the pagination\n             * template to display the current page range, e.g. \"showing 21 - 40 of 144 results\";\n             */\n            function updateRangeValues() {\n                if (paginationService.isRegistered(paginationId)) {\n                    var currentPage = paginationService.getCurrentPage(paginationId),\n                        itemsPerPage = paginationService.getItemsPerPage(paginationId),\n                        totalItems = paginationService.getCollectionLength(paginationId);\n\n                    scope.range.lower = (currentPage - 1) * itemsPerPage + 1;\n                    scope.range.upper = Math.min(currentPage * itemsPerPage, totalItems);\n                    scope.range.total = totalItems;\n                }\n            }\n            function isValidPageNumber(num) {\n                return (numberRegex.test(num) && (0 < num && num <= scope.pagination.last));\n            }\n        }\n\n        /**\n         * Generate an array of page numbers (or the '...' string) which is used in an ng-repeat to generate the\n         * links used in pagination\n         *\n         * @param currentPage\n         * @param rowsPerPage\n         * @param paginationRange\n         * @param collectionLength\n         * @returns {Array}\n         */\n        function generatePagesArray(currentPage, collectionLength, rowsPerPage, paginationRange) {\n            var pages = [];\n            var totalPages = Math.ceil(collectionLength / rowsPerPage);\n            var halfWay = Math.ceil(paginationRange / 2);\n            var position;\n\n            if (currentPage <= halfWay) {\n                position = 'start';\n            } else if (totalPages - halfWay < currentPage) {\n                position = 'end';\n            } else {\n                position = 'middle';\n            }\n\n            var ellipsesNeeded = paginationRange < totalPages;\n            var i = 1;\n            while (i <= totalPages && i <= paginationRange) {\n                var pageNumber = calculatePageNumber(i, currentPage, paginationRange, totalPages);\n\n                var openingEllipsesNeeded = (i === 2 && (position === 'middle' || position === 'end'));\n                var closingEllipsesNeeded = (i === paginationRange - 1 && (position === 'middle' || position === 'start'));\n                if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\n                    pages.push('...');\n                } else {\n                    pages.push(pageNumber);\n                }\n                i ++;\n            }\n            return pages;\n        }\n\n        /**\n         * Given the position in the sequence of pagination links [i], figure out what page number corresponds to that position.\n         *\n         * @param i\n         * @param currentPage\n         * @param paginationRange\n         * @param totalPages\n         * @returns {*}\n         */\n        function calculatePageNumber(i, currentPage, paginationRange, totalPages) {\n            var halfWay = Math.ceil(paginationRange/2);\n            if (i === paginationRange) {\n                return totalPages;\n            } else if (i === 1) {\n                return i;\n            } else if (paginationRange < totalPages) {\n                if (totalPages - halfWay < currentPage) {\n                    return totalPages - paginationRange + i;\n                } else if (halfWay < currentPage) {\n                    return currentPage - halfWay + i;\n                } else {\n                    return i;\n                }\n            } else {\n                return i;\n            }\n        }\n    }\n\n    /**\n     * This filter slices the collection into pages based on the current page number and number of items per page.\n     * @param paginationService\n     * @returns {Function}\n     */\n    function itemsPerPageFilter(paginationService) {\n\n        return function(collection, itemsPerPage, paginationId) {\n            if (typeof (paginationId) === 'undefined') {\n                paginationId = DEFAULT_ID;\n            }\n            if (!paginationService.isRegistered(paginationId)) {\n                throw 'pagination directive: the itemsPerPage id argument (id: ' + paginationId + ') does not match a registered pagination-id.';\n            }\n            var end;\n            var start;\n            if (angular.isObject(collection)) {\n                itemsPerPage = parseInt(itemsPerPage) || 9999999999;\n                if (paginationService.isAsyncMode(paginationId)) {\n                    start = 0;\n                } else {\n                    start = (paginationService.getCurrentPage(paginationId) - 1) * itemsPerPage;\n                }\n                end = start + itemsPerPage;\n                paginationService.setItemsPerPage(paginationId, itemsPerPage);\n\n                if (collection instanceof Array) {\n                    // the array just needs to be sliced\n                    return collection.slice(start, end);\n                } else {\n                    // in the case of an object, we need to get an array of keys, slice that, then map back to\n                    // the original object.\n                    var slicedObject = {};\n                    angular.forEach(keys(collection).slice(start, end), function(key) {\n                        slicedObject[key] = collection[key];\n                    });\n                    return slicedObject;\n                }\n            } else {\n                return collection;\n            }\n        };\n    }\n\n    /**\n     * Shim for the Object.keys() method which does not exist in IE < 9\n     * @param obj\n     * @returns {Array}\n     */\n    function keys(obj) {\n        if (!Object.keys) {\n            var objKeys = [];\n            for (var i in obj) {\n                if (obj.hasOwnProperty(i)) {\n                    objKeys.push(i);\n                }\n            }\n            return objKeys;\n        } else {\n            return Object.keys(obj);\n        }\n    }\n\n    /**\n     * This service allows the various parts of the module to communicate and stay in sync.\n     */\n    function paginationService() {\n\n        var instances = {};\n        var lastRegisteredInstance;\n\n        this.registerInstance = function(instanceId) {\n            if (typeof instances[instanceId] === 'undefined') {\n                instances[instanceId] = {\n                    asyncMode: false\n                };\n                lastRegisteredInstance = instanceId;\n            }\n        };\n\n        this.deregisterInstance = function(instanceId) {\n            delete instances[instanceId];\n        };\n        \n        this.isRegistered = function(instanceId) {\n            return (typeof instances[instanceId] !== 'undefined');\n        };\n\n        this.getLastInstanceId = function() {\n            return lastRegisteredInstance;\n        };\n\n        this.setCurrentPageParser = function(instanceId, val, scope) {\n            instances[instanceId].currentPageParser = val;\n            instances[instanceId].context = scope;\n        };\n        this.setCurrentPage = function(instanceId, val) {\n            instances[instanceId].currentPageParser.assign(instances[instanceId].context, val);\n        };\n        this.getCurrentPage = function(instanceId) {\n            var parser = instances[instanceId].currentPageParser;\n            return parser ? parser(instances[instanceId].context) : 1;\n        };\n\n        this.setItemsPerPage = function(instanceId, val) {\n            instances[instanceId].itemsPerPage = val;\n        };\n        this.getItemsPerPage = function(instanceId) {\n            return instances[instanceId].itemsPerPage;\n        };\n\n        this.setCollectionLength = function(instanceId, val) {\n            instances[instanceId].collectionLength = val;\n        };\n        this.getCollectionLength = function(instanceId) {\n            return instances[instanceId].collectionLength;\n        };\n\n        this.setAsyncModeTrue = function(instanceId) {\n            instances[instanceId].asyncMode = true;\n        };\n\n        this.setAsyncModeFalse = function(instanceId) {\n            instances[instanceId].asyncMode = false;\n        };\n\n        this.isAsyncMode = function(instanceId) {\n            return instances[instanceId].asyncMode;\n        };\n    }\n\n    /**\n     * This provider allows global configuration of the template path used by the dir-pagination-controls directive.\n     */\n    function paginationTemplateProvider() {\n\n        var templatePath = 'angularUtils.directives.dirPagination.template';\n        var templateString;\n\n        /**\n         * Set a templateUrl to be used by all instances of <dir-pagination-controls>\n         * @param {String} path\n         */\n        this.setPath = function(path) {\n            templatePath = path;\n        };\n\n        /**\n         * Set a string of HTML to be used as a template by all instances\n         * of <dir-pagination-controls>. If both a path *and* a string have been set,\n         * the string takes precedence.\n         * @param {String} str\n         */\n        this.setString = function(str) {\n            templateString = str;\n        };\n\n        this.$get = function() {\n            return {\n                getPath: function() {\n                    return templatePath;\n                },\n                getString: function() {\n                    return templateString;\n                }\n            };\n        };\n    }\n})();\n","angular.module('alpacaEditor', [\r\n\t'firebase',\t\t\t\t\t//Authentication, DB, Storage\r\n\t'rzModule', \t\t\t\t//**Range Slider \r\n\t'dndLists',\t\t\t\t\t//Drag and drop lists\r\n\t'ngTagsInput',\t\t\t//**Multiple Tag Input\r\n\t'swiperRepeat', \t\t//Swipeable repeat\r\n\t'ngAnimate',\t\t\t\t//Animations\r\n\t'flow',\t\t\t\t\t\t\t//File upload\r\n\t'angularResizable',\t//Make elements user-resizable\r\n  'angularUtils.directives.dirPagination', //pagination \r\n\t'alpacaViewer', \r\n\t'alpacaSchemas', \r\n\t'alpacaTypes'\r\n]);\r\n\r\nangular.module('alpacaEditor').filter('toArray', function () {\r\n  return function (obj, addKey) {\r\n    if (!angular.isObject(obj)) return obj;\r\n    if ( addKey === false ) {\r\n      return Object.keys(obj).map(function(key) {\r\n        return obj[key];\r\n      });\r\n    } else {\r\n      return Object.keys(obj).map(function (key) {\r\n        var value = obj[key];\r\n        return angular.isObject(value) ?\r\n          Object.defineProperty(value, '$key', { enumerable: false, value: key}) :\r\n          { $key: key, $value: value };\r\n      });\r\n    }\r\n  };\r\n});","angular.module('alpacaEditor').directive('alpacaField', [\r\n\t'$compile', \r\n\t'$templateRequest', \r\n\tfunction($compile, $templateRequest) {\r\n\r\n\t\tvar link = function ($scope, element, attrs) {\r\n\t\t\t//console.log($scope.type)\r\n\t\t\t$templateRequest('alpaca-type-' + $scope.type).then(function(tpl){\r\n\t\t\t\tvar template = angular.element(tpl);\r\n\t\t\t\telement.after(template);\r\n\t\t\t\t$compile(template)($scope);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\trestrict: 'E',\r\n\t\t\tlink: link,\r\n\t\t\tscope: {\r\n\t\t\t\tmodel: '=',\r\n\t\t\t\ttype: '=',\r\n\t\t\t\tfield: '=',\r\n\t\t\t\tfn: '=',\r\n\t\t\t\tslide: '=',\r\n\t\t\t\ttemplates: '='\r\n\t\t\t}\r\n\t\t};\r\n}]);","angular.module('alpacaEditor')\r\n\t.controller('collectionsController', ['$scope', function($scope) {\r\n\r\n\t\t$scope.searchValue ='';\r\n\r\n\t\t$scope.surveys = [\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Inflammatory Bowel Disease Survey', author: 'Haemin Park', summary: \"This survey is dumb\", img_url: 'http://www.ichom.org/wp-content/uploads/2016/05/ibd-420x315.jpg', date: \"01-20-2017\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Pregnancy and Childbirth Survey', author: 'No one', summary: \"This survey is dumb\", img_url: 'http://www.ichom.org/wp-content/uploads/2015/03/pcb-420x315.jpg', date: \"02-20-2017\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Overactive Bladder Survey', author: 'Poo', summary: \"This survey is dumb\", img_url: 'http://www.ichom.org/wp-content/uploads/2015/03/oab-1-420x315.jpg', date: \"01-23-2017\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Survey 4', author: 'Poo', summary: \"This survey is dumb\", img_url: 'http://www.ichom.org/wp-content/uploads/2015/03/crc-420x315.jpg', date: \"01-01-2017\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Survey 5', author: 'Poo', summary: \"This survey is dumb\", img_url: 'http://www.ichom.org/wp-content/uploads/2015/03/bc-420x315.jpg', date: \"01-20-2017\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Survey 6', author: 'Poo', summary: \"This survey is dumb\", img_url: 'http://www.ichom.org/wp-content/uploads/2015/03/hf-420x315.jpg', date: \"01-20-2017\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Survey 7', author: 'Poo', summary: \"This survey is dumb\", img_url: 'http://www.ichom.org/wp-content/uploads/2015/03/condi_dementia-420x315.jpg', date: \"01-20-2017\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Survey 8', author: 'Poo', summary: \"This survey is dumb\", img_url: 'http://www.ichom.org/wp-content/uploads/2015/03/bp_level_of_pain_01_455x620-420x315.jpg', date: \"01-20-2017\"\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\t// $scope.add3Dots = function(string, limit) {\r\n\r\n\t\t// \tvar dots = \"...\";\r\n\t\t// \t\tif(string.length > limit) {\r\n\t\t\r\n\t\t// \t\tstring = string.substring(0,limit) + dots;\r\n\t\t// \t\t}\r\n\r\n\t\t// \t\treturn string;\r\n\t\t// \t}\t\r\n\r\n\t\t// };\r\n\t}]);","angular.module('alpacaEditor').controller('demoController', [\r\n\t'$scope',\r\n\t'$templateList',\r\n\t'$schemas',\r\n\t'$timeout',\r\n\t'$firebaseObject',\r\n\t'$window',\r\n\tfunction($scope, $templateList, $schemas, $timeout, $firebaseObject, $window){\r\n\r\n\tvar config = firebase.database().ref().child('config');\r\n\t$firebaseObject(config).$bindTo($scope, 'config');\r\n\r\n\t$scope.defaultTags = function(){\r\n\t\tvar tags = ['blah', 'ahah'];\r\n\t\treturn tags;\r\n\t};\r\n\r\n\t$scope.templates = $templateList.templates;\r\n\tconsole.log($templateList);\r\n\r\n\r\n\t$scope.tabs = [\r\n\t\t{\r\n\t\t\tname: 'collections',\r\n\t\t\ticon: 'view_module'\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'edit',\r\n\t\t\ticon: 'mode_edit'\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'metadata',\r\n\t\t\ticon: 'timeline'\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'settings',\r\n\t\t\ticon: 'settings'\r\n\t\t}\r\n\t];\r\n\r\n\t$scope.tab = $scope.tabs[0];\r\n\t\r\n\t$scope.setTab = function(tab){\r\n\t\t$scope.tab = null;\r\n\t\t$timeout(function(){\r\n\t\t\t$scope.tab = tab;\r\n\t\t}, 200)\r\n\t\t\r\n\t}\r\n\r\n\t$scope.survey = {\r\n\r\n\t\tslides: [\r\n\t\t\t{\r\n\t\t\t\tkind:'slide', title: 'Nested Slide 1', content: 'How certain are you that your situation will improve?', template: 'green',\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Uncertain',\r\n\t\t\t\t\t\tweight: 1,\r\n\t\t\t\t\t\tsuggestions: [\r\n\t\t\t\t\t\t\t'Eat more broccoli',\r\n\t\t\t\t\t\t\t'Work out every day'\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Somewhat uncertain',\r\n\t\t\t\t\t\tweight: 2\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Unsure',\r\n\t\t\t\t\t\tweight: 3\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Somewhat certain',\r\n\t\t\t\t\t\tweight: 4\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Certain',\r\n\t\t\t\t\t\tweight: 5\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkind:'slide', title: 'Nested Slide 2', content: 'How certain are you that you will achieve your goals you set?', template: 'orange',\r\n\t\t\t\toptions: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Uncertain',\r\n\t\t\t\t\t\tweight: 1\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Somewhat uncertain',\r\n\t\t\t\t\t\tweight: 2\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Unsure',\r\n\t\t\t\t\t\tweight: 3\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Somewhat certain',\r\n\t\t\t\t\t\tweight: 4\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: 'Certain',\r\n\t\t\t\t\t\tweight: 5\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t],\r\n\r\n\r\n\r\n\t\tnodes: [\r\n\t\t\t{\r\n\t\t\t\tkind: 'external', title: 'Onboarding', contents: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind:'slide', title: 'Welcome', content: 'Foo', template: 'green', readonly: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind:'slide', title: 'Instructions', content: 'Fluf', template: 'orange', readonly: true\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkind:'slide', title: 'Slide 1', content: 'Foo', template: 'green', options: [\r\n\t\t\t\t\t{text: 'Yes', correct: true},\r\n\t\t\t\t\t{text: 'No', correct: false}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkind:'slide', title: 'Slide 2', content: 'Fluf', template: 'orange'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tkind: 'folder', title: 'Smoking', contents: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind:'slide', title: 'Nested Slide 1', content: 'Foo', template: 'green'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkind:'slide', title: 'Nested Slide 2', content: 'Fluf', template: 'orange'\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\r\n\r\n\t};\r\n\t$scope.selected = $scope.survey.nodes[1];\r\n\t$scope.schemas = $schemas.schemas;\r\n\r\n\t$scope.maximized = false;\r\n\r\n\t$scope.maximizePreview = function(maximized){\r\n\t\t/*$('.resizable-section.white').animate({\r\n\t\t\tflex: '0 0 0px'\r\n\t\t}, 1000, function(){\r\n\t\t\tmaximized = !maximized;\r\n\t\t})*/\r\n\t\t$('.resizable-wrapper').toggleClass('minimized');\r\n\t\t$scope.maximized = !$scope.maximized;\r\n\t}\r\n\r\n  $scope.devices = {\r\n    iphone: {\r\n      name: 'iPhone',\r\n      width: 480,\r\n      height: 720,\r\n      material_icon: 'smartphone'\r\n    },\r\n    desktop: {\r\n      name: 'Desktop',\r\n      width: 1920,\r\n      height: 1080,\r\n      material_icon: 'desktop_windows'\r\n    },\r\n    tablet: {\r\n      name: 'iPad',\r\n      width: 1024,\r\n      height: 768,\r\n      material_icon: 'tablet'\r\n    }\r\n  };\r\n\r\n  $scope.setDevice = function(device) {\r\n    $scope.device = device;\r\n    console.log('set device:', device);\r\n  }\r\n\r\n  $scope.setSlide = function(slide){\r\n  \t$scope.selected = slide;\r\n  \tconsole.log(slide);\r\n  }\r\n\r\n  $scope.loading = false;\r\n\r\n  $scope.search = function(){\r\n  \t$scope.searching = true;\r\n  \t\r\n  \t$timeout(function(){$('#search').focus()});\r\n  }\r\n\r\n  $scope.$on('device-ready', function(){\r\n  \t$scope.setDevice($scope.devices.tablet);\r\n  \t$scope.loading = false;\r\n  \t\r\n  });\r\n\r\n  $scope.fn = {\r\n  \ttags: {\r\n\t  \tsearch: function(query){\r\n\t  \t\tconsole.log('query', query);\r\n\t  \t\tvar ret = [];\r\n\t  \t\tangular.forEach($scope.config.tags, function(el){\r\n\t  \t\t\tif (el.text.includes(query))\r\n\t  \t\t\t\tret.push(el.text);\r\n\t  \t\t})\r\n\t  \t\treturn ret;\r\n\t  \t}\r\n\t\t}\r\n  };\r\n\r\n  // $scope.temps = [];\r\n\r\n\t\t// $scope.addTemp = function() {\r\n\t\t// \t$scope.temps.push({'title': $scope.newTemp, 'done':false})\r\n\t\t// \t$scope.newTemp = ''\r\n\t\t// }\r\n\r\n\t\t// $scope.deleteTemp = function(index) {\t\r\n\t\t// \t$scope.temps.splice(index, 1);\r\n\t\t// }\r\n  \r\n}]);","/*  Todo:\r\n *  *remove jquery dep\r\n *  *combine directives\r\n *  *on window resize\r\n *  *support iframe templates\r\n *  *clean up\r\n *  *publish to github\r\n *  *publish to npm\r\n */\r\n\r\nangular.module('alpacaEditor').directive('devicePreview', function() {\r\n\r\n  var link = function($scope, el, attrs) {\r\n\r\n    var parent = angular.element(el).parent();\r\n    var child = angular.element(el);\r\n\r\n    child.css({\r\n      'background': 'white',\r\n    })\r\n      \r\n    parent.css({\r\n      'display': 'flex',\r\n      'align-items': 'center',\r\n      'justify-content': 'center',\r\n    });\r\n\r\n/*function(){\r\n\r\n      return {\r\n        frame_size: $scope.$parent.frame_size\r\n        device: $scope.device\r\n      }\r\n\r\n    },*/\r\n\r\n    $scope.$watch('device',\r\n     function() {\r\n\r\n      var device = $scope.device;\r\n\r\n      if (!angular.element(el).parent()[0])\r\n        return false;\r\n\r\n      parent.width = $scope.$parent.frame_size.width;\r\n      parent.height = $scope.$parent.frame_size.height;\r\n\r\n      console.log($scope.device);\r\n      \r\n      /*$scope.$watch(\r\n        function(){\r\n          return {\r\n            width: parent.width,\r\n            height: parent.height\r\n          }\r\n        },\r\n        function(){\r\n          $scope.$apply();\r\n        }\r\n      )*/\r\n\r\n      var fit = (parent.width / parent.height > device.width / device.height);\r\n      var scale = fit ? parent.height / device.height : parent.width / device.width;\r\n      var width = fit ? device.width * parent.height / device.height : parent.width;\r\n      var height = fit ? parent.height : device.height * parent.width / device.width;\r\n      \r\n\r\n\r\n      child.css({\r\n        'transform': 'scale(' + scale +')',\r\n        //'zoom': scale,\r\n        'width': width / scale + 'px',\r\n        'height': height / scale + 'px',\r\n      });\r\n\r\n\r\n      var use = {\r\n        x: Math.max(device.width, width),\r\n        y: Math.max(device.height, height)\r\n      }\r\n      var translate = {\r\n        x: -1 * ((use.x - parent.width) / 2),\r\n        y: -1 * ((use.y - parent.height) / 2)\r\n      };\r\n\r\n      $scope.$parent.iframe.css({\r\n        'width': use.x,\r\n        'height': use.y,\r\n        'transform': 'translate(' + translate.x + 'px,' + translate.y + 'px)'\r\n      })\r\n\r\n      console.log('device', device.width, device.height);\r\n      console.log('parent', parent.width, parent.height);\r\n      console.log('scale', scale);\r\n      console.log('new', width, height);\r\n    });\r\n  };\r\n\r\n  return {\r\n    restrict: 'E',\r\n    link: link,\r\n    scope: {\r\n      'device': '='\r\n    }\r\n  }\r\n});\r\n\r\n//http://plnkr.co/edit/KRfAyc5haHyFq7FyCnxg?p=preview\r\nangular.module('alpacaEditor').directive(\"wrapInFrame\", [\r\n  '$compile',\r\n  '$timeout',\r\n  function($compile, $timeout) {\r\n  return {\r\n    restrict: \"E\",\r\n    scope: {},\r\n    transclude: true,\r\n    replace: false,\r\n    link: function($scope, $directiveElement, $attrs, $controller, $transclude) {\r\n      \r\n\r\n      /*$scope.$watch(\r\n          function () { \r\n              return {\r\n                 width: $directiveElement.parent().width(),\r\n                 height: $directiveElement.parent().height(),\r\n              }\r\n         },\r\n         function (data) {\r\n          $scope.$parent.frame_size = data;\r\n          //alert('size changed!');\r\n         }, //listener \r\n         true //deep watch\r\n      );*/\r\n      \r\n      $scope.$parent.frame_size = {\r\n        width: $directiveElement.parent().width(),\r\n        height: $directiveElement.parent().height()\r\n      }\r\n      \r\n      $transclude($scope.$parent, function($children, otherScope) {\r\n\r\n        $directiveElement.html(\"<iframe width='100%' height='100%'>\");\r\n        var iframe = $directiveElement.find(\"iframe\")[0];\r\n\r\n        $scope.$parent.iframe = angular.element(iframe);\r\n\r\n        iframe.onload = function() {\r\n\r\n          $scope.$parent.linked = true;\r\n          \r\n          var iframeBody = angular.element(iframe.contentWindow.document.body);\r\n\r\n          $(\"link[rel='stylesheet'], link[type='text/css'], link[href$='.css']\").clone().appendTo($(\"iframe\").contents().find(\"head\"));\r\n          $('<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"/>').appendTo($(\"iframe\").contents().find(\"head\"));\r\n\r\n          $compile($children)($scope.$parent, function(elem) {\r\n            iframeBody.append(elem);\r\n            $scope.$parent.$emit('device-ready');\r\n          });\r\n        };\r\n\r\n        iframe.src = '';\r\n      });\r\n    }\r\n  };\r\n}]);"]}
