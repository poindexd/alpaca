{"version":3,"sources":["swiperRepeat.js","viewer.js","alpaca-viewer.js","alpaca-slides.js","alpaca-slide.js","viewer-controller.js"],"names":["angular","window","document","undefined","Api","applyChanges","changes","hasOwnProperty","this","updateCollection","collection","isDragging","item","selected","slidePosition","getSlidePosition","Math","abs","isInTransition","transition","select","refresh","Container","element","translateContainer","dx","duration","css","TRANSITION_PROP","TRANSFORM_PROP","TRANSFORMS_3D","getContainerPosition","style","getComputedStyle","WebKitCSSMatrix","matrix","webkitTransform","m41","split","getContainerWidth","getBoundingClientRect","width","prop","Polyfill","getFirstAvailable","keys","i","length","documentElement","TRANSITIONEND_EVENT","ontransitionend","onwebkittransitionend","Renderer","retranslatorFn","onTransitionEnd","offset","render","resolve","move","translate","callback","translateSlides","index","call","RendererFull","slideFactory","renderedSlides","collectionWasUpdated","slide","indexOf","destroy","splice","i2","position","height","push","getSlidesPosition","RendererPart","updateSlide","slides","left","center","right","State","selectedSetterFn","pendingCollection","ii","arguments","Touch","initialOffset","touchStart","touchDelta","isScrolling","containerWidth","onTouchStart","event","touches","originalEvent","touch","x","pageX","y","pageY","time","timeStamp","Date","onTouchMove","scale","resistance","sqrt","onTouchEnd","isSlide","module","directive","$parse","DEFAULTS","preventDefault","stopPropagation","prerender","retranslator","disableTouch","restrict","transclude","priority","terminal","link","$scope","$element","$attrs","ctrl","$transclude","scope","$new","itemExp","clone","container","append","needsDigest","$destroy","remove","value","setSelectedFn","$digest","fn","args","apply","swiper","touchEventHandler","options","scheduleAsyncAction","actionScheduled","$evalAsync","expression","swiperRepeat","match","selectedExp","swiperRepeatSelected","assign","optionsFn","swiperRepeatOptions","copy","extend","Error","collectionExp","after","on","target","$watchCollection","$watch","templateUrl","$compile","template","$templateRequest","attrs","linked","forEach","schema","field","key","placeholder","then","tpl","single","html","controller","survey","id","title","question","text","image_align","image_url","content"],"mappings":"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","file":"alpaca-viewer.min.js","sourcesContent":["/*! https://github.com/ibtkvi/swiper-repeat */\r\n(function(angular, window, document, undefined) {'use strict';\r\n\r\nvar Api = function() {\r\n\r\n  return {\r\n\r\n    applyChanges: function(changes) {\r\n      if(changes.hasOwnProperty('collection')) {\r\n        this.updateCollection(changes.collection);\r\n      }\r\n\r\n      if(!this.isDragging()) {\r\n        if(changes.hasOwnProperty('selected')) {\r\n          var item = changes.selected,\r\n              slidePosition = this.getSlidePosition(changes.selected);;\r\n\r\n          if(Math.abs(slidePosition) > 0 || (slidePosition === 0 && this.isInTransition())) {\r\n            this.transition(slidePosition, function() {\r\n              this.select(item);\r\n            });\r\n          }\r\n\r\n          else if(slidePosition === null) {\r\n            this.select(item);\r\n          }\r\n\r\n          else if(slidePosition === 0 && changes.hasOwnProperty('collection') && !this.isInTransition()) {\r\n            this.refresh();\r\n          }\r\n        }\r\n        else if(changes.hasOwnProperty('collection') && !this.isInTransition()) {\r\n          this.refresh();\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n};\r\n\r\nvar Container = function(element) {\r\n\r\n  return {\r\n    \r\n    translateContainer: function(dx, duration) {\r\n      element.css(this.TRANSITION_PROP + 'Duration', duration)\r\n             .css(this.TRANSFORM_PROP, this.TRANSFORMS_3D ? 'translate3d(' + dx + ', 0, 0)' : 'translate(' + dx + ', 0)');\r\n    },\r\n\r\n    getContainerPosition: function() {\r\n      var style = window.getComputedStyle(element[0], null);\r\n\r\n      if(window.WebKitCSSMatrix) {\r\n        var matrix = new WebKitCSSMatrix(style.webkitTransform === 'none' ? '' : style.webkitTransform);\r\n        return matrix.m41;\r\n      }\r\n      \r\n      var matrix = style[this.TRANSFORM_PROP].split(',');\r\n      return +(matrix[12] || matrix[4]);\r\n    },\r\n\r\n    getContainerWidth: function() {\r\n      return element[0].getBoundingClientRect().width || element.prop('offsetWidth');\r\n    }\r\n\r\n  }\r\n\r\n};\r\n\r\nvar Polyfill = function() {\r\n\r\n  var TRANSITION_PROP, TRANSITIONEND_EVENT;\r\n\r\n  if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {\r\n    TRANSITION_PROP = 'WebkitTransition';\r\n    TRANSITIONEND_EVENT = 'webkitTransitionEnd transitionend';\r\n  } else {\r\n    TRANSITION_PROP = 'transition';\r\n    TRANSITIONEND_EVENT = 'transitionend';\r\n  }\r\n  \r\n  function getFirstAvailable(keys) {\r\n    for (var i = 0; i < keys.length; i++) {\r\n      if(document.documentElement.style[keys[i]] !== undefined) {\r\n        return keys[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n\r\n    TRANSITION_PROP: TRANSITION_PROP,\r\n    TRANSITIONEND_EVENT: TRANSITIONEND_EVENT,\r\n    TRANSFORM_PROP: getFirstAvailable(['transform', 'webkitTransform', 'MozTransform', 'msTransform', 'OTransform']),\r\n    TRANSFORMS_3D: !!getFirstAvailable(['perspective', 'webkitPerspective', 'MozPerspective',  'MsPerspective', 'OPerspective'])\r\n\r\n  }\r\n\r\n};\r\n\r\nvar Renderer = function(retranslatorFn) {\r\n\r\n  var onTransitionEnd, isInTransition;\r\n\r\n  return {\r\n\r\n    select: function(item, offset) {\r\n      this.render(this.resolve(item));\r\n      this.move(offset || 0);\r\n    },\r\n\r\n    refresh: function(offset) {\r\n      this.render(this.resolve());\r\n      this.move(offset || 0);\r\n    },\r\n\r\n    move: function(offset) {\r\n      this.translate(offset, 0);\r\n    },\r\n\r\n    transition: function(offset, callback) {\r\n      this.translate(offset, 250, callback);\r\n    },\r\n\r\n    isInTransition: function() {\r\n      return isInTransition;\r\n    },\r\n\r\n    translate: function(offset, duration, callback) {\r\n      if(duration > 0) {\r\n        onTransitionEnd = callback;\r\n        isInTransition = true;\r\n      } else {\r\n        onTransitionEnd = null;\r\n        isInTransition = false;\r\n      }\r\n      this.translateSlides(offset, duration);\r\n      retranslatorFn && retranslatorFn(this.index, offset, duration);\r\n    },\r\n\r\n    onTransitionEnd: function() {\r\n      isInTransition = false;\r\n      onTransitionEnd && onTransitionEnd.call(this);\r\n      onTransitionEnd = null;\r\n    }\r\n\r\n  }\r\n\r\n};\r\n\r\nvar RendererFull = function(slideFactory) {\r\n\r\n  var renderedSlides = [];\r\n\r\n  return {\r\n\r\n    render: function(collectionWasUpdated) {\r\n\r\n      if(collectionWasUpdated) {\r\n\r\n        for (var i = renderedSlides.length - 1; i >= 0; i--) {\r\n          var slide = renderedSlides[i];\r\n          if(this.collection.indexOf(slide.item) === -1) {\r\n            slide.destroy();\r\n            renderedSlides.splice(i, 1);\r\n          }\r\n        };\r\n\r\n        for (var i = 0; i < this.collection.length; i++) {\r\n          var slide = null,\r\n              item = this.collection[i];\r\n\r\n          for (var i2 = renderedSlides.length - 1; i2 >= 0; i2--) {\r\n            if(renderedSlides[i2].item === item) {\r\n              slide = renderedSlides[i2];\r\n            }\r\n          }\r\n\r\n          if(!slide) {\r\n            slide = slideFactory(item);\r\n            slide.element.css({position: 'absolute', width: '100%', height: '100%'});\r\n            renderedSlides.push(slide);\r\n          }\r\n\r\n          slide.element.css(this.TRANSFORM_PROP, 'translate(' + i * 100 + '%' + ', 0)');\r\n        };\r\n      }\r\n    },\r\n\r\n    translateSlides: function(offset, duration) {\r\n      this.translateContainer((-offset -this.index) * 100 + '%', duration + 'ms');\r\n    },\r\n\r\n    getSlidesPosition: function() {\r\n      return (-this.getContainerPosition() / this.getContainerWidth()) - this.index;\r\n    },\r\n\r\n    getSlidePosition: function(item) {\r\n      if(this.index === null) return null;\r\n\r\n      var index = this.collection.indexOf(item);\r\n      return index === -1 ? null : index - this.index;\r\n    }\r\n\r\n  }\r\n\r\n};\r\n\r\nvar RendererPart = function(slideFactory) {\r\n\r\n  var renderedSlides = [];\r\n\r\n  return {\r\n\r\n    render: function() {\r\n      for (var i = renderedSlides.length - 1; i >= 0; i--) {\r\n        if(this.getSlidePosition(renderedSlides[i].item) === null) {\r\n          renderedSlides[i].destroy();\r\n          renderedSlides.splice(i, 1);\r\n        }\r\n      };\r\n\r\n      this.slides.left && updateSlide.call(this, -1, this.slides.left.item);\r\n      this.slides.center && updateSlide.call(this, 0, this.slides.center.item);\r\n      this.slides.right && updateSlide.call(this, 1, this.slides.right.item);\r\n\r\n      function updateSlide(position, item) {\r\n        var slide;\r\n\r\n        for (var i = renderedSlides.length - 1; i >= 0; i--) {\r\n          if(renderedSlides[i].item === item) {\r\n            slide = renderedSlides[i];\r\n          }\r\n        };\r\n        \r\n        if(!slide) {\r\n          slide = slideFactory(item);\r\n          slide.element.css({position: 'absolute', width: '100%', height: '100%'});\r\n          renderedSlides.push(slide);\r\n        }\r\n\r\n        slide.element.css(this.TRANSFORM_PROP, 'translate(' + position * 100 + '%' + ', 0)');\r\n      }\r\n    },\r\n\r\n    translateSlides: function(offset, duration) {\r\n      this.translateContainer(-offset * 100 + '%', duration + 'ms');\r\n    },\r\n\r\n    getSlidePosition: function(item) {\r\n      return this.slides.left && this.slides.left.item === item ? -1\r\n           : this.slides.center && this.slides.center.item === item ? 0\r\n           : this.slides.right && this.slides.right.item === item ? 1\r\n           : null;\r\n    },\r\n\r\n    getSlidesPosition: function() {\r\n      return -this.getContainerPosition() / this.getContainerWidth();\r\n    }\r\n\r\n  }\r\n\r\n};\r\n\r\nvar State = function(selectedSetterFn) {\r\n\r\n  var pendingCollection = null;\r\n\r\n  return {\r\n\r\n    slides: {\r\n      left: null,\r\n      center: null,\r\n      right: null\r\n    },\r\n\r\n    collection: [],\r\n\r\n    resolve: function(item) {\r\n      var collectionWasUpdated = false;\r\n      \r\n      if(pendingCollection) {\r\n        this.collection = [];\r\n        for (var i = 0, ii = pendingCollection.length; i < ii; i++) {\r\n          this.collection[i] = pendingCollection[i];\r\n        }\r\n        pendingCollection = null;\r\n        collectionWasUpdated = true;\r\n      }\r\n\r\n      var slides = this.slides,\r\n          collection = this.collection;\r\n\r\n      if(arguments.length) {\r\n        slides.center = { item: item };\r\n      }\r\n      else if(!slides.center && collection.length) {\r\n        slides.center = { item: collection[0] };\r\n      }\r\n\r\n      if(slides.center && collection.indexOf(slides.center.item) === -1) {\r\n        slides.center = collection.length ? { item: collection[0] } : null;\r\n      }\r\n\r\n      if(slides.center) {\r\n        var index = this.index = collection.indexOf(slides.center.item);\r\n        slides.left = index > 0 ? { item: collection[index - 1] } : null;\r\n        slides.right = collection.length > index + 1 ? { item: collection[index + 1] } : null;\r\n      } else {\r\n        slides.left = slides.right = null;\r\n        this.index = null;\r\n      }\r\n\r\n      slides.center && selectedSetterFn && selectedSetterFn(slides.center.item);\r\n\r\n      return collectionWasUpdated;\r\n    },\r\n\r\n    updateCollection: function(collection) {\r\n      pendingCollection = collection;\r\n    }\r\n\r\n  }\r\n\r\n};\r\nvar Touch = function() {\r\n\r\n  var initialOffset, \r\n      touchStart, \r\n      touchDelta,\r\n      isScrolling,\r\n      isDragging = false,\r\n      containerWidth;\r\n\r\n  return {\r\n    \r\n    onTouchStart: function(event) {\r\n      initialOffset = 0,\r\n      isDragging = true,\r\n      isScrolling = undefined,\r\n      containerWidth = this.getContainerWidth();\r\n\r\n      if(this.isInTransition()) {\r\n        initialOffset = this.getSlidesPosition();\r\n\r\n        var item;\r\n        if(initialOffset < -0.5) {\r\n          item = this.slides.left.item;\r\n          initialOffset = initialOffset + 1;\r\n        }\r\n        else if(initialOffset > 0.5) {\r\n          item = this.slides.right.item;\r\n          initialOffset = initialOffset - 1;\r\n        }\r\n        else {\r\n          item = this.slides.center.item;\r\n        }\r\n        \r\n        this.select(item, initialOffset);\r\n\r\n        isScrolling = false;\r\n      }\r\n      \r\n      var touches = event.touches || event.originalEvent.touches;\r\n      var touch = touches[0];\r\n\r\n      touchStart = {\r\n        x: touch.pageX,\r\n        y: touch.pageY,\r\n        time: event.timeStamp || +new Date()\r\n      };\r\n\r\n      touchDelta = {\r\n        x: 0,\r\n        y: 0\r\n      };\r\n    },\r\n\r\n    onTouchMove: function(event) {\r\n\r\n      var touches = event.touches || event.originalEvent.touches;\r\n      \r\n      if(touches.length > 1 || event.scale && event.scale !== 1)\r\n        return;\r\n\r\n      var touch = touches[0];\r\n\r\n      touchDelta = {\r\n        x: touch.pageX - touchStart.x,\r\n        y: touch.pageY - touchStart.y,\r\n      };\r\n\r\n      if(isScrolling === undefined) {\r\n        isScrolling = !!(Math.abs(touchDelta.y) > Math.abs(touchDelta.x));\r\n      }\r\n\r\n      if(isScrolling) {\r\n        isDragging = false;\r\n        return;\r\n      }\r\n      \r\n      var offset = (-touchDelta.x / containerWidth) + initialOffset;\r\n\r\n      offset = offset > 1 ? 1\r\n             : offset < -1 ? -1\r\n             : offset;\r\n\r\n      var resistance = 1;\r\n      if((offset < 0 && !this.slides.left) || (offset > 0 && !this.slides.right)) {\r\n        resistance = 1 / Math.sqrt(Math.abs(offset * containerWidth));\r\n      }\r\n      \r\n      this.move(offset * resistance);\r\n    },\r\n\r\n    onTouchEnd: function(event) {\r\n      if(isScrolling) {\r\n        isDragging = false;\r\n        return;\r\n      }\r\n\r\n      var offset = (-touchDelta.x / containerWidth) + initialOffset;\r\n\r\n      var isSlide = (Math.abs(offset) > 0.5) ||\r\n                          ((event.timeStamp || +new Date()) - touchStart.time < 250 && Math.abs(touchDelta.x) > 20);\r\n\r\n      var item, transition;\r\n      if(isSlide && offset < 0 && this.slides.left) {\r\n        item = this.slides.left.item;\r\n        transition = offset <= -1 ? null : -1;\r\n      }\r\n\r\n      else if(isSlide && offset > 0 && this.slides.right) {\r\n        item = this.slides.right.item;\r\n        transition = offset >= 1 ? null : 1;\r\n      } \r\n      \r\n      else if(Math.abs(offset) > 0) {\r\n        item = this.slides.center.item;\r\n        transition = 0;\r\n      }\r\n\r\n      else {\r\n        item = this.slides.center.item;\r\n        transition = null;\r\n      }\r\n\r\n      if(transition !== null) {\r\n        this.transition(transition, function() {\r\n          this.select(item);\r\n        });\r\n      } else {\r\n        this.select(item);\r\n      }\r\n\r\n      isDragging = false;\r\n    },\r\n\r\n    isDragging: function() {\r\n      return isDragging;\r\n    }\r\n\r\n  }\r\n\r\n};\r\n\r\nangular.module('swiperRepeat', ['ng'])\r\n\r\n  .directive('swiperRepeat', ['$parse', function($parse) {\r\n\r\n    var DEFAULTS = {\r\n      preventDefault: true,\r\n      stopPropagation: false,\r\n      prerender: false,\r\n      retranslator: null,\r\n      disableTouch: false\r\n    };\r\n\r\n    return {\r\n      restrict: 'A',\r\n      transclude: 'element',\r\n      priority: 1000,\r\n      terminal: true,\r\n      link: function($scope, $element, $attrs, ctrl, $transclude) {\r\n\r\n        var expression = $attrs.swiperRepeat || '',\r\n            match = expression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)\\s*$/),\r\n            selectedExp = $attrs.swiperRepeatSelected ? $attrs.swiperRepeatSelected : null,\r\n            setSelectedFn = selectedExp ? $parse(selectedExp).assign : null,\r\n            optionsFn = $attrs.swiperRepeatOptions ? $parse($attrs.swiperRepeatOptions) : null,\r\n            options = angular.copy(DEFAULTS);\r\n\r\n        optionsFn && angular.extend(options, optionsFn($scope));\r\n\r\n        if (!match) {\r\n          throw new Error(\"Expected expression in form of '_item_ in _collection_' but got \" + expression + \".\");\r\n        }\r\n\r\n        var itemExp = match[1],\r\n            collectionExp = match[2],\r\n            swiper = {},\r\n            needsDigest = false;\r\n\r\n\r\n        var container = angular.element('<div style=\"position:relative;width:100%;height:100%;\"></div>');\r\n        $element.after(container);\r\n\r\n\r\n        function slideFactory(item) {\r\n          var scope = $scope.$new();\r\n          scope[itemExp] = item;\r\n\r\n          var element = $transclude(scope, function(clone) {\r\n            container.append(clone);\r\n          });\r\n\r\n          needsDigest = true;\r\n\r\n          return {\r\n\r\n            element: element,\r\n            item: item,\r\n            \r\n            destroy: function() {\r\n              scope.$destroy();\r\n              element.remove();\r\n              needsDigest = true;\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n        function select(value) {\r\n          setSelectedFn && setSelectedFn($scope, value);\r\n          needsDigest = true;\r\n        }\r\n\r\n        function $digest(fn, args) {\r\n          needsDigest = false;\r\n          fn.apply(swiper, args);\r\n          if(needsDigest) {\r\n            $scope.$digest();\r\n            needsDigest = false;\r\n          }\r\n        }\r\n\r\n\r\n        angular.extend(swiper, \r\n          Polyfill(), \r\n          Container(container), \r\n          Renderer(options.retranslator),\r\n          State(select),\r\n          Touch(),\r\n          Api(),\r\n          options.prerender ? RendererFull(slideFactory) : RendererPart(slideFactory)\r\n        );\r\n\r\n        if(!options.disableTouch) {\r\n          container.on('touchstart', touchEventHandler(swiper.onTouchStart));\r\n          container.on('touchmove', touchEventHandler(swiper.onTouchMove));\r\n          container.on('touchend', touchEventHandler(swiper.onTouchEnd));  \r\n        }\r\n        \r\n        function touchEventHandler(fn) {\r\n          return function(event) {\r\n            options.preventDefault && event.preventDefault();\r\n            options.stopPropagation && event.stopPropagation();\r\n            $digest(fn, arguments);\r\n          }\r\n        }\r\n\r\n\r\n        container.on(swiper.TRANSITIONEND_EVENT, function(event) {\r\n          if(event.target !== container[0]) {\r\n            return;\r\n          }\r\n          event.stopPropagation();\r\n          $digest(swiper.onTransitionEnd, arguments);      \r\n        });\r\n\r\n\r\n        var changes = {}, \r\n            actionScheduled = false;\r\n\r\n        function scheduleAsyncAction() {\r\n          if(!actionScheduled) {\r\n            $scope.$evalAsync(function() {\r\n              swiper.applyChanges(changes);\r\n              actionScheduled = false;\r\n              changes = {};\r\n            });\r\n            actionScheduled = true;\r\n          }\r\n        }\r\n\r\n        $scope.$watchCollection(collectionExp, function(value) {\r\n          changes.collection = value;\r\n          scheduleAsyncAction();\r\n        });\r\n\r\n        if(selectedExp) {\r\n          $scope.$watch(selectedExp, function(value) {\r\n            changes.selected = value;\r\n            scheduleAsyncAction();\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }]);\r\n})(angular, window, document);","angular.module('alpacaViewer', [\r\n\t'alpacaTemplates', \r\n\t'swiperRepeat'\r\n]);","angular.module('alpacaViewer').directive('alpacaViewer', function() {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\ttemplateUrl: 'alpaca-template-index',\r\n\t\tscope: {\r\n\t\t\tslides: '=',\r\n\t\t\tselected: '='\r\n\t\t}\r\n\t};\r\n});","angular.module('alpacaViewer').directive('alpacaSlides', [\r\n\t'$compile',\r\n\tfunction($compile) {\r\n\r\n\t\tvar link = function($scope, element, attrs){\r\n\t\t\tvar template = {};\r\n\r\n\t\t\tif (Array.isArray($scope.slides)){\r\n\t\t\t\ttemplate = angular.element(\"<div swiper-repeat='slide in survey.slides' swiper-repeat-selected='selected'><alpaca-slide slide='slide'/></div>\");\r\n\t\t\t\tconsole.log('array');\r\n\t\t\t} else {\r\n\t\t\t\ttemplate = angular.element(\"<div style='width:100%'><alpaca-slide slide='selected'/></div>\");\r\n\t\t\t}\r\n\r\n\t\t\telement.html(template);\r\n\t\t\t$compile(template)($scope);\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\trestrict: 'E',\r\n\t\t\t//replace: true,\r\n\t\t\t//template: \"<div swiper-repeat='slide in survey.slides' swiper-repeat-selected='selected'><alpaca-slide slide='slide'/></div>\"\r\n\t\t\ttemplate: \"<div style='width:100%'><alpaca-slide slide='selected'/></div>\"\r\n\t\t\t//link: link\r\n\t\t};\r\n}]);","angular.module('alpacaViewer').directive('alpacaSlide', [\r\n\t'$compile', \r\n\t'$templateRequest', \r\n\tfunction($compile, $templateRequest) {\r\n\r\n\t\tvar link = function ($scope, element, attrs) {\r\n\t\t\t\r\n\t\t\tif ($scope.linked)\r\n\t\t\t\treturn;\r\n\t\t\t$scope.linked = true;\r\n\r\n\t\t\tif (!$scope.slide){\r\n\t\t\t\t$scope.slide = {};\r\n\t\t\t\t$scope.slide.template = $scope.template;\r\n\t\t\t\tangular.forEach($scope.schema, function(field){\r\n\t\t\t\t\t$scope.slide[field.key] = field.placeholder || 'text';\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t$scope.$watch('slide.template', function(){\r\n\t\t\t\t$templateRequest('alpaca-template-' + $scope.slide.template).then(function(tpl){\r\n\t\t\t\t\tvar template = angular.element(tpl);\r\n\t\t\t\t\tif ($scope.single)\r\n\t\t\t\t\t\telement.html(template);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\telement.html(template);\r\n\t\t\t\t\t$compile(template)($scope);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\trestrict: 'E',\r\n\t\t\tlink: link,\r\n\t\t\t//replace: true,\r\n\t\t\tscope: {\r\n\t\t\t\tslide: '=?',\r\n\t\t\t\ttemplate: '=?',\r\n\t\t\t\tschema: '=?',\r\n\t\t\t\tsingle: '=?'\r\n\t\t\t}\r\n\t\t};\r\n}]);","angular.module('alpacaViewer').controller('alpacaViewerController', ['$scope', function($scope){\r\n\t$scope.survey = {\r\n\r\n\t\tslides: [\r\n\t\t\t{\r\n\t\t\t\tid: 1, title: 'Slide 1', template: 'green'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 2, title: 'Slide 2', template: 'orange'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 3, question: 'Multiple choice with image', template: 'multiplechoice', options:[{text: \"A\"}, {text: \"B\"}, {text: \"C\"}, {text: \"D\"}, {text: \"E\"}] \r\n\t\t\t\t, image_align: \"Left\", image_url: 'https://dummyimage.com/600x400/ffffff/00bcd4.jpg&text=img.', content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 4, question: 'Multiple choice without image', template: 'multiplechoice_sans_image', options:[{text: \"A\"}, {text: \"B\"}, {text: \"C\"}, {text: \"D\"}, {text: \"E\"}] \r\n\t\t\t\t, content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse nibh eros, placerat a vulputate quis, faucibus quis risus.\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 5, question: 'Likert with image', template: 'likert', options:[{text: \"strongly agree\"}, {text: \"agree\"}, {text: \"neutral\"}, {text: \"disagree\"}, {text: \"strongly disagree\"}] \r\n\t\t\t\t, image_align: \"Left\", image_url: 'https://dummyimage.com/600x400/ffffff/00bcd4.jpg&text=img.', content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 6, question: 'Likert without image', template: 'likert_sans_image', options:[{text: \"strongly agree\"}, {text: \"agree\"}, {text: \"neutral\"}, {text: \"disagree\"}, {text: \"strongly disagree\"}] \r\n\t\t\t\t, content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse nibh eros, placerat a vulputate quis, faucibus quis risus.\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 7, question: 'Testing Just Plain image', template: 'image', image_align: \"Top\", image_url: 'https://dummyimage.com/600x400/ffffff/00bcd4.jpg&text=img.'\r\n\t\t\t\t, content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse nibh eros, placerat a vulputate quis, faucibus quis risus.\"\r\n\t\t\t}\r\n\t\t]\r\n\r\n\t}\r\n\r\n\t$scope.selected = $scope.survey.slides[4];\r\n\r\n}]);"]}