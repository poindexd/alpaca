{"version":3,"sources":["editor.js","device-preview.js"],"names":["angular","module","directive","$compile","$templateRequest","link","$scope","element","attrs","model","template","then","tpl","after","restrict","scope","schema","controller","$templateList","$schemas","templates","console","log","survey","slides","id","title","content","selected","schemas","devices","iphone","name","width","height","material_icon","desktop","tablet","setDevice","device","selectedDevice","$on","slide","type","field","el","$parent","parent","frame_size","child","$watch","fit","scale","css","background","display","align-items","justify-content","zoom","translate","x","Math","max","y","iframe","transform","$timeout","transclude","replace","$directiveElement","$attrs","$controller","$transclude","$children","otherScope","html","find","onload","linked","iframeBody","contentWindow","document","body","$","clone","appendTo","contents","elem","append","$emit","src"],"mappings":"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","file":"alpaca-editor.min.js","sourcesContent":["angular.module('alpacaEditor', ['swiperRepeat','alpacaViewer', 'alpacaSchemas', 'alpacaTypes']);\r\n\r\n\r\nangular.module('alpacaEditor').directive('alpacaForm', [\r\n\t'$compile', \r\n\t'$templateRequest',\r\n\tfunction($compile, $templateRequest) {\r\n\r\n\t\tvar link = function ($scope, element, attrs) {\r\n\r\n\t\t\t\t$templateRequest($scope.model.template).then(function(tpl){\r\n\t\t\t\t\tvar template = angular.element(tpl);\r\n\t\t\t\t\telement.after(template);\r\n\t\t\t\t\t$compile(template)($scope);\r\n\t\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\trestrict: 'E',\r\n\t\t\tlink: link,\r\n\t\t\tscope:{\r\n\t\t\t\tmodel: '=',\r\n\t\t\t\tschema: '='\r\n\t\t\t}\r\n\t\t};\r\n}]);\r\n\r\nangular.module('alpacaEditor').controller('alpacaEditorController', [\r\n\t'$scope',\r\n\t'$templateList',\r\n\t'$schemas',\r\n\tfunction($scope, $templateList, $schemas){\r\n\r\n\r\n\t$scope.templates = $templateList.templates;\r\n\tconsole.log($templateList);\r\n\t\r\n\t$scope.survey = {\r\n\r\n\t\tslides: [\r\n\t\t\t{\r\n\t\t\t\tid: 1, title: 'Slide 1', content: 'Foo', template: 'green'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 2, title: 'Slide 2', content: 'Bar', template: 'orange'\r\n\t\t\t}\r\n\t\t]\r\n\r\n\t};\r\n\t$scope.selected = $scope.survey.slides[1];\r\n\r\n\t$scope.schemas = $schemas.schemas;\r\n\t$scope.schema = $scope.schemas['orange'];\r\n\r\n\t/*\r\n\t$scope.schema = [\r\n\t\t{\r\n\t\t\tkey: 'title',\r\n\t\t\ttype: 'input'\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: 'content',\r\n\t\t\ttype: 'textarea'\r\n\t\t}\r\n\r\n\t];*/\r\n\r\n  $scope.devices = {\r\n    iphone: {\r\n      name: 'iPhone',\r\n      width: 480,\r\n      height: 720,\r\n      material_icon: 'smartphone'\r\n    },\r\n    desktop: {\r\n      name: 'Desktop',\r\n      width: 1920,\r\n      height: 1080,\r\n      material_icon: 'desktop_windows'\r\n    },\r\n    tablet: {\r\n      name: 'Tablet',\r\n      width: 800,\r\n      height: 400,\r\n      material_icon: 'tablet'\r\n    }\r\n  };\r\n\r\n  $scope.setDevice = function(device) {\r\n    $scope.selectedDevice = device;\r\n    console.log('set device:', device);\r\n  }\r\n\r\n  $scope.$on('device-ready', function(){\r\n  \t$scope.setDevice($scope.devices.iphone);\r\n  });\r\n  \r\n}]);\r\n\r\nangular.module('alpacaEditor').directive('alpacaForm', [\r\n\t'$compile', \r\n\t'$templateRequest', \r\n\tfunction($compile, $templateRequest) {\r\n\r\n\t\tvar link = function ($scope, element, attrs) {\r\n\t\t\t\r\n\t\t\t$templateRequest('alpaca-type-' + $scope.slide.template).then(function(tpl){\r\n\t\t\t\tvar template = angular.element(tpl);\r\n\t\t\t\telement.after(template);\r\n\t\t\t\t$compile(template)($scope);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\trestrict: 'E',\r\n\t\t\tlink: link\r\n\t\t};\r\n}]);\r\n\r\nangular.module('alpacaEditor').directive('alpacaField', [\r\n\t'$compile', \r\n\t'$templateRequest', \r\n\tfunction($compile, $templateRequest) {\r\n\r\n\t\tvar link = function ($scope, element, attrs) {\r\n\t\t\tconsole.log($scope.type)\r\n\t\t\t$templateRequest('alpaca-type-' + $scope.type).then(function(tpl){\r\n\t\t\t\tvar template = angular.element(tpl);\r\n\t\t\t\telement.after(template);\r\n\t\t\t\t$compile(template)($scope);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\trestrict: 'E',\r\n\t\t\tlink: link,\r\n\t\t\tscope: {\r\n\t\t\t\tmodel: '=',\r\n\t\t\t\ttype: '=',\r\n\t\t\t\tfield: '='\r\n\t\t\t}\r\n\t\t};\r\n}]);","/*  Todo:\r\n *  *remove jquery dep\r\n *  *combine directives\r\n *  *on window resize\r\n *  *support iframe templates\r\n *  *clean up\r\n *  *publish to github\r\n *  *publish to npm\r\n */\r\n\r\nangular.module('alpacaEditor').directive('devicePreview', function() {\r\n\r\n  var link = function($scope, el, attrs) {\r\n\r\n    console.log($scope.$parent);\r\n    var parent = angular.element(el).parent();\r\n    parent.width = $scope.$parent.frame_size.width;//$('#wrapper').width();\r\n    parent.height = $scope.$parent.frame_size.height;//$('#wrapper').height();\r\n\r\n    console.log('device-size', $scope.$parent.frame_size);\r\n\r\n    var child = angular.element(el);\r\n\r\n    $scope.$watch('device', function() {\r\n\r\n      var device = $scope.device;\r\n\r\n      if (!angular.element(el).parent()[0])\r\n        return false;\r\n\r\n      console.log($scope.device);\r\n      \r\n      /*$scope.$watch(\r\n        function(){\r\n          return {\r\n            width: parent.width,\r\n            height: parent.height\r\n          }\r\n        },\r\n        function(){\r\n          $scope.$apply();\r\n        }\r\n      )*/\r\n\r\n      var fit = (parent.width / parent.height > device.width / device.height);\r\n      var scale = fit ? parent.height / device.height : parent.width / device.width;\r\n      var width = fit ? device.width * parent.height / device.height : parent.width;\r\n      var height = fit ? parent.height : device.height * parent.width / device.width;\r\n      \r\n      child.css({\r\n        'background': 'white',\r\n      })\r\n      \r\n      parent.css({\r\n        'display': 'flex',\r\n        'align-items': 'center',\r\n        'justify-content': 'center',\r\n      });\r\n\r\n      child.css({\r\n        'zoom': scale,\r\n        'width': width / scale + 'px',\r\n        'height': height / scale + 'px',\r\n      });\r\n\r\n      var translate = {\r\n        x: -1 * ((Math.max(device.width, width) - parent.width) / 2),\r\n        y: -1 * ((Math.max(device.height, height) - parent.height) / 2)\r\n      };\r\n\r\n      $scope.$parent.iframe.css({\r\n        'width': Math.max(device.width, width),\r\n        'height': Math.max(device.height, height),\r\n        'transform': 'translate(' + translate.x + 'px,' + translate.y + 'px)'\r\n      })\r\n\r\n      console.log('device', device.width, device.height);\r\n      console.log('parent', parent.width, parent.height);\r\n      console.log('scale', scale);\r\n      console.log('new', width, height);\r\n    });\r\n  };\r\n\r\n  return {\r\n    restrict: 'E',\r\n    link: link,\r\n    scope: {\r\n      'device': '='\r\n    }\r\n  }\r\n});\r\n\r\n//http://plnkr.co/edit/KRfAyc5haHyFq7FyCnxg?p=preview\r\nangular.module('alpacaEditor').directive(\"wrapInFrame\", [\r\n  '$compile',\r\n  '$timeout',\r\n  function($compile, $timeout) {\r\n  return {\r\n    restrict: \"E\",\r\n    scope: {},\r\n    transclude: true,\r\n    replace: false,\r\n    link: function($scope, $directiveElement, $attrs, $controller, $transclude) {\r\n      \r\n      $scope.$parent.frame_size = {\r\n        width: $directiveElement.parent().width(),\r\n        height: $directiveElement.parent().height()\r\n      }\r\n      \r\n      $transclude($scope.$parent, function($children, otherScope) {\r\n\r\n        $directiveElement.html(\"<iframe width='100%' height='100%'>\");\r\n        var iframe = $directiveElement.find(\"iframe\")[0];\r\n\r\n        $scope.$parent.iframe = angular.element(iframe);\r\n\r\n        iframe.onload = function() {\r\n\r\n          $scope.$parent.linked = true;\r\n          \r\n          var iframeBody = angular.element(iframe.contentWindow.document.body);\r\n\r\n          $(\"link[rel='stylesheet'], link[type='text/css'], link[href$='.css']\").clone().appendTo($(\"iframe\").contents().find(\"head\"));\r\n          $('<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"/>').appendTo($(\"iframe\").contents().find(\"head\"));\r\n\r\n          $compile($children)($scope.$parent, function(elem) {\r\n            iframeBody.append(elem);\r\n            $scope.$parent.$emit('device-ready');\r\n          });\r\n        };\r\n\r\n        iframe.src = '';\r\n      });\r\n    }\r\n  };\r\n}]);"]}